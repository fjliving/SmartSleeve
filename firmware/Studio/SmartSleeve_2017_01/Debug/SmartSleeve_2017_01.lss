
SmartSleeve_2017_01.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000005a  00800100  00005a82  00005b16  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00005a82  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000010f  0080015a  0080015a  00005b70  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00005b70  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00005bcc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000720  00000000  00000000  00005c0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000b279  00000000  00000000  0000632c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000025b4  00000000  00000000  000115a5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000389f  00000000  00000000  00013b59  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00001630  00000000  00000000  000173f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001b3c  00000000  00000000  00018a28  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000095be  00000000  00000000  0001a564  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000007f0  00000000  00000000  00023b22  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 dc 1a 	jmp	0x35b8	; 0x35b8 <__ctors_end>
       4:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
       8:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
       c:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      10:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      14:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      18:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      1c:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      20:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      24:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      28:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      2c:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      30:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      34:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      38:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      3c:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      40:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      44:	0c 94 2a 1f 	jmp	0x3e54	; 0x3e54 <__vector_17>
      48:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      4c:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      50:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      54:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      58:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      5c:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      60:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      64:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      68:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      6c:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      70:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      74:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      78:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      7c:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      80:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      84:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      88:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      8c:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      90:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      94:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      98:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      9c:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      a0:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      a4:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      a8:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      ac:	79 20       	and	r7, r9
      ae:	a1 20       	and	r10, r1
      b0:	a5 20       	and	r10, r5
      b2:	b6 20       	and	r11, r6
      b4:	ba 20       	and	r11, r10
      b6:	73 20       	and	r7, r3
      b8:	76 20       	and	r7, r6
      ba:	6a 26       	eor	r6, r26
      bc:	72 26       	eor	r7, r18
      be:	8c 26       	eor	r8, r28
      c0:	7c 26       	eor	r7, r28
      c2:	8c 26       	eor	r8, r28
      c4:	8c 26       	eor	r8, r28
      c6:	8c 26       	eor	r8, r28
      c8:	8c 26       	eor	r8, r28
      ca:	8c 26       	eor	r8, r28
      cc:	8c 26       	eor	r8, r28
      ce:	8c 26       	eor	r8, r28
      d0:	8c 26       	eor	r8, r28
      d2:	8c 26       	eor	r8, r28
      d4:	8c 26       	eor	r8, r28
      d6:	8c 26       	eor	r8, r28
      d8:	8c 26       	eor	r8, r28
      da:	8c 26       	eor	r8, r28
      dc:	8c 26       	eor	r8, r28
      de:	8c 26       	eor	r8, r28
      e0:	8c 26       	eor	r8, r28
      e2:	8c 26       	eor	r8, r28
      e4:	8c 26       	eor	r8, r28
      e6:	8c 26       	eor	r8, r28
      e8:	8c 26       	eor	r8, r28
      ea:	8c 26       	eor	r8, r28
      ec:	8c 26       	eor	r8, r28
      ee:	8c 26       	eor	r8, r28
      f0:	8c 26       	eor	r8, r28
      f2:	8c 26       	eor	r8, r28
      f4:	8c 26       	eor	r8, r28
      f6:	64 26       	eor	r6, r20
      f8:	8c 26       	eor	r8, r28
      fa:	8c 26       	eor	r8, r28
      fc:	8c 26       	eor	r8, r28
      fe:	8c 26       	eor	r8, r28
     100:	8c 26       	eor	r8, r28
     102:	8c 26       	eor	r8, r28
     104:	8c 26       	eor	r8, r28
     106:	8c 26       	eor	r8, r28
     108:	58 26       	eor	r5, r24
     10a:	8c 26       	eor	r8, r28
     10c:	8c 26       	eor	r8, r28
     10e:	8c 26       	eor	r8, r28
     110:	8c 26       	eor	r8, r28
     112:	8c 26       	eor	r8, r28
     114:	8c 26       	eor	r8, r28
     116:	8c 26       	eor	r8, r28
     118:	8c 26       	eor	r8, r28
     11a:	8c 26       	eor	r8, r28
     11c:	8c 26       	eor	r8, r28
     11e:	82 26       	eor	r8, r18
     120:	87 26       	eor	r8, r23
     122:	07 63       	ori	r16, 0x37	; 55
     124:	42 36       	cpi	r20, 0x62	; 98
     126:	b7 9b       	sbis	0x16, 7	; 22
     128:	d8 a7       	std	Y+40, r29	; 0x28
     12a:	1a 39       	cpi	r17, 0x9A	; 154
     12c:	68 56       	subi	r22, 0x68	; 104
     12e:	18 ae       	std	Y+56, r1	; 0x38
     130:	ba ab       	std	Y+50, r27	; 0x32
     132:	55 8c       	ldd	r5, Z+29	; 0x1d
     134:	1d 3c       	cpi	r17, 0xCD	; 205
     136:	b7 cc       	rjmp	.-1682   	; 0xfffffaa6 <__eeprom_end+0xff7efaa6>
     138:	57 63       	ori	r21, 0x37	; 55
     13a:	bd 6d       	ori	r27, 0xDD	; 221
     13c:	ed fd       	.word	0xfded	; ????
     13e:	75 3e       	cpi	r23, 0xE5	; 229
     140:	f6 17       	cp	r31, r22
     142:	72 31       	cpi	r23, 0x12	; 18
     144:	bf 00       	.word	0x00bf	; ????
     146:	00 00       	nop
     148:	80 3f       	cpi	r24, 0xF0	; 240
     14a:	08 00       	.word	0x0008	; ????
     14c:	00 00       	nop
     14e:	be 92       	st	-X, r11
     150:	24 49       	sbci	r18, 0x94	; 148
     152:	12 3e       	cpi	r17, 0xE2	; 226
     154:	ab aa       	std	Y+51, r10	; 0x33
     156:	aa 2a       	or	r10, r26
     158:	be cd       	rjmp	.-1156   	; 0xfffffcd6 <__eeprom_end+0xff7efcd6>
     15a:	cc cc       	rjmp	.-1640   	; 0xfffffaf4 <__eeprom_end+0xff7efaf4>
     15c:	4c 3e       	cpi	r20, 0xEC	; 236
     15e:	00 00       	nop
     160:	00 80       	ld	r0, Z
     162:	be ab       	std	Y+54, r27	; 0x36
     164:	aa aa       	std	Y+50, r10	; 0x32
     166:	aa 3e       	cpi	r26, 0xEA	; 234
     168:	00 00       	nop
     16a:	00 00       	nop
     16c:	bf 00       	.word	0x00bf	; ????
     16e:	00 00       	nop
     170:	80 3f       	cpi	r24, 0xF0	; 240
     172:	00 00       	nop
     174:	00 00       	nop
     176:	00 08       	sbc	r0, r0
     178:	41 78       	andi	r20, 0x81	; 129
     17a:	d3 bb       	out	0x13, r29	; 19
     17c:	43 87       	std	Z+11, r20	; 0x0b
     17e:	d1 13       	cpse	r29, r17
     180:	3d 19       	sub	r19, r13
     182:	0e 3c       	cpi	r16, 0xCE	; 206
     184:	c3 bd       	out	0x23, r28	; 35
     186:	42 82       	std	Z+2, r4	; 0x02
     188:	ad 2b       	or	r26, r29
     18a:	3e 68       	ori	r19, 0x8E	; 142
     18c:	ec 82       	std	Y+4, r14	; 0x04
     18e:	76 be       	out	0x36, r7	; 54
     190:	d9 8f       	std	Y+25, r29	; 0x19
     192:	e1 a9       	ldd	r30, Z+49	; 0x31
     194:	3e 4c       	sbci	r19, 0xCE	; 206
     196:	80 ef       	ldi	r24, 0xF0	; 240
     198:	ff be       	out	0x3f, r15	; 63
     19a:	01 c4       	rjmp	.+2050   	; 0x99e <__LOCK_REGION_LENGTH__+0x59e>
     19c:	ff 7f       	andi	r31, 0xFF	; 255
     19e:	3f 00       	.word	0x003f	; ????
     1a0:	00 00       	nop
	...

000001a4 <__trampolines_end>:
     1a4:	00 00       	nop
     1a6:	25 00       	.word	0x0025	; ????
     1a8:	28 00       	.word	0x0028	; ????
     1aa:	2b 00       	.word	0x002b	; ????
     1ac:	2e 00       	.word	0x002e	; ????
     1ae:	31 00       	.word	0x0031	; ????

000001b0 <u8g_avr_ddr_P>:
     1b0:	00 00 24 00 27 00 2a 00 2d 00 30 00                 ..$.'.*.-.0.

000001bc <u8g_dev_st7565_lm6059_sleep_off>:
     1bc:	ff e0 ff d1 a4 af ff 32 ff d0 ff fe                 .......2....

000001c8 <u8g_dev_st7565_lm6059_sleep_on>:
     1c8:	ff e0 ff d1 ac 00 ae a5 ff d0 ff fe                 ............

000001d4 <u8g_dev_st7565_lm6059_data_start>:
     1d4:	ff e0 ff d1 10 01 ff fe                             ........

000001dc <u8g_dev_st7565_lm6059_init_seq>:
     1dc:	ff d0 ff e0 ff d1 ff cf a3 a0 c8 60 2c ff 32 2e     ...........`,.2.
     1ec:	ff 32 2f ff 32 26 a6 81 18 af ff 64 a5 ff 64 ff     .2/.2&.....d..d.
     1fc:	64 a4 ff d0 ff fe                                   d.....

00000202 <u8g_font_fub30r>:
     202:	00 3b 36 fd f5 1e 09 a3 15 b6 20 7f f9 21 f5 1f     .;6....... ..!..
     212:	f8 00 00 00 0c 00 00 05 1e 1e 10 05 00 f8 f8 f8     ................
     222:	f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8     ................
     232:	f8 f8 f8 00 00 00 f8 f8 f8 f8 f8 0f 0c 18 15 03     ................
     242:	12 fc 7e fc 7e fc 7e fc 7e f8 7e f8 7e f8 3c f8     ..~.~.~.~.~.~.<.
     252:	3c 78 3c 78 3c 78 3c 78 3c 19 1e 78 1d 02 00 00     <x<x<x<x<..x....
     262:	3c 1e 00 00 3c 1e 00 00 78 3c 00 00 78 3c 00 00     <...<...x<..x<..
     272:	78 3c 00 00 78 78 00 00 f0 78 00 00 f0 78 00 0f     x<..xx...x...x..
     282:	ff ff 80 1f ff ff 00 1f ff ff 00 1f ff ff 00 01     ................
     292:	e0 e0 00 03 c1 e0 00 03 c1 e0 00 03 c1 e0 00 07     ................
     2a2:	83 c0 00 07 83 c0 00 7f ff fc 00 ff ff f8 00 ff     ................
     2b2:	ff f8 00 ff ff f8 00 0f 07 80 00 1e 0f 00 00 1e     ................
     2c2:	0f 00 00 1e 0f 00 00 3e 1e 00 00 3c 1e 00 00 3c     .......>...<...<
     2d2:	1e 00 00 3c 1e 00 00 15 25 6f 17 01 fc 00 60 00     ...<....%o....`.
     2e2:	00 60 00 00 60 00 03 fe 00 0f ff 80 1f ff c0 3f     .`..`..........?
     2f2:	ff e0 7f 6f e0 7e 63 f0 7c 63 f0 7c 61 f0 7c 60     ...o.~c.|c.|a.|`
     302:	00 7c 60 00 7e 60 00 7f e0 00 7f f0 00 3f fe 00     .|`.~`.......?..
     312:	1f ff 80 07 ff e0 00 ff f0 00 7f f0 00 67 f8 00     .............g..
     322:	61 f8 f8 61 f8 f8 60 f8 fc 61 f8 fc 61 f8 7e 63     a..a..`..a..a.~c
     332:	f0 7f ff f0 3f ff e0 1f ff c0 0f ff 80 03 fe 00     ....?...........
     342:	00 60 00 00 60 00 00 60 00 00 60 00 25 1e 96 29     .`..`..`..`.%..)
     352:	02 00 07 e0 00 78 00 1f f8 00 f0 00 3f fc 00 f0     .....x......?...
     362:	00 7c 3e 01 e0 00 78 1e 03 e0 00 f0 0f 03 c0 00     .|>...x.........
     372:	f0 0f 07 c0 00 f0 0f 07 80 00 f0 0f 0f 00 00 f0     ................
     382:	0f 0f 00 00 f0 0f 1e 00 00 f0 0f 1e 00 00 78 1e     ..............x.
     392:	3c 00 00 7c 3e 7c 00 00 3f fc 78 3f 00 1f f8 f8     <..|>|..?.x?....
     3a2:	ff c0 07 e0 f1 ff e0 00 01 e3 e1 f0 00 01 e3 c0     ................
     3b2:	f0 00 03 c7 80 78 00 03 c7 80 78 00 07 87 80 78     .....x....x....x
     3c2:	00 07 87 80 78 00 0f 07 80 78 00 1f 07 80 78 00     ....x....x....x.
     3d2:	1e 03 c0 f0 00 3e 03 c0 f0 00 3c 01 f3 e0 00 78     .....>....<....x
     3e2:	01 ff c0 00 78 00 7f 80 1c 1e 78 1f 02 01 03 ff     ....x.....x.....
     3f2:	00 00 0f ff 80 00 1f ff c0 00 3f 8f e0 00 3f 07     ..........?...?.
     402:	e0 00 3e 03 e0 00 3f 07 e0 00 3f 07 e0 00 1f 0f     ..>...?...?.....
     412:	c0 00 1f 9f c0 00 0f ff 80 00 0f ff 00 00 07 fc     ................
     422:	00 00 0f f8 00 00 1f f8 0f 80 3f fc 0f 80 3f 7e     ..........?...?~
     432:	0f 80 7e 7f 0f 80 7e 3f 8f 80 fc 1f cf 80 fc 0f     ..~...~?........
     442:	ff 00 f8 07 ff 00 f8 03 ff 00 fc 01 fe 00 fc 00     ................
     452:	fe 00 7e 00 fe 00 7f 83 ff 00 3f ff ff 80 1f ff     ..~.......?.....
     462:	ff e0 07 ff 87 f0 06 0c 0c 10 05 12 fc fc fc 7c     ...............|
     472:	7c 7c 7c 7c 78 78 78 78 09 24 48 10 04 fb 0f 80     ||||xxxx.$H.....
     482:	1f 00 1f 00 1f 00 3e 00 3e 00 3e 00 7e 00 7c 00     ......>.>.>.~.|.
     492:	7c 00 7c 00 7c 00 fc 00 fc 00 fc 00 fc 00 f8 00     |.|.|...........
     4a2:	f8 00 f8 00 f8 00 f8 00 fc 00 fc 00 fc 00 7c 00     ..............|.
     4b2:	7c 00 7c 00 7c 00 7e 00 3e 00 3e 00 3e 00 1f 00     |.|.|.~.>.>.>...
     4c2:	1f 00 1f 00 0f 80 08 24 24 10 04 fb f0 f8 78 7c     .......$$.....x|
     4d2:	7c 7c 3e 3e 3e 3f 3f 1f 1f 1f 1f 1f 1f 1f 1f 1f     ||>>>??.........
     4e2:	1f 1f 1f 1f 3f 3f 3f 3e 3e 3e 7c 7c 7c f8 f8 f0     ....???>>>|||...
     4f2:	10 10 20 1a 05 0e 04 20 1c 38 1e 78 1e 78 0f f0     .. .... .8.x.x..
     502:	07 e0 e3 c7 ff ff ff ff f3 cf 07 e0 0f f0 1e 78     ...............x
     512:	1e 78 1c 38 04 20 18 19 4b 28 08 00 00 38 00 00     .x.8. ..K(...8..
     522:	38 00 00 38 00 00 38 00 00 38 00 00 38 00 00 38     8..8..8..8..8..8
     532:	00 00 38 00 00 38 00 00 38 00 00 38 00 ff ff ff     ..8..8..8..8....
     542:	ff ff ff ff ff ff 00 38 00 00 38 00 00 38 00 00     .......8..8..8..
     552:	38 00 00 38 00 00 38 00 00 38 00 00 38 00 00 38     8..8..8..8..8..8
     562:	00 00 38 00 00 38 00 08 0a 0a 0c 02 fb 1f 1f 3e     ..8..8.........>
     572:	3e 3c 7c 78 78 f0 f0 0a 05 0a 0e 02 08 ff c0 ff     ><|xx...........
     582:	c0 ff c0 ff c0 ff c0 05 05 05 0c 04 00 f8 f8 f8     ................
     592:	f8 f8 0d 20 40 11 02 fe 00 78 00 78 00 78 00 f0     ... @....x.x.x..
     5a2:	00 f0 00 f0 01 e0 01 e0 01 e0 03 c0 03 c0 03 c0     ................
     5b2:	03 c0 07 80 07 80 07 80 0f 00 0f 00 0f 00 0e 00     ................
     5c2:	1e 00 1e 00 1e 00 3c 00 3c 00 3c 00 78 00 78 00     ......<.<.<.x.x.
     5d2:	78 00 78 00 f0 00 f0 00 14 1e 5a 17 01 01 03 fc     x.x.......Z.....
     5e2:	00 0f ff 00 1f ff 80 3f 0f 80 3e 07 c0 7c 03 c0     .......?..>..|..
     5f2:	7c 03 e0 7c 03 e0 7c 03 e0 f8 01 f0 f8 01 f0 f8     |..|..|.........
     602:	01 f0 f8 01 f0 f8 01 f0 f8 01 f0 f8 01 f0 f8 01     ................
     612:	f0 f8 01 f0 f8 01 f0 f8 01 f0 f8 01 f0 7c 03 e0     .............|..
     622:	7c 03 e0 7c 03 e0 7c 03 e0 3e 07 c0 3f 0f 80 1f     |..|..|..>..?...
     632:	ff 80 0f ff 00 03 fc 00 0c 1e 3c 17 04 00 01 f0     ..........<.....
     642:	03 f0 0f f0 3f f0 ff f0 ff f0 fd f0 f9 f0 e1 f0     ....?...........
     652:	81 f0 01 f0 01 f0 01 f0 01 f0 01 f0 01 f0 01 f0     ................
     662:	01 f0 01 f0 01 f0 01 f0 01 f0 01 f0 01 f0 01 f0     ................
     672:	01 f0 01 f0 01 f0 01 f0 01 f0 14 1e 5a 17 01 01     ............Z...
     682:	03 ff 00 07 ff 80 1f ff c0 1f ff e0 3f ff f0 3f     ............?..?
     692:	03 f0 7e 01 f0 7e 01 f0 7c 01 f0 00 01 f0 00 03     ..~..~..|.......
     6a2:	f0 00 03 f0 00 07 e0 00 0f e0 00 0f c0 00 1f 80     ................
     6b2:	00 3f 00 00 fe 00 01 fc 00 03 f8 00 07 f0 00 0f     .?..............
     6c2:	e0 00 3f 80 00 7f 00 00 fc 00 00 ff ff f0 ff ff     ..?.............
     6d2:	f0 ff ff f0 ff ff f0 ff ff f0 13 1e 5a 17 02 01     ............Z...
     6e2:	07 fc 00 1f ff 00 3f ff 80 7f ff 80 7f ff c0 fc     ......?.........
     6f2:	0f c0 fc 07 c0 f8 07 c0 00 07 c0 00 07 c0 00 0f     ................
     702:	c0 00 3f c0 03 ff 80 03 fe 00 03 fc 00 03 ff 00     ..?.............
     712:	03 ff 80 00 1f c0 00 07 e0 00 07 e0 00 07 e0 00     ................
     722:	03 e0 f8 07 e0 fc 07 e0 fc 07 c0 7e 0f c0 7f ff     ...........~....
     732:	80 3f ff 80 1f ff 00 0f fc 00 15 1e 5a 17 01 00     .?..........Z...
     742:	00 3f 80 00 3f 80 00 7f 80 00 ff 80 00 ff 80 01     .?..?...........
     752:	ff 80 01 ff 80 03 ef 80 03 cf 80 07 cf 80 0f 8f     ................
     762:	80 0f 8f 80 1f 0f 80 1f 0f 80 3e 0f 80 3e 0f 80     ..........>..>..
     772:	7c 0f 80 fc 0f 80 f8 0f 80 ff ff f8 ff ff f8 ff     |...............
     782:	ff f8 ff ff f8 ff ff f8 00 0f 80 00 0f 80 00 0f     ................
     792:	80 00 0f 80 00 0f 80 00 0f 80 13 1e 5a 17 02 00     ............Z...
     7a2:	7f ff c0 7f ff c0 7f ff c0 7f ff c0 7f ff c0 7c     ...............|
     7b2:	00 00 7c 00 00 7c 00 00 7c 00 00 7c 00 00 7c 00     ..|..|..|..|..|.
     7c2:	00 7c fc 00 7d ff 00 7f ff 80 7f ff c0 7f 0f e0     .|..}...........
     7d2:	7e 07 e0 7c 03 e0 00 03 e0 00 03 e0 00 03 e0 00     ~..|............
     7e2:	03 e0 00 03 e0 f8 07 e0 fc 07 e0 fc 0f c0 7f ff     ................
     7f2:	80 7f ff 80 3f fe 00 0f fc 00 14 1e 5a 17 01 01     ....?.......Z...
     802:	03 fe 00 07 ff 00 0f ff 80 1f ff c0 3f ff c0 3f     ............?..?
     812:	07 e0 7e 03 e0 7e 03 e0 7c 00 00 7c 00 00 fc 00     ..~..~..|..|....
     822:	00 f8 00 00 f9 ff 00 fb ff 80 ff ff c0 ff 0f e0     ................
     832:	fe 07 e0 fe 03 f0 fc 03 f0 fc 03 f0 fc 01 f0 fc     ................
     842:	01 f0 7c 03 f0 7c 03 f0 7e 03 e0 3f 07 e0 3f ff     ..|..|..~..?..?.
     852:	c0 1f ff 80 0f ff 00 03 fe 00 13 1e 5a 17 02 00     ............Z...
     862:	ff ff e0 ff ff e0 ff ff e0 ff ff e0 ff ff e0 00     ................
     872:	07 e0 00 07 e0 00 07 c0 00 0f c0 00 0f c0 00 1f     ................
     882:	80 00 1f 80 00 3f 00 00 3f 00 00 3f 00 00 7e 00     .....?..?..?..~.
     892:	00 7e 00 00 fc 00 00 fc 00 01 fc 00 01 f8 00 01     .~..............
     8a2:	f8 00 03 f0 00 03 f0 00 07 f0 00 07 e0 00 0f e0     ................
     8b2:	00 0f c0 00 0f c0 00 1f c0 00 14 1e 5a 17 01 01     ............Z...
     8c2:	07 fe 00 1f ff 80 3f ff c0 7f ff e0 7f ff e0 7e     ......?........~
     8d2:	07 e0 7c 03 e0 7c 03 e0 7c 03 e0 7c 03 e0 7e 07     ..|..|..|..|..~.
     8e2:	e0 7f 0f c0 3f ff 80 0f ff 00 07 fc 00 1f ff 00     ....?...........
     8f2:	3f ff c0 7f 0f e0 7c 07 e0 fc 03 f0 fc 03 f0 f8     ?.....|.........
     902:	01 f0 f8 03 f0 fc 03 f0 fc 03 f0 fe 07 f0 7f ff     ................
     912:	e0 3f ff c0 1f ff 80 0f ff 00 14 1e 5a 17 01 01     .?..........Z...
     922:	03 fc 00 0f ff 00 1f ff 80 3f ff c0 7f ff c0 7e     .........?.....~
     932:	07 e0 fc 07 e0 fc 03 e0 fc 03 f0 f8 03 f0 f8 03     ................
     942:	f0 fc 03 f0 fc 07 f0 7c 07 f0 7f 0f f0 3f ff f0     .......|.....?..
     952:	3f fd f0 1f f9 f0 07 e1 f0 00 03 f0 00 03 e0 00     ?...............
     962:	03 e0 00 03 e0 7c 07 e0 7c 07 c0 7e 0f c0 3f ff     .....|..|..~..?.
     972:	80 1f ff 00 0f fe 00 07 fc 00 05 14 14 0c 05 00     ................
     982:	f8 f8 f8 f8 f8 00 00 00 00 00 00 00 00 00 00 f8     ................
     992:	f8 f8 f8 f8 09 19 32 0d 02 fb 1f 00 1f 00 1f 00     ......2.........
     9a2:	1f 00 1f 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     9ba:	1f 80 1f 00 3f 00 3e 00 3e 00 7c 00 7c 00 78 00     ....?.>.>.|.|.x.
     9ca:	f8 00 f0 00 18 15 3f 28 08 02 00 00 01 00 00 0f     ......?(........
     9da:	00 00 3f 00 01 fc 00 07 e0 00 3f 00 00 fc 00 07     ..?.......?.....
     9ea:	e0 00 3f 00 00 fc 00 00 e0 00 00 f8 00 00 7e 00     ..?...........~.
     9fa:	00 0f c0 00 03 f0 00 00 7e 00 00 1f c0 00 03 f0     ........~.......
     a0a:	00 00 7e 00 00 1f 00 00 03 18 0a 1e 28 08 07 ff     ..~.........(...
     a1a:	ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00     ................
     a2a:	00 00 00 00 ff ff ff ff ff ff ff ff ff 18 15 3f     ...............?
     a3a:	28 08 02 80 00 00 f0 00 00 fc 00 00 3f 80 00 07     (...........?...
     a4a:	e0 00 00 fc 00 00 3f 00 00 07 e0 00 00 fc 00 00     ......?.........
     a5a:	3f 00 00 07 00 00 1f 00 00 7e 00 03 f0 00 0f c0     ?........~......
     a6a:	00 7e 00 03 f8 00 0f c0 00 7e 00 00 f8 00 00 c0     .~.......~......
     a7a:	00 00 12 1e 5a 16 01 01 07 fc 00 1f fe 00 3f ff     ....Z.........?.
     a8a:	80 7f ff 80 fc 0f c0 78 07 c0 38 07 c0 00 07 c0     .......x..8.....
     a9a:	00 07 c0 00 0f c0 00 0f 80 00 1f 80 00 3f 00 00     .............?..
     aaa:	7e 00 00 f8 00 01 f0 00 03 e0 00 03 c0 00 03 c0     ~...............
     aba:	00 03 c0 00 03 c0 00 03 c0 00 00 00 00 00 00 00     ................
     aca:	00 00 00 03 e0 00 03 e0 00 03 e0 00 03 e0 00 03     ................
     ada:	e0 00 26 27 c3 2a 02 f8 00 03 ff e0 00 00 1f ff     ..&'.*..........
     aea:	f8 00 00 7f ff fe 00 00 ff ff ff 00 03 ff ff ff     ................
     afa:	80 07 fe 00 7f c0 07 f8 00 1f e0 0f e0 00 0f f0     ................
     b0a:	1f c0 00 07 f0 3f 80 00 03 f8 3f 01 f1 f1 f8 3f     .....?....?....?
     b1a:	07 fd f1 fc 7e 0f ff f0 fc 7e 1f ff f0 fc 7c 1f     ....~....~....|.
     b2a:	87 f0 fc fc 3f 03 f0 7c fc 3f 03 f0 7c fc 3e 01     ....?..|.?..|.>.
     b3a:	f0 7c fc 3e 01 f0 7c f8 3e 01 f0 7c f8 3e 01 f0     .|.>..|.>..|.>..
     b4a:	7c f8 3e 01 f0 7c fc 3e 01 f0 7c fc 3f 03 f0 fc     |.>..|.>..|.?...
     b5a:	7c 3f 03 f8 f8 7c 1f 87 f9 f8 7e 1f ff ff f0 3f     |?...|....~....?
     b6a:	0f fe ff e0 3f 07 fc 7f c0 1f 81 f8 1f 00 1f c0     ....?...........
     b7a:	00 00 00 0f e0 00 00 00 07 f8 00 00 00 03 fe 00     ................
     b8a:	38 00 01 ff ff f8 00 00 ff ff f8 00 00 3f ff f8     8............?..
     b9a:	00 00 0f ff f8 00 00 01 ff e0 00 1b 1e 78 1c 01     .............x..
     baa:	00 00 3f 00 00 00 3f 80 00 00 7f 80 00 00 7f 80     ..?...?.........
     bba:	00 00 7f c0 00 00 ff c0 00 00 ff e0 00 00 ff e0     ................
     bca:	00 01 fb e0 00 01 f3 f0 00 03 f3 f0 00 03 f1 f0     ................
     bda:	00 03 e1 f8 00 07 e1 f8 00 07 e0 f8 00 07 c0 fc     ................
     bea:	00 0f c0 fc 00 0f c0 7e 00 0f 80 7e 00 1f ff fe     .......~...~....
     bfa:	00 1f ff ff 00 3f ff ff 00 3f ff ff 00 3f ff ff     .....?...?...?..
     c0a:	80 7e 00 1f 80 7e 00 1f 80 7e 00 0f c0 fc 00 0f     .~...~...~......
     c1a:	c0 fc 00 07 c0 f8 00 07 e0 16 1e 5a 1b 03 00 ff     ...........Z....
     c2a:	fe 00 ff ff 80 ff ff e0 ff ff e0 ff ff f0 f8 07     ................
     c3a:	f0 f8 03 f0 f8 01 f0 f8 01 f0 f8 01 f0 f8 03 f0     ................
     c4a:	f8 07 e0 ff ff c0 ff ff 80 ff fe 00 ff ff c0 ff     ................
     c5a:	ff f0 f8 03 f8 f8 01 f8 f8 00 fc f8 00 fc f8 00     ................
     c6a:	fc f8 00 fc f8 01 fc f8 03 fc ff ff f8 ff ff f0     ................
     c7a:	ff ff e0 ff ff c0 ff ff 00 18 1e 5a 1d 02 01 01     ...........Z....
     c8a:	ff c0 03 ff f0 0f ff f8 0f ff fc 1f ff fe 3f 80     ..............?.
     c9a:	fe 3e 00 7f 7e 00 3f 7c 00 3f 7c 00 3f fc 00 00     .>..~.?|.?|.?...
     caa:	fc 00 00 fc 00 00 f8 00 00 f8 00 00 f8 00 00 f8     ................
     cba:	00 00 f8 00 00 fc 00 00 fc 00 00 7c 00 3f 7c 00     ...........|.?|.
     cca:	3f 7e 00 7f 3e 00 7f 3f 80 fe 1f ff fe 1f ff fc     ?~..>..?........
     cda:	0f ff f8 07 ff e0 01 ff c0 18 1e 5a 1d 03 00 ff     ...........Z....
     cea:	f8 00 ff ff 00 ff ff c0 ff ff e0 ff ff f0 f8 0f     ................
     cfa:	f8 f8 01 fc f8 00 fc f8 00 7e f8 00 7e f8 00 3e     .........~..~..>
     d0a:	f8 00 3f f8 00 3f f8 00 3f f8 00 1f f8 00 1f f8     ..?..?..?.......
     d1a:	00 3f f8 00 3f f8 00 3f f8 00 3f f8 00 7e f8 00     .?..?..?..?..~..
     d2a:	7e f8 00 fc f8 01 fc f8 0f f8 ff ff f0 ff ff e0     ~...............
     d3a:	ff ff c0 ff ff 00 ff f8 00 14 1e 5a 19 03 00 ff     ...........Z....
     d4a:	ff e0 ff ff e0 ff ff e0 ff ff e0 ff ff e0 f8 00     ................
     d5a:	00 f8 00 00 f8 00 00 f8 00 00 f8 00 00 f8 00 00     ................
     d6a:	f8 00 00 f8 00 00 ff ff e0 ff ff e0 ff ff e0 ff     ................
     d7a:	ff e0 f8 00 00 f8 00 00 f8 00 00 f8 00 00 f8 00     ................
     d8a:	00 f8 00 00 f8 00 00 f8 00 00 ff ff f0 ff ff f0     ................
     d9a:	ff ff f0 ff ff f0 ff ff f0 13 1e 5a 18 03 00 ff     ...........Z....
     daa:	ff e0 ff ff e0 ff ff e0 ff ff e0 ff ff e0 f8 00     ................
     dba:	00 f8 00 00 f8 00 00 f8 00 00 f8 00 00 f8 00 00     ................
     dca:	f8 00 00 ff ff c0 ff ff c0 ff ff c0 ff ff c0 ff     ................
     dda:	ff c0 f8 00 00 f8 00 00 f8 00 00 f8 00 00 f8 00     ................
     dea:	00 f8 00 00 f8 00 00 f8 00 00 f8 00 00 f8 00 00     ................
     dfa:	f8 00 00 f8 00 00 f8 00 00 1a 1e 78 1e 02 01 00     ...........x....
     e0a:	7f f0 00 01 ff fc 00 03 ff fe 00 0f ff ff 00 0f     ................
     e1a:	ff ff 80 1f c0 3f 80 3f 80 0f c0 3f 00 0f c0 7e     .....?.?...?...~
     e2a:	00 0f c0 7e 00 07 c0 7c 00 00 00 fc 00 00 00 fc     ...~...|........
     e3a:	00 00 00 fc 00 00 00 f8 01 ff c0 f8 01 ff c0 f8     ................
     e4a:	01 ff c0 fc 01 ff c0 fc 01 ff c0 fc 00 07 c0 7c     ...............|
     e5a:	00 07 c0 7e 00 07 c0 7f 00 07 c0 3f 80 07 c0 3f     ...~.......?...?
     e6a:	e0 07 c0 1f ff ff c0 0f ff ff c0 07 ff ff c0 01     ................
     e7a:	ff ff c0 00 7f fe 00 17 1e 5a 1d 03 00 f8 00 3e     .........Z.....>
     e8a:	f8 00 3e f8 00 3e f8 00 3e f8 00 3e f8 00 3e f8     ..>..>..>..>..>.
     e9a:	00 3e f8 00 3e f8 00 3e f8 00 3e f8 00 3e f8 00     .>..>..>..>..>..
     eaa:	3e ff ff fe ff ff fe ff ff fe ff ff fe ff ff fe     >...............
     eba:	f8 00 3e f8 00 3e f8 00 3e f8 00 3e f8 00 3e f8     ..>..>..>..>..>.
     eca:	00 3e f8 00 3e f8 00 3e f8 00 3e f8 00 3e f8 00     .>..>..>..>..>..
     eda:	3e f8 00 3e f8 00 3e 05 1e 1e 0b 03 00 f8 f8 f8     >..>..>.........
     eea:	f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8     ................
     efa:	f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 14 1e 5a 19 02     .............Z..
     f0a:	00 00 01 f0 00 01 f0 00 01 f0 00 01 f0 00 01 f0     ................
     f1a:	00 01 f0 00 01 f0 00 01 f0 00 01 f0 00 01 f0 00     ................
     f2a:	01 f0 00 01 f0 00 01 f0 00 01 f0 00 01 f0 00 01     ................
     f3a:	f0 00 01 f0 00 01 f0 00 01 f0 00 01 f0 f8 01 f0     ................
     f4a:	f8 03 f0 fc 03 f0 fc 03 f0 fe 07 e0 7f ff e0 7f     ................
     f5a:	ff c0 3f ff 80 1f ff 00 0f fe 00 17 1e 5a 1b 03     ..?..........Z..
     f6a:	00 f8 01 f8 f8 03 f8 f8 07 f0 f8 0f e0 f8 0f c0     ................
     f7a:	f8 1f c0 f8 3f 80 f8 7f 00 f8 7e 00 f8 fe 00 f9     ....?.....~.....
     f8a:	fc 00 fb f8 00 fb f0 00 ff f0 00 ff f0 00 fb f8     ................
     f9a:	00 f9 fc 00 f9 fe 00 f8 fe 00 f8 7f 00 f8 7f 80     ................
     faa:	f8 3f 80 f8 1f c0 f8 1f e0 f8 0f e0 f8 07 f0 f8     .?..............
     fba:	07 f8 f8 03 f8 f8 01 fc f8 00 fe 13 1e 5a 17 03     .............Z..
     fca:	00 f8 00 00 f8 00 00 f8 00 00 f8 00 00 f8 00 00     ................
     fda:	f8 00 00 f8 00 00 f8 00 00 f8 00 00 f8 00 00 f8     ................
     fea:	00 00 f8 00 00 f8 00 00 f8 00 00 f8 00 00 f8 00     ................
     ffa:	00 f8 00 00 f8 00 00 f8 00 00 f8 00 00 f8 00 00     ................
    100a:	f8 00 00 f8 00 00 f8 00 00 f8 00 00 ff ff e0 ff     ................
    101a:	ff e0 ff ff e0 ff ff e0 ff ff e0 1f 1e 78 25 03     .............x%.
    102a:	00 ff c0 03 fe ff c0 03 fe ff c0 07 fe ff c0 07     ................
    103a:	fe ff e0 07 fe fb e0 0f fe fb e0 0f fe fb f0 0f     ................
    104a:	be fb f0 0f be f9 f0 1f be f9 f0 1f 3e f9 f8 1f     ............>...
    105a:	3e f8 f8 3f 3e f8 f8 3f 3e f8 fc 3e 3e f8 7c 7e     >..?>..?>..>>.|~
    106a:	3e f8 7c 7e 3e f8 7e 7c 3e f8 7e 7c 3e f8 3e fc     >.|~>.~|>.~|>.>.
    107a:	3e f8 3e f8 3e f8 3f f8 3e f8 1f f8 3e f8 1f f8     >.>.>.?.>...>...
    108a:	3e f8 1f f0 3e f8 1f f0 3e f8 0f f0 3e f8 0f e0     >...>...>...>...
    109a:	3e f8 0f e0 3e f8 07 e0 3e 19 1e 78 1f 03 00 ff     >...>...>..x....
    10aa:	80 0f 80 ff 80 0f 80 ff 80 0f 80 ff c0 0f 80 ff     ................
    10ba:	c0 0f 80 ff e0 0f 80 fb e0 0f 80 fb f0 0f 80 f9     ................
    10ca:	f0 0f 80 f9 f8 0f 80 f8 f8 0f 80 f8 fc 0f 80 f8     ................
    10da:	fc 0f 80 f8 7e 0f 80 f8 7e 0f 80 f8 3f 0f 80 f8     ....~...~...?...
    10ea:	3f 0f 80 f8 1f 8f 80 f8 1f 8f 80 f8 0f 8f 80 f8     ?...............
    10fa:	0f cf 80 f8 07 cf 80 f8 07 ef 80 f8 03 ef 80 f8     ................
    110a:	03 ff 80 f8 01 ff 80 f8 01 ff 80 f8 00 ff 80 f8     ................
    111a:	00 ff 80 f8 00 7f 80 1b 1e 78 1f 02 01 00 ff e0     .........x......
    112a:	00 03 ff f8 00 07 ff fc 00 0f ff fe 00 1f ff ff     ................
    113a:	00 3f c0 7f 80 3f 00 1f 80 7f 00 1f c0 7e 00 0f     .?...?.......~..
    114a:	c0 7e 00 0f c0 fc 00 0f e0 fc 00 07 e0 fc 00 07     .~..............
    115a:	e0 fc 00 07 e0 fc 00 07 e0 fc 00 07 e0 fc 00 07     ................
    116a:	e0 fc 00 07 e0 fc 00 07 e0 fc 00 0f e0 7e 00 0f     .............~..
    117a:	c0 7e 00 0f c0 7f 00 1f c0 3f 00 1f 80 3f c0 7f     .~.......?...?..
    118a:	80 1f ff ff 00 0f ff fe 00 07 ff fc 00 03 ff f8     ................
    119a:	00 00 ff e0 00 15 1e 5a 1a 03 00 ff fc 00 ff ff     .......Z........
    11aa:	80 ff ff c0 ff ff e0 ff ff f0 f8 07 f0 f8 03 f8     ................
    11ba:	f8 01 f8 f8 01 f8 f8 00 f8 f8 01 f8 f8 01 f8 f8     ................
    11ca:	01 f8 f8 07 f0 ff ff f0 ff ff e0 ff ff c0 ff ff     ................
    11da:	80 ff fc 00 f8 00 00 f8 00 00 f8 00 00 f8 00 00     ................
    11ea:	f8 00 00 f8 00 00 f8 00 00 f8 00 00 f8 00 00 f8     ................
    11fa:	00 00 f8 00 00 1e 1e 78 21 02 01 00 ff e0 00 03     .......x!.......
    120a:	ff f8 00 07 ff fc 00 0f ff fe 00 1f ff ff 00 3f     ...............?
    121a:	c0 7f 80 3f 00 1f 80 7f 00 1f c0 7e 00 0f c0 7e     ...?.......~...~
    122a:	00 0f c0 fc 00 0f e0 fc 00 07 e0 fc 00 07 e0 fc     ................
    123a:	00 07 e0 fc 00 07 e0 fc 00 07 e0 fc 00 07 e0 fc     ................
    124a:	00 07 e0 fc 00 07 e0 fc 00 0f c0 7e 00 0f c0 7e     ...........~...~
    125a:	00 0f c0 7f 00 1f 80 3f 00 1f 80 3f c0 7f 00 1f     .......?...?....
    126a:	ff fe fc 0f ff ff fc 07 ff ff fc 03 ff ff fc 00     ................
    127a:	ff ff fc 17 1e 5a 1b 03 00 ff ff 00 ff ff e0 ff     .....Z..........
    128a:	ff f0 ff ff f8 ff ff f8 f8 03 fc f8 01 fc f8 00     ................
    129a:	fc f8 00 7c f8 00 7c f8 00 fc f8 01 f8 f8 07 f0     ...|..|.........
    12aa:	ff ff e0 ff ff c0 ff ff 80 ff ff e0 ff ff f0 f8     ................
    12ba:	03 f8 f8 01 f8 f8 01 f8 f8 00 f8 f8 00 f8 f8 00     ................
    12ca:	f8 f8 00 fc f8 00 fc f8 00 fc f8 00 fc f8 00 7c     ...............|
    12da:	f8 00 7e 17 1e 5a 1b 02 01 01 ff 80 07 ff e0 0f     ..~..Z..........
    12ea:	ff f0 1f ff f0 3f ff f8 3f 01 f8 7e 00 fc 7e 00     .....?..?..~..~.
    12fa:	fc 7c 00 7c 7e 00 00 7e 00 00 3f 80 00 3f f0 00     .|.|~..~..?..?..
    130a:	1f fe 00 0f ff c0 03 ff f0 00 7f f8 00 07 fc 00     ................
    131a:	01 fc 00 00 7e f8 00 7e f8 00 3e fc 00 7e fc 00     ....~..~..>..~..
    132a:	7e 7e 00 fc 7f ff fc 3f ff f8 1f ff f0 0f ff e0     ~~.....?........
    133a:	03 ff 80 17 1e 5a 19 01 00 ff ff fe ff ff fe ff     .....Z..........
    134a:	ff fe ff ff fe ff ff fe 00 7c 00 00 7c 00 00 7c     .........|..|..|
    135a:	00 00 7c 00 00 7c 00 00 7c 00 00 7c 00 00 7c 00     ..|..|..|..|..|.
    136a:	00 7c 00 00 7c 00 00 7c 00 00 7c 00 00 7c 00 00     .|..|..|..|..|..
    137a:	7c 00 00 7c 00 00 7c 00 00 7c 00 00 7c 00 00 7c     |..|..|..|..|..|
    138a:	00 00 7c 00 00 7c 00 00 7c 00 00 7c 00 00 7c 00     ..|..|..|..|..|.
    139a:	00 7c 00 18 1e 5a 1e 03 00 f8 00 1f f8 00 1f f8     .|...Z..........
    13aa:	00 1f f8 00 1f f8 00 1f f8 00 1f f8 00 1f f8 00     ................
    13ba:	1f f8 00 1f f8 00 1f f8 00 1f f8 00 1f f8 00 1f     ................
    13ca:	f8 00 1f f8 00 1f f8 00 1f f8 00 1f f8 00 1f f8     ................
    13da:	00 1f fc 00 1f fc 00 1f fc 00 3f 7c 00 3f 7e 00     ..........?|.?~.
    13ea:	7e 7f 00 fe 3f ff fc 1f ff fc 1f ff f8 07 ff e0     ~...?...........
    13fa:	01 ff c0 1c 1e 78 1e 01 00 fc 00 03 f0 fc 00 07     .....x..........
    140a:	f0 fe 00 07 e0 7e 00 07 e0 7e 00 0f c0 7f 00 0f     .....~...~......
    141a:	c0 3f 00 1f c0 3f 00 1f 80 3f 80 1f 80 1f 80 3f     .?...?...?.....?
    142a:	80 1f 80 3f 00 1f c0 3f 00 0f c0 7f 00 0f c0 7e     ...?...?.......~
    143a:	00 07 e0 7e 00 07 e0 fc 00 07 e0 fc 00 03 f0 fc     ...~............
    144a:	00 03 f1 f8 00 03 f9 f8 00 01 f9 f8 00 01 fb f0     ................
    145a:	00 01 ff f0 00 00 ff f0 00 00 ff e0 00 00 ff e0     ................
    146a:	00 00 7f c0 00 00 7f c0 00 00 7f c0 00 00 3f 80     ..............?.
    147a:	00 26 1e 96 28 01 00 fc 00 fc 00 fc fc 01 fe 00     .&..(...........
    148a:	fc fc 01 fe 00 fc fc 01 fe 01 fc fe 01 fe 01 fc     ................
    149a:	7e 03 ff 01 f8 7e 03 ff 01 f8 7e 03 ff 01 f8 7e     ~....~....~....~
    14aa:	03 ff 01 f8 3f 07 ff 83 f0 3f 07 cf 83 f0 3f 07     ....?....?....?.
    14ba:	cf 83 f0 3f 07 cf 83 f0 1f 0f cf c3 e0 1f 8f 87     ...?............
    14ca:	c7 e0 1f 8f 87 c7 e0 1f 8f 87 c7 e0 0f 9f 87 e7     ................
    14da:	c0 0f 9f 03 e7 c0 0f df 03 ef c0 0f df 03 ef c0     ................
    14ea:	07 ff 03 ff 80 07 fe 01 ff 80 07 fe 01 ff 80 07     ................
    14fa:	fe 01 ff 80 03 fe 01 ff 00 03 fc 00 ff 00 03 fc     ................
    150a:	00 ff 00 03 fc 00 ff 00 03 fc 00 ff 00 1a 1e 78     ...............x
    151a:	1c 01 00 7e 00 1f 80 7f 00 3f 80 3f 80 3f 00 3f     ...~.....?.?.?.?
    152a:	80 7e 00 1f c0 7e 00 0f c0 fc 00 0f e1 f8 00 07     .~...~..........
    153a:	f1 f8 00 03 f3 f0 00 03 fb e0 00 01 ff e0 00 00     ................
    154a:	ff c0 00 00 ff 80 00 00 7f 80 00 00 7f 00 00 00     ................
    155a:	7f 80 00 00 ff 80 00 01 ff c0 00 01 ff e0 00 03     ................
    156a:	f7 e0 00 03 e3 f0 00 07 e3 f8 00 0f c1 f8 00 0f     ................
    157a:	81 fc 00 1f 80 fe 00 3f 00 7e 00 3f 00 7f 00 7e     .......?.~.?...~
    158a:	00 3f 80 fc 00 1f 80 fc 00 1f c0 18 1e 5a 19 01     .?...........Z..
    159a:	00 fc 00 7f fe 00 7e 7e 00 fe 7f 00 fc 3f 01 fc     ......~~.....?..
    15aa:	3f 01 f8 1f 83 f8 1f 83 f0 0f c3 f0 0f c7 e0 07     ?...............
    15ba:	e7 e0 07 ef c0 03 ff c0 03 ff 80 01 ff 80 01 ff     ................
    15ca:	00 00 ff 00 00 fe 00 00 7e 00 00 7c 00 00 7c 00     ........~..|..|.
    15da:	00 7c 00 00 7c 00 00 7c 00 00 7c 00 00 7c 00 00     .|..|..|..|..|..
    15ea:	7c 00 00 7c 00 00 7c 00 00 7c 00 16 1e 5a 1a 02     |..|..|..|...Z..
    15fa:	00 7f ff fc 7f ff fc 7f ff fc 7f ff fc 7f ff fc     ................
    160a:	00 01 fc 00 03 f8 00 07 f0 00 0f f0 00 1f e0 00     ................
    161a:	1f c0 00 3f 80 00 7f 80 00 ff 00 00 fe 00 01 fc     ...?............
    162a:	00 03 fc 00 07 f8 00 07 f0 00 0f e0 00 1f e0 00     ................
    163a:	3f c0 00 3f 80 00 7f 00 00 ff 00 00 ff ff fc ff     ?..?............
    164a:	ff fc ff ff fc ff ff fc ff ff fc 09 26 4c 0f 03     ............&L..
    165a:	f8 ff 80 ff 80 ff 80 ff 80 f8 00 f8 00 f8 00 f8     ................
    166a:	00 f8 00 f8 00 f8 00 f8 00 f8 00 f8 00 f8 00 f8     ................
    167a:	00 f8 00 f8 00 f8 00 f8 00 f8 00 f8 00 f8 00 f8     ................
    168a:	00 f8 00 f8 00 f8 00 f8 00 f8 00 f8 00 f8 00 f8     ................
    169a:	00 f8 00 f8 00 ff 80 ff 80 ff 80 ff 80 0d 20 40     .............. @
    16aa:	11 02 fe f0 00 f0 00 78 00 78 00 78 00 78 00 3c     .......x.x.x.x.<
    16ba:	00 3c 00 3c 00 1e 00 1e 00 1e 00 0e 00 0f 00 0f     .<.<............
    16ca:	00 0f 00 07 80 07 80 07 80 03 c0 03 c0 03 c0 03     ................
    16da:	c0 01 e0 01 e0 01 e0 00 f0 00 f0 00 f0 00 70 00     ..............p.
    16ea:	78 00 78 09 26 4c 0f 03 f8 ff 80 ff 80 ff 80 ff     x.x.&L..........
    16fa:	80 0f 80 0f 80 0f 80 0f 80 0f 80 0f 80 0f 80 0f     ................
    170a:	80 0f 80 0f 80 0f 80 0f 80 0f 80 0f 80 0f 80 0f     ................
    171a:	80 0f 80 0f 80 0f 80 0f 80 0f 80 0f 80 0f 80 0f     ................
    172a:	80 0f 80 0f 80 0f 80 0f 80 0f 80 0f 80 ff 80 ff     ................
    173a:	80 ff 80 ff 80 14 19 4b 28 0a 00 00 60 00 00 f0     .......K(...`...
    174a:	00 00 f0 00 00 f0 00 01 f8 00 01 98 00 03 9c 00     ................
    175a:	03 0c 00 03 0c 00 07 0e 00 06 06 00 06 06 00 0e     ................
    176a:	07 00 0c 03 00 1c 03 80 1c 01 80 18 01 80 38 01     ..............8.
    177a:	c0 30 00 c0 30 00 c0 70 00 e0 60 00 60 e0 00 70     .0..0..p..`.`..p
    178a:	e0 00 70 c0 00 30 14 04 0c 14 00 fa ff ff f0 ff     ..p..0..........
    179a:	ff f0 ff ff f0 ff ff f0 09 08 10 0a ff 19 f8 00     ................
    17aa:	7c 00 3c 00 3e 00 1e 00 0f 00 07 00 03 80 13 14     |.<.>...........
    17ba:	3c 16 02 01 0f fe 00 1f ff 00 3f ff 80 7e 0f 80     <.........?..~..
    17ca:	7c 0f c0 00 07 c0 00 7f c0 0f ff c0 3f ff c0 7f     |...........?...
    17da:	ff c0 7f 07 c0 fc 07 c0 fc 07 c0 f8 0f c0 f8 0f     ................
    17ea:	c0 fc 0f c0 fe 1f c0 7f ff c0 3f f7 c0 1f e3 e0     ..........?.....
    17fa:	14 1e 5a 19 03 00 f8 00 00 f8 00 00 f8 00 00 f8     ..Z.............
    180a:	00 00 f8 00 00 f8 00 00 f8 00 00 f8 00 00 f8 00     ................
    181a:	00 f8 00 00 f9 fe 00 fb ff 80 ff ff c0 ff 0f c0     ................
    182a:	fe 07 e0 fc 03 e0 fc 03 f0 fc 03 f0 fc 03 f0 f8     ................
    183a:	01 f0 f8 01 f0 f8 03 f0 fc 03 f0 fc 03 f0 fc 03     ................
    184a:	e0 fe 07 e0 ff 0f c0 fb ff c0 fb ff 80 f8 fe 00     ................
    185a:	11 14 3c 15 02 01 0f fc 00 1f fe 00 3f ff 00 7e     ..<.........?..~
    186a:	3f 00 7c 1f 80 7c 1f 80 fc 0f 80 f8 00 00 f8 00     ?.|..|..........
    187a:	00 f8 00 00 f8 00 00 f8 00 00 f8 00 00 fc 0f 80     ................
    188a:	fc 1f 80 7c 1f 80 7e 3f 00 3f ff 00 1f fe 00 0f     ...|..~?.?......
    189a:	fc 00 14 1e 5a 19 02 00 00 01 f0 00 01 f0 00 01     ....Z...........
    18aa:	f0 00 01 f0 00 01 f0 00 01 f0 00 01 f0 00 01 f0     ................
    18ba:	00 01 f0 00 01 f0 07 f9 f0 1f fd f0 3f ff f0 3f     ............?..?
    18ca:	0f f0 7e 07 f0 7c 03 f0 fc 03 f0 fc 03 f0 fc 03     ..~..|..........
    18da:	f0 f8 01 f0 f8 01 f0 f8 03 f0 fc 03 f0 fc 03 f0     ................
    18ea:	7c 03 f0 7e 07 f0 3f 0f f0 3f fd f0 1f f9 f0 07     |..~..?..?......
    18fa:	f1 f0 13 14 3c 16 02 01 07 fc 00 1f ff 00 3f ff     ....<.........?.
    190a:	00 3e 1f 80 7c 0f c0 7c 07 c0 fc 07 c0 ff ff c0     .>..|..|........
    191a:	ff ff c0 ff ff e0 ff ff e0 f8 00 00 f8 00 00 fc     ................
    192a:	00 00 7c 07 c0 7c 0f c0 7e 1f 80 3f ff 80 1f ff     ..|..|..~..?....
    193a:	00 07 fc 00 0e 1e 3c 0f 01 01 03 fc 07 fc 0f fc     ......<.........
    194a:	0f c0 0f 80 0f 80 0f 80 0f 80 0f 80 0f 80 ff f8     ................
    195a:	ff f8 ff f8 ff f8 0f 80 0f 80 0f 80 0f 80 0f 80     ................
    196a:	0f 80 0f 80 0f 80 0f 80 0f 80 0f 80 0f 80 0f 80     ................
    197a:	0f 80 0f 80 0f 80 14 1c 54 19 02 f9 07 f9 f0 1f     ........T.......
    198a:	fd f0 3f ff f0 3f 0f f0 7e 07 f0 7c 03 f0 fc 03     ..?..?..~..|....
    199a:	f0 fc 03 f0 fc 03 f0 f8 01 f0 f8 01 f0 f8 03 f0     ................
    19aa:	fc 03 f0 fc 03 f0 7c 07 f0 7e 07 f0 3f ff f0 3f     ......|..~..?..?
    19ba:	fd f0 0f f9 f0 03 e1 f0 00 03 f0 00 03 f0 7c 03     ..............|.
    19ca:	f0 7e 07 e0 3f ff e0 3f ff c0 1f ff 80 03 fc 00     .~..?..?........
    19da:	12 1e 5a 18 03 00 f8 00 00 f8 00 00 f8 00 00 f8     ..Z.............
    19ea:	00 00 f8 00 00 f8 00 00 f8 00 00 f8 00 00 f8 00     ................
    19fa:	00 f8 00 00 f9 ff 00 fb ff 80 ff ff c0 ff 1f c0     ................
    1a0a:	fe 0f c0 fc 07 c0 fc 07 c0 fc 07 c0 f8 07 c0 f8     ................
    1a1a:	07 c0 f8 07 c0 f8 07 c0 f8 07 c0 f8 07 c0 f8 07     ................
    1a2a:	c0 f8 07 c0 f8 07 c0 f8 07 c0 f8 07 c0 f8 07 c0     ................
    1a3a:	06 1e 1e 0a 02 00 fc fc fc fc fc 00 00 00 00 00     ................
    1a4a:	7c 7c 7c 7c 7c 7c 7c 7c 7c 7c 7c 7c 7c 7c 7c 7c     ||||||||||||||||
    1a5a:	7c 7c 7c 7c 07 27 27 0d 04 f7 7e 7e 7e 7e 7e 00     ||||.''...~~~~~.
    1a6a:	00 00 00 00 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e     ....>>>>>>>>>>>>
    1a7a:	3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 7e fe fe fe fc     >>>>>>>>>>>~....
    1a8a:	f8 12 1e 5a 16 03 00 f8 00 00 f8 00 00 f8 00 00     ...Z............
    1a9a:	f8 00 00 f8 00 00 f8 00 00 f8 00 00 f8 00 00 f8     ................
    1aaa:	00 00 f8 00 00 f8 1f c0 f8 1f 80 f8 3f 00 f8 7e     ............?..~
    1aba:	00 f8 fc 00 f9 fc 00 f9 f8 00 fb f0 00 ff e0 00     ................
    1aca:	ff f0 00 fb f0 00 f9 f8 00 f9 fc 00 f8 fc 00 f8     ................
    1ada:	7e 00 f8 7f 00 f8 3f 00 f8 1f 80 f8 1f c0 f8 0f     ~.....?.........
    1aea:	c0 05 1e 1e 0b 03 00 f8 f8 f8 f8 f8 f8 f8 f8 f8     ................
    1afa:	f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8     ................
    1b0a:	f8 f8 f8 f8 f8 1f 14 50 25 03 01 f8 ff 0f f0 f9     .......P%.......
    1b1a:	ff 9f fc fb ff bf fc ff 1f f8 fe fe 0f f0 7e fc     ..............~.
    1b2a:	07 e0 3e fc 07 e0 3e f8 07 c0 3e f8 07 c0 3e f8     ..>...>...>...>.
    1b3a:	07 c0 3e f8 07 c0 3e f8 07 c0 3e f8 07 c0 3e f8     ..>...>...>...>.
    1b4a:	07 c0 3e f8 07 c0 3e f8 07 c0 3e f8 07 c0 3e f8     ..>...>...>...>.
    1b5a:	07 c0 3e f8 07 c0 3e f8 07 c0 3e 12 14 3c 18 03     ..>...>...>..<..
    1b6a:	01 f9 ff 00 fb ff 80 fb ff c0 ff 1f c0 fe 0f c0     ................
    1b7a:	fc 07 c0 fc 07 c0 fc 07 c0 f8 07 c0 f8 07 c0 f8     ................
    1b8a:	07 c0 f8 07 c0 f8 07 c0 f8 07 c0 f8 07 c0 f8 07     ................
    1b9a:	c0 f8 07 c0 f8 07 c0 f8 07 c0 f8 07 c0 14 14 3c     ...............<
    1baa:	18 02 01 03 fe 00 0f ff 00 1f ff c0 3f 0f c0 7e     ............?..~
    1bba:	03 e0 7c 03 f0 fc 01 f0 fc 01 f0 fc 01 f0 f8 01     ..|.............
    1bca:	f0 f8 01 f0 f8 01 f0 fc 01 f0 fc 01 f0 7c 03 f0     .............|..
    1bda:	7e 03 e0 3f 0f c0 1f ff c0 0f ff 00 03 fe 00 14     ~..?............
    1bea:	1c 54 19 03 f9 f8 fe 00 f9 ff 80 fb ff c0 ff 0f     .T..............
    1bfa:	c0 fe 07 e0 fc 03 e0 fc 03 f0 fc 03 f0 fc 03 f0     ................
    1c0a:	f8 01 f0 f8 01 f0 fc 03 f0 fc 03 f0 fc 03 f0 fc     ................
    1c1a:	03 e0 fe 07 e0 ff 0f c0 ff ff c0 fb ff 80 f9 fe     ................
    1c2a:	00 f8 00 00 f8 00 00 f8 00 00 f8 00 00 f8 00 00     ................
    1c3a:	f8 00 00 f8 00 00 f8 00 00 14 1c 54 19 02 f9 07     ...........T....
    1c4a:	f1 f0 1f fd f0 3f fd f0 3f 0f f0 7e 07 f0 7c 03     .....?..?..~..|.
    1c5a:	f0 fc 03 f0 fc 03 f0 f8 03 f0 f8 01 f0 f8 01 f0     ................
    1c6a:	fc 03 f0 fc 03 f0 fc 03 f0 7c 03 f0 7e 07 f0 3f     .........|..~..?
    1c7a:	0f f0 3f ff f0 1f fd f0 07 f9 f0 00 01 f0 00 01     ..?.............
    1c8a:	f0 00 01 f0 00 01 f0 00 01 f0 00 01 f0 00 01 f0     ................
    1c9a:	00 01 f0 0c 14 28 10 03 01 f8 f0 f9 f0 fb f0 ff     .....(..........
    1caa:	f0 ff f0 ff 00 fe 00 fc 00 fc 00 f8 00 f8 00 f8     ................
    1cba:	00 f8 00 f8 00 f8 00 f8 00 f8 00 f8 00 f8 00 f8     ................
    1cca:	00 11 14 3c 15 02 01 0f fc 00 3f fe 00 7f ff 00     ...<......?.....
    1cda:	7e 1f 80 7c 1f 80 7c 0f 80 7e 00 00 7f 80 00 3f     ~..|..|..~.....?
    1cea:	f8 00 3f fe 00 07 ff 00 00 ff 80 00 1f 80 00 0f     ..?.............
    1cfa:	80 f8 0f 80 fc 0f 80 7e 1f 80 7f ff 00 3f fe 00     .......~.....?..
    1d0a:	1f fc 00 0f 1a 34 11 01 00 00 80 01 80 07 80 0f     .....4..........
    1d1a:	80 0f 80 0f 80 ff fc ff fc ff fc ff fc 0f 80 0f     ................
    1d2a:	80 0f 80 0f 80 0f 80 0f 80 0f 80 0f 80 0f 80 0f     ................
    1d3a:	80 0f 80 0f c0 0f e0 07 fe 07 fe 01 fe 12 14 3c     ...............<
    1d4a:	18 03 00 f8 07 c0 f8 07 c0 f8 07 c0 f8 07 c0 f8     ................
    1d5a:	07 c0 f8 07 c0 f8 07 c0 f8 07 c0 f8 07 c0 f8 07     ................
    1d6a:	c0 f8 07 c0 f8 07 c0 f8 07 c0 fc 07 c0 fc 0f c0     ................
    1d7a:	fc 0f c0 fe 1f c0 7f ff c0 3f f7 c0 1f e7 c0 14     .........?......
    1d8a:	14 3c 16 01 00 f8 03 f0 fc 03 f0 fc 03 e0 7c 07     .<............|.
    1d9a:	e0 7e 07 e0 7e 07 c0 3e 0f c0 3f 0f c0 1f 0f 80     .~..~..>..?.....
    1daa:	1f 1f 80 1f 9f 00 0f 9f 00 0f bf 00 0f fe 00 07     ................
    1dba:	fe 00 07 fe 00 03 fc 00 03 fc 00 03 f8 00 01 f8     ................
    1dca:	00 21 14 64 22 01 00 f8 07 e0 1f 80 f8 0f f0 1f     .!.d"...........
    1dda:	00 fc 0f f0 1f 00 fc 0f f0 3f 00 7c 0f f8 3e 00     .........?.|..>.
    1dea:	7e 1f f8 3e 00 7e 1f f8 7e 00 3e 1f 7c 7e 00 3e     ~..>.~..~.>.|~.>
    1dfa:	3e 7c 7c 00 3f 3e 7c 7c 00 1f 3e 7e fc 00 1f 7c     >||.?>||..>~...|
    1e0a:	3e f8 00 1f fc 3e f8 00 0f fc 3f f8 00 0f fc 1f     >....>....?.....
    1e1a:	f0 00 0f f8 1f f0 00 0f f8 1f f0 00 07 f8 0f f0     ................
    1e2a:	00 07 f0 0f e0 00 07 f0 0f e0 00 14 14 3c 16 01     .............<..
    1e3a:	00 fe 03 e0 7e 07 e0 3f 0f c0 1f 8f 80 1f 9f 80     ....~..?........
    1e4a:	0f df 00 07 fe 00 07 fe 00 03 fc 00 03 fc 00 03     ................
    1e5a:	fc 00 07 fe 00 0f ff 00 0f bf 00 1f 9f 80 3f 1f     ..............?.
    1e6a:	c0 3e 0f c0 7e 07 e0 fc 07 e0 fc 03 f0 14 1c 54     .>..~..........T
    1e7a:	16 01 f8 fc 03 f0 fc 03 f0 fc 03 e0 7e 07 e0 7e     ............~..~
    1e8a:	07 e0 3f 07 c0 3f 0f c0 3f 0f c0 1f 8f 80 1f 9f     ..?..?..?.......
    1e9a:	80 0f 9f 80 0f df 00 0f ff 00 07 ff 00 07 fe 00     ................
    1eaa:	03 fe 00 03 fc 00 03 fc 00 01 fc 00 01 f8 00 01     ................
    1eba:	f8 00 01 f8 00 01 f0 00 03 f0 00 03 f0 00 07 e0     ................
    1eca:	00 07 e0 00 07 e0 00 11 14 3c 15 02 00 ff ff 00     .........<......
    1eda:	ff ff 00 ff ff 00 ff ff 00 00 3f 00 00 7e 00 00     ..........?..~..
    1eea:	fc 00 01 f8 00 03 f0 00 07 f0 00 0f e0 00 0f c0     ................
    1efa:	00 1f 80 00 3f 00 00 7e 00 00 fc 00 00 ff ff 80     ....?..~........
    1f0a:	ff ff 80 ff ff 80 ff ff 80 0f 29 52 14 03 f6 00     ..........)R....
    1f1a:	02 00 fe 01 fe 03 fe 07 f0 07 e0 07 c0 07 c0 07     ................
    1f2a:	c0 07 c0 07 c0 07 c0 07 c0 07 c0 07 c0 07 c0 0f     ................
    1f3a:	c0 0f 80 3f 80 fe 00 fc 00 fe 00 ff 00 3f 80 0f     ...?.........?..
    1f4a:	80 0f c0 07 c0 07 c0 07 c0 07 c0 07 c0 07 c0 07     ................
    1f5a:	c0 07 c0 07 c0 07 e0 07 e0 03 fe 03 fe 01 fe 00     ................
    1f6a:	3e 03 2b 2b 0d 05 f5 e0 e0 e0 e0 e0 e0 e0 e0 e0     >.++............
    1f7a:	e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0     ................
    1f8a:	e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0     ................
    1f9a:	e0 e0 0f 28 50 14 03 f7 fc 00 ff 00 ff 00 1f 80     ...(P...........
    1faa:	0f 80 0f 80 0f 80 0f 80 0f 80 0f 80 0f 80 0f 80     ................
    1fba:	0f 80 0f c0 0f c0 07 e0 07 e0 03 f8 01 fe 00 7e     ...............~
    1fca:	00 fe 03 fc 07 e0 07 c0 07 c0 0f c0 0f 80 0f 80     ................
    1fda:	0f 80 0f 80 0f 80 0f 80 0f 80 0f 80 0f 80 1f 80     ................
    1fea:	ff 80 ff 00 fe 00 f8 00 15 05 0f 15 00 08 0f c0     ................
    1ffa:	78 3f ff f8 7f ff f0 7f ff e0 f0 1f 80 ff           x?............

00002008 <u8g_font_unifont>:
    2008:	00 10 10 00 fe 0a 06 a7 08 95 00 ff fe 0e fe 0b     ................
    2018:	fe 10 10 20 10 00 fe aa aa 00 01 80 00 00 01 80     ... ............
    2028:	00 4a 51 ea 50 5a 51 c9 9e 00 01 80 00 00 01 80     .JQ.PZQ.........
    2038:	00 00 01 80 00 55 55 10 10 20 10 00 fe aa aa 00     .....UU.. ......
    2048:	01 80 00 00 01 80 00 39 93 c2 52 32 5f 8a 52 71     .......9..R2_.Rq
    2058:	93 80 00 00 01 80 00 00 01 80 00 55 55 10 10 20     ...........UU.. 
    2068:	10 00 fe aa aa 00 01 80 00 00 01 80 00 3b a5 c1     .............;..
    2078:	24 31 19 89 24 71 25 80 00 00 01 80 00 00 01 80     $1..$q%.........
    2088:	00 55 55 10 10 20 10 00 fe aa aa 00 01 80 00 00     .UU.. ..........
    2098:	01 80 00 7b a5 c1 24 79 19 c1 24 79 25 80 00 00     ...{..$y..$y%...
    20a8:	01 80 00 00 01 80 00 55 55 10 10 20 10 00 fe aa     .......UU.. ....
    20b8:	aa 00 01 80 00 00 01 80 00 79 bf c2 48 7a 49 c2     .........y..HzI.
    20c8:	48 79 89 80 00 00 01 80 00 00 01 80 00 55 55 10     Hy...........UU.
    20d8:	10 20 10 00 fe aa aa 00 01 80 00 00 01 80 00 7a     . .............z
    20e8:	4d c2 52 7b 53 c2 d6 7a 4f 80 00 00 01 80 00 00     M.R{S..zO.......
    20f8:	01 80 00 55 55 10 10 20 10 00 fe aa aa 00 01 80     ...UU.. ........
    2108:	00 00 01 80 00 31 a5 ca 28 7a 31 ca 28 49 a5 80     .....1..(z1.(I..
    2118:	00 00 01 80 00 00 01 80 00 55 55 10 10 20 10 00     .........UU.. ..
    2128:	fe aa aa 00 01 80 00 00 01 80 00 73 d1 ca 10 73     ...........s...s
    2138:	d1 ca 10 73 df 80 00 00 01 80 00 00 01 80 00 55     ...s...........U
    2148:	55 10 10 20 10 00 fe aa aa 00 01 80 00 00 01 80     U.. ............
    2158:	00 1e 39 91 40 1e 31 91 08 1e 71 80 00 00 01 80     ..9.@.1...q.....
    2168:	00 00 01 80 00 55 55 10 10 20 10 00 fe aa aa 00     .....UU.. ......
    2178:	01 80 00 00 01 80 00 22 f9 a2 20 3e 21 a2 20 22     .......".. >!. "
    2188:	21 80 00 00 01 80 00 00 01 80 00 55 55 10 10 20     !..........UU.. 
    2198:	10 00 fe aa aa 00 01 80 00 00 01 80 00 20 f9 a0     ............. ..
    21a8:	80 20 f9 a0 80 3e 81 80 00 00 01 80 00 00 01 80     . ...>..........
    21b8:	00 55 55 10 10 20 10 00 fe aa aa 00 01 80 00 00     .UU.. ..........
    21c8:	01 80 00 22 f9 a2 20 22 21 94 20 08 21 80 00 00     ...".. "!. .!...
    21d8:	01 80 00 00 01 80 00 55 55 10 10 20 10 00 fe aa     .......UU.. ....
    21e8:	aa 00 01 80 00 00 01 80 00 3e f9 a0 80 3e f9 a0     .........>...>..
    21f8:	80 20 81 80 00 00 01 80 00 00 01 80 00 55 55 10     . ...........UU.
    2208:	10 20 10 00 fe aa aa 00 01 80 00 00 01 80 00 1e     . ..............
    2218:	f1 a0 88 20 f1 a0 90 1e 89 80 00 00 01 80 00 00     ... ............
    2228:	01 80 00 55 55 10 10 20 10 00 fe aa aa 00 01 80     ...UU.. ........
    2238:	00 00 01 80 00 1e 71 a0 88 1c 89 82 88 3c 71 80     ......q......<q.
    2248:	00 00 01 80 00 00 01 80 00 55 55 10 10 20 10 00     .........UU.. ..
    2258:	fe aa aa 00 01 80 00 00 01 80 00 1e f9 a0 20 1c     .............. .
    2268:	21 82 20 3c f9 80 00 00 01 80 00 00 01 80 00 55     !. <...........U
    2278:	55 10 10 20 10 00 fe aa aa 00 01 80 00 00 01 80     U.. ............
    2288:	00 39 1d a5 10 25 1d a5 10 39 dd 80 00 00 01 80     .9...%...9......
    2298:	00 00 01 80 00 55 55 10 10 20 10 00 fe aa aa 00     .....UU.. ......
    22a8:	01 80 00 00 01 80 00 71 89 ca 18 4a 09 ca 08 71     .......q...J...q
    22b8:	9d 80 00 00 01 80 00 00 01 80 00 55 55 10 10 20     ...........UU.. 
    22c8:	10 00 fe aa aa 00 01 80 00 00 01 80 00 71 99 ca     .............q..
    22d8:	04 4a 09 ca 10 71 9d 80 00 00 01 80 00 00 01 80     .J...q..........
    22e8:	00 55 55 10 10 20 10 00 fe aa aa 00 01 80 00 00     .UU.. ..........
    22f8:	01 80 00 71 99 ca 04 4a 19 ca 04 71 99 80 00 00     ...q...J...q....
    2308:	01 80 00 00 01 80 00 55 55 10 10 20 10 00 fe aa     .......UU.. ....
    2318:	aa 00 01 80 00 00 01 80 00 71 85 ca 0c 4a 15 ca     .........q...J..
    2328:	1c 71 85 80 00 00 01 80 00 00 01 80 00 55 55 10     .q...........UU.
    2338:	10 20 10 00 fe aa aa 00 01 80 00 00 01 80 00 49     . .............I
    2348:	93 ea 54 6a 59 db d4 4a 53 80 00 00 01 80 00 00     ..TjY..JS.......
    2358:	01 80 00 55 55 10 10 20 10 00 fe aa aa 00 01 80     ...UU.. ........
    2368:	00 00 01 80 00 34 53 c2 9a 31 17 89 12 71 13 80     .....4S..1...q..
    2378:	00 00 01 80 00 00 01 80 00 55 55 10 10 20 10 00     .........UU.. ..
    2388:	fe aa aa 00 01 80 00 00 01 80 00 7b b9 c1 24 79     ...........{..$y
    2398:	39 c1 24 79 39 80 00 00 01 80 00 00 01 80 00 55     9.$y9..........U
    23a8:	55 10 10 20 10 00 fe aa aa 00 01 80 00 00 01 80     U.. ............
    23b8:	00 33 25 c4 b4 47 ad c4 a4 34 a5 80 00 00 01 80     .3%..G...4......
    23c8:	00 00 01 80 00 55 55 10 10 20 10 00 fe aa aa 00     .....UU.. ......
    23d8:	01 80 00 00 01 80 00 3e 89 a0 d8 3e a9 a0 88 3e     .......>...>...>
    23e8:	89 80 00 00 01 80 00 00 01 80 00 55 55 10 10 20     ...........UU.. 
    23f8:	10 00 fe aa aa 00 01 80 00 00 01 80 00 3a 5d c2     .............:].
    2408:	52 32 5d 8a 52 71 9d 80 00 00 01 80 00 00 01 80     R2].Rq..........
    2418:	00 55 55 10 10 20 10 00 fe aa aa 00 01 80 00 00     .UU.. ..........
    2428:	01 80 00 79 cf c2 10 79 91 c0 50 7b 8f 80 00 00     ...y...y..P{....
    2438:	01 80 00 00 01 80 00 55 55 10 10 20 10 00 fe aa     .......UU.. ....
    2448:	aa 00 01 80 00 00 01 80 00 1e 71 90 80 1e 61 90     ..........q...a.
    2458:	10 10 e1 80 00 00 01 80 00 00 01 80 00 55 55 10     .............UU.
    2468:	10 20 10 00 fe aa aa 00 01 80 00 00 01 80 00 0e     . ..............
    2478:	71 90 80 16 61 92 10 0e e1 80 00 00 01 80 00 00     q...a...........
    2488:	01 80 00 55 55 10 10 20 10 00 fe aa aa 00 01 80     ...UU.. ........
    2498:	00 00 01 80 00 1c 71 92 80 1c 61 94 10 12 e1 80     ......q...a.....
    24a8:	00 00 01 80 00 00 01 80 00 55 55 10 10 20 10 00     .........UU.. ..
    24b8:	fe aa aa 00 01 80 00 00 01 80 00 12 71 92 80 12     ............q...
    24c8:	61 92 10 0c e1 80 00 00 01 80 00 00 01 80 00 55     a..............U
    24d8:	55 00 00 00 08 00 0e 01 0a 0a 08 04 00 80 80 80     U...............
    24e8:	80 80 80 80 00 80 80 05 04 04 08 02 08 88 88 88     ................
    24f8:	88 06 0a 0a 08 01 00 24 24 24 fc 48 48 fc 90 90     .......$$$.HH...
    2508:	90 07 0a 0a 08 01 00 10 7c 92 90 70 1c 12 92 7c     ........|..p...|
    2518:	10 07 0a 0a 08 01 00 62 94 94 68 10 10 2c 52 52     .......b..h..,RR
    2528:	8c 07 0a 0a 08 01 00 38 44 44 28 30 52 8a 84 8c     .......8DD(0R...
    2538:	72 01 04 04 08 04 08 80 80 80 80 03 0c 0c 08 03     r...............
    2548:	ff 20 40 40 80 80 80 80 80 80 40 40 20 03 0c 0c     . @@......@@ ...
    2558:	08 02 ff 80 40 40 20 20 20 20 20 20 40 40 80 07     ....@@      @@..
    2568:	07 07 08 01 01 10 92 54 38 54 92 10 07 07 07 08     .......T8T......
    2578:	01 01 10 10 10 fe 10 10 10 02 04 04 08 03 fe c0     ................
    2588:	40 40 80 04 01 01 08 02 04 f0 02 02 02 08 03 00     @@..............
    2598:	c0 c0 06 0a 0a 08 01 00 04 04 08 10 10 20 20 40     .............  @
    25a8:	80 80 06 0a 0a 08 01 00 30 48 84 84 84 84 84 84     ........0H......
    25b8:	48 30 05 0a 0a 08 02 00 20 60 a0 20 20 20 20 20     H0...... `.     
    25c8:	20 f8 06 0a 0a 08 01 00 78 84 84 04 18 20 40 80      .......x.... @.
    25d8:	80 fc 06 0a 0a 08 01 00 78 84 84 04 38 04 04 84     ........x...8...
    25e8:	84 78 06 0a 0a 08 01 00 08 18 28 48 88 88 fc 08     .x........(H....
    25f8:	08 08 06 0a 0a 08 01 00 fc 80 80 80 f8 04 04 04     ................
    2608:	84 78 06 0a 0a 08 01 00 38 40 80 80 f8 84 84 84     .x......8@......
    2618:	84 78 06 0a 0a 08 01 00 fc 04 04 08 08 08 10 10     .x..............
    2628:	10 10 06 0a 0a 08 01 00 78 84 84 84 78 84 84 84     ........x...x...
    2638:	84 78 06 0a 0a 08 01 00 78 84 84 84 7c 04 04 04     .x......x...|...
    2648:	08 70 02 07 07 08 03 01 c0 c0 00 00 00 c0 c0 02     .p..............
    2658:	09 09 08 03 ff c0 c0 00 00 00 c0 40 40 80 05 09     ...........@@...
    2668:	09 08 02 00 08 10 20 40 80 40 20 10 08 06 05 05     ...... @.@ .....
    2678:	08 01 02 fc 00 00 00 fc 05 09 09 08 01 00 80 40     ...............@
    2688:	20 10 08 10 20 40 80 06 0a 0a 08 01 00 78 84 84      ... @.......x..
    2698:	04 08 10 10 00 10 10 06 0a 0a 08 01 00 38 44 94     .............8D.
    26a8:	ac a4 a4 a4 9c 40 3c 06 0a 0a 08 01 00 30 48 48     .....@<......0HH
    26b8:	84 84 fc 84 84 84 84 06 0a 0a 08 01 00 f8 84 84     ................
    26c8:	84 f8 84 84 84 84 f8 06 0a 0a 08 01 00 78 84 84     .............x..
    26d8:	80 80 80 80 84 84 78 06 0a 0a 08 01 00 f0 88 84     ......x.........
    26e8:	84 84 84 84 84 88 f0 06 0a 0a 08 01 00 fc 80 80     ................
    26f8:	80 f8 80 80 80 80 fc 06 0a 0a 08 01 00 fc 80 80     ................
    2708:	80 f8 80 80 80 80 80 06 0a 0a 08 01 00 78 84 84     .............x..
    2718:	80 80 9c 84 84 8c 74 06 0a 0a 08 01 00 84 84 84     ......t.........
    2728:	84 fc 84 84 84 84 84 05 0a 0a 08 02 00 f8 20 20     ..............  
    2738:	20 20 20 20 20 20 f8 07 0a 0a 08 01 00 3e 08 08           .......>..
    2748:	08 08 08 08 88 88 70 06 0a 0a 08 01 00 84 88 90     ......p.........
    2758:	a0 c0 c0 a0 90 88 84 06 0a 0a 08 01 00 80 80 80     ................
    2768:	80 80 80 80 80 80 fc 06 0a 0a 08 01 00 84 84 cc     ................
    2778:	cc b4 b4 84 84 84 84 06 0a 0a 08 01 00 84 c4 c4     ................
    2788:	a4 a4 94 94 8c 8c 84 06 0a 0a 08 01 00 78 84 84     .............x..
    2798:	84 84 84 84 84 84 78 06 0a 0a 08 01 00 f8 84 84     ......x.........
    27a8:	84 f8 80 80 80 80 80 07 0b 0b 08 01 ff 78 84 84     .............x..
    27b8:	84 84 84 84 b4 cc 78 06 06 0a 0a 08 01 00 f8 84     ......x.........
    27c8:	84 84 f8 90 88 88 84 84 06 0a 0a 08 01 00 78 84     ..............x.
    27d8:	84 80 60 18 04 84 84 78 07 0a 0a 08 01 00 fe 10     ..`....x........
    27e8:	10 10 10 10 10 10 10 10 06 0a 0a 08 01 00 84 84     ................
    27f8:	84 84 84 84 84 84 84 78 07 0a 0a 08 01 00 82 82     .......x........
    2808:	82 44 44 44 28 28 10 10 06 0a 0a 08 01 00 84 84     .DDD((..........
    2818:	84 84 b4 b4 cc cc 84 84 06 0a 0a 08 01 00 84 84     ................
    2828:	48 48 30 30 48 48 84 84 07 0a 0a 08 01 00 82 82     HH00HH..........
    2838:	44 44 28 10 10 10 10 10 06 0a 0a 08 01 00 fc 04     DD(.............
    2848:	04 08 10 20 40 80 80 fc 03 0c 0c 08 04 ff e0 80     ... @...........
    2858:	80 80 80 80 80 80 80 80 80 e0 06 0a 0a 08 01 00     ................
    2868:	80 80 40 20 20 10 10 08 04 04 03 0c 0c 08 01 ff     ..@  ...........
    2878:	e0 20 20 20 20 20 20 20 20 20 20 e0 06 03 03 08     .          .....
    2888:	01 09 30 48 84 07 01 01 08 01 ff fe 03 03 03 08     ..0H............
    2898:	02 0a 80 40 20 06 08 08 08 01 00 78 84 04 7c 84     ...@ ......x..|.
    28a8:	84 8c 74 06 0b 0b 08 01 00 80 80 80 b8 c4 84 84     ..t.............
    28b8:	84 84 c4 b8 06 08 08 08 01 00 78 84 80 80 80 80     ..........x.....
    28c8:	84 78 06 0b 0b 08 01 00 04 04 04 74 8c 84 84 84     .x.........t....
    28d8:	84 8c 74 06 08 08 08 01 00 78 84 84 fc 80 80 84     ..t......x......
    28e8:	78 05 0b 0b 08 01 00 18 20 20 20 f8 20 20 20 20     x.......   .    
    28f8:	20 20 06 0b 0b 08 01 fe 04 74 88 88 88 70 40 78       .......t...p@x
    2908:	84 84 78 06 0b 0b 08 01 00 80 80 80 b8 c4 84 84     ..x.............
    2918:	84 84 84 84 05 0b 0b 08 02 00 20 20 00 60 20 20     ..........  .`  
    2928:	20 20 20 20 f8 05 0d 0d 08 01 fe 08 08 00 18 08         ............
    2938:	08 08 08 08 08 08 90 60 06 0b 0b 08 01 00 80 80     .......`........
    2948:	80 88 90 a0 c0 a0 90 88 84 05 0b 0b 08 02 00 60     ...............`
    2958:	20 20 20 20 20 20 20 20 20 f8 07 08 08 08 01 00              .......
    2968:	ec 92 92 92 92 92 92 92 06 08 08 08 01 00 b8 c4     ................
    2978:	84 84 84 84 84 84 06 08 08 08 01 00 78 84 84 84     ............x...
    2988:	84 84 84 78 06 0a 0a 08 01 fe b8 c4 84 84 84 84     ...x............
    2998:	c4 b8 80 80 06 0a 0a 08 01 fe 74 8c 84 84 84 84     ..........t.....
    29a8:	8c 74 04 04 06 08 08 08 01 00 b8 c4 84 80 80 80     .t..............
    29b8:	80 80 06 08 08 08 01 00 78 84 80 60 18 04 84 78     ........x..`...x
    29c8:	05 0a 0a 08 01 00 20 20 20 f8 20 20 20 20 20 18     ......   .     .
    29d8:	06 08 08 08 01 00 84 84 84 84 84 84 8c 74 06 08     .............t..
    29e8:	08 08 01 00 84 84 84 48 48 48 30 30 07 08 08 08     .......HHH00....
    29f8:	01 00 82 92 92 92 92 92 92 6c 06 08 08 08 01 00     .........l......
    2a08:	84 84 48 30 30 48 84 84 06 0a 0a 08 01 fe 84 84     ..H00H..........
    2a18:	84 84 84 4c 34 04 04 78 06 08 08 08 01 00 fc 04     ...L4..x........
    2a28:	08 10 20 40 80 fc 03 0c 0c 08 03 ff 60 80 80 40     .. @........`..@
    2a38:	40 80 80 40 40 80 80 60 01 0e 0e 08 04 fe 80 80     @..@@..`........
    2a48:	80 80 80 80 80 80 80 80 80 80 80 80 03 0c 0c 08     ................
    2a58:	02 ff c0 20 20 40 40 20 20 40 40 20 20 c0 07 03     ...  @@  @@  ...
    2a68:	03 08 01 08 62 92 8c 10 10 20 10 00 fe aa aa 00     ....b.... ......
    2a78:	01 80 00 00 01 80 00 73 d1 ca 10 4b d1 ca 10 73     .......s...K...s
    2a88:	df 80 00 00 01 80 00 00 01 80 00 55 55 10 10 20     ...........UU.. 
    2a98:	10 00 fe aa aa 00 01 80 00 00 01 80 00 71 9d ca     .............q..
    2aa8:	52 73 d3 c2 52 42 5d 80 00 00 01 80 00 00 01 80     Rs..RB].........
    2ab8:	00 55 55 10 10 20 10 00 fe aa aa 00 01 80 00 00     .UU.. ..........
    2ac8:	01 80 00 49 9d ca 52 7a 5d ca 50 49 91 80 00 00     ...I..Rz].PI....
    2ad8:	01 80 00 00 01 80 00 55 55 10 10 20 10 00 fe aa     .......UU.. ....
    2ae8:	aa 00 01 80 00 00 01 80 00 73 93 ca 52 73 9f ca     .........s..Rs..
    2af8:	12 72 13 80 00 00 01 80 00 00 01 80 00 55 55 10     .r...........UU.
    2b08:	10 20 10 00 fe aa aa 00 01 80 00 00 01 80 00 4b     . .............K
    2b18:	93 ea 52 5b 9f ca 52 4b 93 80 00 00 01 80 00 00     ..R[..RK........
    2b28:	01 80 00 55 55 10 10 20 10 00 fe aa aa 00 01 80     ...UU.. ........
    2b38:	00 00 01 80 00 74 b9 a6 a4 25 a5 a4 a4 74 b9 80     .....t...%...t..
    2b48:	00 00 01 80 00 00 01 80 00 55 55 10 10 20 10 00     .........UU.. ..
    2b58:	fe aa aa 00 01 80 00 00 01 80 00 4b d1 ea 10 5b     ...........K...[
    2b68:	d1 ca 10 4b df 80 00 00 01 80 00 00 01 80 00 55     ...K...........U
    2b78:	55 10 10 20 10 00 fe aa aa 00 01 80 00 00 01 80     U.. ............
    2b88:	00 39 cd c2 12 31 9f 88 52 73 93 80 00 00 01 80     .9...1..Rs......
    2b98:	00 00 01 80 00 55 55 10 10 20 10 00 fe aa aa 00     .....UU.. ......
    2ba8:	01 80 00 00 01 80 00 79 cd c2 12 79 9f c0 52 7b     .......y...y..R{
    2bb8:	93 80 00 00 01 80 00 00 01 80 00 55 55 10 10 20     ...........UU.. 
    2bc8:	10 00 fe aa aa 00 01 80 00 00 01 80 00 4b 9d c9     .............K..
    2bd8:	20 79 19 c9 04 49 39 80 00 00 01 80 00 00 01 80      y...I9.........
    2be8:	00 55 55 10 10 20 10 00 fe aa aa 00 01 80 00 00     .UU.. ..........
    2bf8:	01 80 00 25 dd a4 84 3c 85 a4 84 24 99 80 00 00     ...%...<...$....
    2c08:	01 80 00 00 01 80 00 55 55 10 10 20 10 00 fe aa     .......UU.. ....
    2c18:	aa 00 01 80 00 00 01 80 00 45 cd c4 90 44 89 a8     .........E...D..
    2c28:	84 10 99 80 00 00 01 80 00 00 01 80 00 55 55 10     .............UU.
    2c38:	10 20 10 00 fe aa aa 00 01 80 00 00 01 80 00 72     . .............r
    2c48:	1d ca 12 72 13 c2 12 43 dd 80 00 00 01 80 00 00     ...r...C........
    2c58:	01 80 00 55 55 10 10 20 10 00 fe aa aa 00 01 80     ...UU.. ........
    2c68:	00 00 01 80 00 72 13 ca 12 72 13 c2 12 43 cd 80     .....r...r...C..
    2c78:	00 00 01 80 00 00 01 80 00 55 55 10 10 20 10 00     .........UU.. ..
    2c88:	fe aa aa 00 01 80 00 00 01 80 00 0e 21 89 20 0e     ............!. .
    2c98:	21 8a 20 09 21 80 00 00 01 80 00 00 01 80 00 55     !. .!..........U
    2ca8:	55 10 10 20 10 00 fe aa aa 00 01 80 00 00 01 80     U.. ............
    2cb8:	00 39 dd c2 02 31 8d 88 50 73 9f 80 00 00 01 80     .9...1..Ps......
    2cc8:	00 00 01 80 00 55 55 10 10 20 10 00 fe aa aa 00     .....UU.. ......
    2cd8:	01 80 00 00 01 80 00 39 dd c2 02 31 8d 88 42 73     .......9...1..Bs
    2ce8:	9d 80 00 00 01 80 00 00 01 80 00 55 55 10 10 20     ...........UU.. 
    2cf8:	10 00 fe aa aa 00 01 80 00 00 01 80 00 71 cf ca     .............q..
    2d08:	10 4a 0d ca 02 71 dd 80 00 00 01 80 00 00 01 80     .J...q..........
    2d18:	00 55 55 10 10 20 10 00 fe aa aa 00 01 80 00 00     .UU.. ..........
    2d28:	01 80 00 72 45 ca 4c 72 45 c2 44 41 8f 80 00 00     ...rE.LrE.DA....
    2d38:	01 80 00 00 01 80 00 55 55 10 10 20 10 00 fe aa     .......UU.. ....
    2d48:	aa 00 01 80 00 00 01 80 00 72 5d ca 42 72 4d c2     .........r].BrM.
    2d58:	50 41 9f 80 00 00 01 80 00 00 01 80 00 55 55 10     PA...........UU.
    2d68:	10 20 10 00 fe aa aa 00 01 80 00 00 01 80 00 3b     . .............;
    2d78:	9d c1 20 31 19 89 04 71 39 80 00 00 01 80 00 00     .. 1...q9.......
    2d88:	01 80 00 55 55 10 10 20 10 00 fe aa aa 00 01 80     ...UU.. ........
    2d98:	00 00 01 80 00 39 d3 c2 12 42 1f c2 12 39 d3 80     .....9...B...9..
    2da8:	00 00 01 80 00 00 01 80 00 55 55 10 10 20 10 00     .........UU.. ..
    2db8:	fe aa aa 00 01 80 00 00 01 80 00 22 89 b6 88 2a     ..........."...*
    2dc8:	a9 a2 d8 22 89 80 00 00 01 80 00 00 01 80 00 55     ..."...........U
    2dd8:	55 10 10 20 10 00 fe aa aa 00 01 80 00 00 01 80     U.. ............
    2de8:	00 3b 8d c2 52 33 9f 8a 12 72 13 80 00 00 01 80     .;..R3...r......
    2df8:	00 00 01 80 00 55 55 10 10 20 10 00 fe aa aa 00     .....UU.. ......
    2e08:	01 80 00 00 01 80 00 7b 8d c2 52 7b 9f c2 12 7a     .......{..R{...z
    2e18:	13 80 00 00 01 80 00 00 01 80 00 55 55 10 10 20     ...........UU.. 
    2e28:	10 00 fe aa aa 00 01 80 00 00 01 80 00 39 8f c2     .............9..
    2e38:	50 32 4d 8a 42 71 9d 80 00 00 01 80 00 00 01 80     P2M.Bq..........
    2e48:	00 55 55 10 10 20 10 00 fe aa aa 00 01 80 00 00     .UU.. ..........
    2e58:	01 80 00 33 9b c4 22 25 a3 94 a2 63 9b 80 00 00     ...3.."%...c....
    2e68:	01 80 00 00 01 80 00 55 55 10 10 20 10 00 fe aa     .......UU.. ....
    2e78:	aa 00 01 80 00 00 01 80 00 39 dd c2 08 32 09 8a     .........9...2..
    2e88:	08 71 dd 80 00 00 01 80 00 00 01 80 00 55 55 10     .q...........UU.
    2e98:	10 20 10 00 fe aa aa 00 01 80 00 00 01 80 00 39     . .............9
    2ea8:	dd c2 08 41 89 c0 48 3b 9d 80 00 00 01 80 00 00     ...A..H;........
    2eb8:	01 80 00 55 55 10 10 20 10 00 fe aa aa 00 01 80     ...UU.. ........
    2ec8:	00 00 01 80 00 0e f9 90 20 0c 21 82 20 1c 21 80     ........ .!. .!.
    2ed8:	00 00 01 80 00 00 01 80 00 55 55 10 10 20 10 00     .........UU.. ..
    2ee8:	fe aa aa 00 01 80 00 00 01 80 00 31 cf ca 10 49     ...........1...I
    2ef8:	91 c8 50 33 8f 80 00 00 01 80 00 00 01 80 00 55     ..P3...........U
    2f08:	55 10 10 20 10 00 fe aa aa 00 01 80 00 00 01 80     U.. ............
    2f18:	00 1c 89 92 d8 1c a9 90 88 10 89 80 00 00 01 80     ................
    2f28:	00 00 01 80 00 55 55 10 10 20 10 00 fe aa aa 00     .....UU.. ......
    2f38:	01 80 00 00 01 80 00 33 8f ca 50 7b 91 ca 10 4a     .......3..P{...J
    2f48:	0f 80 00 00 01 80 00 00 01 80 00 55 55 00 00 00     ...........UU...
    2f58:	08 00 0e 01 0a 0a 08 04 00 80 80 00 80 80 80 80     ................
    2f68:	80 80 80 07 0a 0a 08 01 00 10 10 7c 92 90 90 92     ...........|....
    2f78:	7c 10 10 07 0a 0a 08 01 00 1c 20 20 20 f8 20 20     |.........   .  
    2f88:	20 7c c2 06 08 08 08 01 01 84 48 78 48 48 78 48      |........HxHHxH
    2f98:	84 07 0a 0a 08 01 00 82 44 28 10 fe 10 fe 10 10     ........D(......
    2fa8:	10 01 0a 0a 08 04 00 80 80 80 80 00 00 80 80 80     ................
    2fb8:	80 06 0a 0a 08 01 00 78 84 80 78 84 84 78 04 84     .......x..x..x..
    2fc8:	78 04 02 02 08 02 0c 90 90 08 0a 0a 08 00 00 3c     x..............<
    2fd8:	42 99 a5 a1 a1 a5 99 42 3c 05 07 07 08 02 05 70     B......B<......p
    2fe8:	08 78 88 78 00 f8 06 09 09 08 01 00 24 24 48 48     .x.x........$$HH
    2ff8:	90 48 48 24 24 06 04 04 08 01 00 fc 04 04 04 10     .HH$$...........
    3008:	10 20 10 00 fe aa aa 00 01 80 00 3a 63 c2 54 33     . .........:c.T3
    3018:	c9 8a 48 72 49 80 00 00 01 80 00 03 c1 80 00 00     ..HrI...........
    3028:	01 80 00 55 55 08 0a 0a 08 00 00 3c 42 b9 a5 a5     ...UU......<B...
    3038:	b9 a9 a5 42 3c 06 01 01 08 01 0b fc 03 04 04 08     ...B<...........
    3048:	02 0a 40 a0 a0 40 07 09 09 08 01 01 10 10 10 fe     ..@..@..........
    3058:	10 10 10 00 fe 05 07 07 08 02 05 70 88 08 70 80     ...........p..p.
    3068:	80 f8 05 07 07 08 02 05 70 88 08 70 08 88 70 03     ........p..p..p.
    3078:	03 03 08 03 0a 20 40 80 08 0a 0a 08 00 fe 42 42     ..... @.......BB
    3088:	42 42 42 42 66 59 40 80 06 0c 0c 08 01 ff 7c f4     BBBBfY@.......|.
    3098:	f4 f4 f4 74 14 14 14 14 14 1c 02 02 02 08 03 04     ...t............
    30a8:	c0 c0 03 02 02 08 02 fe 20 c0 03 07 07 08 02 05     ........ .......
    30b8:	20 60 a0 20 20 20 20 05 07 07 08 02 05 70 88 88      `.    ......p..
    30c8:	88 70 00 f8 06 09 09 08 01 00 90 90 48 48 24 48     .p..........HH$H
    30d8:	48 90 90 06 0a 0a 08 01 00 44 c4 48 50 50 24 2c     H........D.HPP$,
    30e8:	54 9c 84 06 0a 0a 08 01 00 44 c4 48 50 50 28 34     T........D.HPP(4
    30f8:	44 88 9c 06 0a 0a 08 01 00 c4 24 48 30 d0 24 2c     D.........$H0.$,
    3108:	54 9c 84 06 0a 0a 08 01 00 10 10 00 10 10 60 84     T.............`.
    3118:	84 84 78 06 0e 0e 08 01 00 60 18 00 00 30 48 48     ..x......`...0HH
    3128:	84 84 fc 84 84 84 84 06 0e 0e 08 01 00 18 60 00     ..............`.
    3138:	00 30 48 48 84 84 fc 84 84 84 84 06 0e 0e 08 01     .0HH............
    3148:	00 30 48 00 00 30 48 48 84 84 fc 84 84 84 84 06     .0H..0HH........
    3158:	0e 0e 08 01 00 64 98 00 00 30 48 48 84 84 fc 84     .....d...0HH....
    3168:	84 84 84 06 0e 0e 08 01 00 48 48 00 00 30 48 48     .........HH..0HH
    3178:	84 84 fc 84 84 84 84 06 0e 0e 08 01 00 30 48 30     .............0H0
    3188:	00 30 48 48 84 84 fc 84 84 84 84 07 0a 0a 08 01     .0HH............
    3198:	00 3e 50 90 90 fe 90 90 90 90 9e 06 0c 0c 08 01     .>P.............
    31a8:	fe 78 84 84 80 80 80 80 84 84 78 10 60 06 0e 0e     .x........x.`...
    31b8:	08 01 00 60 18 00 00 fc 80 80 80 f8 80 80 80 80     ...`............
    31c8:	fc 06 0e 0e 08 01 00 18 60 00 00 fc 80 80 80 f8     ........`.......
    31d8:	80 80 80 80 fc 06 0e 0e 08 01 00 30 48 00 00 fc     ...........0H...
    31e8:	80 80 80 f8 80 80 80 80 fc 06 0e 0e 08 01 00 48     ...............H
    31f8:	48 00 00 fc 80 80 80 f8 80 80 80 80 fc 05 0e 0e     H...............
    3208:	08 02 00 60 18 00 00 f8 20 20 20 20 20 20 20 20     ...`....        
    3218:	f8 05 0e 0e 08 02 00 30 c0 00 00 f8 20 20 20 20     .......0....    
    3228:	20 20 20 20 f8 05 0e 0e 08 02 00 60 90 00 00 f8         .......`....
    3238:	20 20 20 20 20 20 20 20 f8 05 0e 0e 08 02 00 90             ........
    3248:	90 00 00 f8 20 20 20 20 20 20 20 20 f8 07 0a 0a     ....        ....
    3258:	08 00 00 78 44 42 42 f2 42 42 42 44 78 06 0e 0e     ...xDBB.BBBDx...
    3268:	08 01 00 64 98 00 00 84 c4 c4 a4 a4 94 94 8c 8c     ...d............
    3278:	84 06 0e 0e 08 01 00 60 18 00 00 78 84 84 84 84     .......`...x....
    3288:	84 84 84 84 78 06 0e 0e 08 01 00 18 60 00 00 78     ....x.......`..x
    3298:	84 84 84 84 84 84 84 84 78 06 0e 0e 08 01 00 30     ........x......0
    32a8:	48 00 00 78 84 84 84 84 84 84 84 84 78 06 0e 0e     H..x........x...
    32b8:	08 01 00 64 98 00 00 78 84 84 84 84 84 84 84 84     ...d...x........
    32c8:	78 06 0e 0e 08 01 00 48 48 00 00 78 84 84 84 84     x......HH..x....
    32d8:	84 84 84 84 78 06 05 05 08 01 02 84 48 30 48 84     ....x.......H0H.
    32e8:	06 0c 0c 08 01 ff 04 74 88 8c 94 94 a4 a4 c4 44     .......t.......D
    32f8:	b8 80 06 0e 0e 08 01 00 60 18 00 00 84 84 84 84     ........`.......
    3308:	84 84 84 84 84 78 06 0e 0e 08 01 00 18 60 00 00     .....x.......`..
    3318:	84 84 84 84 84 84 84 84 84 78 06 0e 0e 08 01 00     .........x......
    3328:	30 48 00 00 84 84 84 84 84 84 84 84 84 78 06 0e     0H...........x..
    3338:	0e 08 01 00 48 48 00 00 84 84 84 84 84 84 84 84     ....HH..........
    3348:	84 78 07 0e 0e 08 01 00 18 60 00 00 82 82 44 44     .x.......`....DD
    3358:	28 10 10 10 10 10 06 0b 0b 08 01 00 80 80 f0 88     (...............
    3368:	84 84 88 f0 80 80 80 06 0a 0a 08 01 00 70 88 88     .............p..
    3378:	90 b0 88 84 84 a4 98 06 0c 0c 08 01 00 60 18 00     .............`..
    3388:	00 78 84 04 7c 84 84 8c 74 06 0c 0c 08 01 00 18     .x..|...t.......
    3398:	60 00 00 78 84 04 7c 84 84 8c 74 06 0c 0c 08 01     `..x..|...t.....
    33a8:	00 30 48 00 00 78 84 04 7c 84 84 8c 74 06 0c 0c     .0H..x..|...t...
    33b8:	08 01 00 64 98 00 00 78 84 04 7c 84 84 8c 74 06     ...d...x..|...t.
    33c8:	0c 0c 08 01 00 48 48 00 00 78 84 04 7c 84 84 8c     .....HH..x..|...
    33d8:	74 06 0d 0d 08 01 00 30 48 30 00 00 78 84 04 7c     t......0H0..x..|
    33e8:	84 84 8c 74 07 08 08 08 01 00 7c 92 12 7e 90 90     ...t......|..~..
    33f8:	92 7c 06 0a 0a 08 01 fe 78 84 80 80 80 80 84 78     .|......x......x
    3408:	10 60 06 0c 0c 08 01 00 60 18 00 00 78 84 84 fc     .`......`...x...
    3418:	80 80 84 78 06 0c 0c 08 01 00 18 60 00 00 78 84     ...x.......`..x.
    3428:	84 fc 80 80 84 78 06 0c 0c 08 01 00 30 48 00 00     .....x......0H..
    3438:	78 84 84 fc 80 80 84 78 06 0c 0c 08 01 00 48 48     x......x......HH
    3448:	00 00 78 84 84 fc 80 80 84 78 05 0c 0c 08 02 00     ..x......x......
    3458:	c0 30 00 00 60 20 20 20 20 20 20 f8 05 0c 0c 08     .0..`      .....
    3468:	02 00 30 c0 00 00 60 20 20 20 20 20 20 f8 05 0c     ..0...`      ...
    3478:	0c 08 02 00 60 90 00 00 60 20 20 20 20 20 20 f8     ....`...`      .
    3488:	05 0c 0c 08 02 00 90 90 00 00 60 20 20 20 20 20     ..........`     
    3498:	20 f8 06 0c 0c 08 01 00 64 18 28 44 04 7c 84 84      .......d.(D.|..
    34a8:	84 84 84 78 06 0c 0c 08 01 00 64 98 00 00 b8 c4     ...x......d.....
    34b8:	84 84 84 84 84 84 06 0c 0c 08 01 00 60 18 00 00     ............`...
    34c8:	78 84 84 84 84 84 84 78 06 0c 0c 08 01 00 18 60     x......x.......`
    34d8:	00 00 78 84 84 84 84 84 84 78 06 0c 0c 08 01 00     ..x......x......
    34e8:	30 48 00 00 78 84 84 84 84 84 84 78 06 0c 0c 08     0H..x......x....
    34f8:	01 00 64 98 00 00 78 84 84 84 84 84 84 78 06 0c     ..d...x......x..
    3508:	0c 08 01 00 48 48 00 00 78 84 84 84 84 84 84 78     ....HH..x......x
    3518:	06 07 07 08 01 01 30 00 00 fc 00 00 30 06 0a 0a     ......0.....0...
    3528:	08 01 ff 04 78 8c 94 94 a4 a4 c4 78 80 06 0c 0c     ....x......x....
    3538:	08 01 00 60 18 00 00 84 84 84 84 84 84 8c 74 06     ...`..........t.
    3548:	0c 0c 08 01 00 18 60 00 00 84 84 84 84 84 84 8c     ......`.........
    3558:	74 06 0c 0c 08 01 00 30 48 00 00 84 84 84 84 84     t......0H.......
    3568:	84 8c 74 06 0c 0c 08 01 00 48 48 00 00 84 84 84     ..t......HH.....
    3578:	84 84 84 8c 74 06 0e 0e 08 01 fe 18 60 00 00 84     ....t.......`...
    3588:	84 84 84 84 4c 34 04 04 78 05 0c 0c 08 02 fe 80     ....L4..x.......
    3598:	80 f0 88 88 88 90 a0 c0 80 80 80 06 0e 0e 08 01     ................
    35a8:	fe 48 48 00 00 84 84 84 84 84 4c 34 04 04 78 00     .HH.......L4..x.

000035b8 <__ctors_end>:
    35b8:	11 24       	eor	r1, r1
    35ba:	1f be       	out	0x3f, r1	; 63
    35bc:	cf ef       	ldi	r28, 0xFF	; 255
    35be:	da e0       	ldi	r29, 0x0A	; 10
    35c0:	de bf       	out	0x3e, r29	; 62
    35c2:	cd bf       	out	0x3d, r28	; 61

000035c4 <__do_copy_data>:
    35c4:	11 e0       	ldi	r17, 0x01	; 1
    35c6:	a0 e0       	ldi	r26, 0x00	; 0
    35c8:	b1 e0       	ldi	r27, 0x01	; 1
    35ca:	e2 e8       	ldi	r30, 0x82	; 130
    35cc:	fa e5       	ldi	r31, 0x5A	; 90
    35ce:	02 c0       	rjmp	.+4      	; 0x35d4 <__do_copy_data+0x10>
    35d0:	05 90       	lpm	r0, Z+
    35d2:	0d 92       	st	X+, r0
    35d4:	aa 35       	cpi	r26, 0x5A	; 90
    35d6:	b1 07       	cpc	r27, r17
    35d8:	d9 f7       	brne	.-10     	; 0x35d0 <__do_copy_data+0xc>

000035da <__do_clear_bss>:
    35da:	22 e0       	ldi	r18, 0x02	; 2
    35dc:	aa e5       	ldi	r26, 0x5A	; 90
    35de:	b1 e0       	ldi	r27, 0x01	; 1
    35e0:	01 c0       	rjmp	.+2      	; 0x35e4 <.do_clear_bss_start>

000035e2 <.do_clear_bss_loop>:
    35e2:	1d 92       	st	X+, r1

000035e4 <.do_clear_bss_start>:
    35e4:	a9 36       	cpi	r26, 0x69	; 105
    35e6:	b2 07       	cpc	r27, r18
    35e8:	e1 f7       	brne	.-8      	; 0x35e2 <.do_clear_bss_loop>
    35ea:	0e 94 ee 1e 	call	0x3ddc	; 0x3ddc <main>
    35ee:	0c 94 3f 2d 	jmp	0x5a7e	; 0x5a7e <_exit>

000035f2 <__bad_interrupt>:
    35f2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000035f6 <ADC_Init>:
{
    /*
     ADEN: Set to turn on ADC , by default it is turned off
     ADPS2: ADPS2 and ADPS0 set to make division factor 128 (125 kHz) 
    */
    ADCSRA  = (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0);
    35f6:	ea e7       	ldi	r30, 0x7A	; 122
    35f8:	f0 e0       	ldi	r31, 0x00	; 0
    35fa:	87 e0       	ldi	r24, 0x07	; 7
    35fc:	80 83       	st	Z, r24
    ADCSRA |= (1 << ADEN);
    35fe:	80 81       	ld	r24, Z
    3600:	80 68       	ori	r24, 0x80	; 128
    3602:	80 83       	st	Z, r24
    3604:	08 95       	ret

00003606 <ADC_Sample>:
}

unsigned int ADC_Sample(char Channel)
{
    /* set the ADC input channel */
    ADMUX = Channel; 
    3606:	ec e7       	ldi	r30, 0x7C	; 124
    3608:	f0 e0       	ldi	r31, 0x00	; 0
    360a:	80 83       	st	Z, r24
	//ADMUX |= (1 << REFS0) 
    ADMUX |= (1 << REFS0) | (1 << REFS1); //Internal 2.56V Voltage Reference with external capacitor on AREF pin
    360c:	80 81       	ld	r24, Z
    360e:	80 6c       	ori	r24, 0xC0	; 192
    3610:	80 83       	st	Z, r24

    /* Start Conversion */
    ADCSRA |= (1<<ADSC);
    3612:	ea e7       	ldi	r30, 0x7A	; 122
    3614:	f0 e0       	ldi	r31, 0x00	; 0
    3616:	80 81       	ld	r24, Z
    3618:	80 64       	ori	r24, 0x40	; 64
    361a:	80 83       	st	Z, r24

    /* Wait for conversion to complete */
    while (ADCSRA & (1<<ADSC)); 
    361c:	80 81       	ld	r24, Z
    361e:	86 fd       	sbrc	r24, 6
    3620:	fd cf       	rjmp	.-6      	; 0x361c <ADC_Sample+0x16>

    /* Return ADC Value */
    return ADC;  
    3622:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
    3626:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
}
    362a:	08 95       	ret

0000362c <acquireSensorVoltage>:
	}
}

void acquireSensorVoltage(void) {
	// read the value from the sensor:
	sensorValue = ADC_Sample(sensorADC);
    362c:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <sensorADC>
    3630:	0e 94 03 1b 	call	0x3606	; 0x3606 <ADC_Sample>
    3634:	90 93 6f 01 	sts	0x016F, r25	; 0x80016f <sensorValue+0x1>
    3638:	80 93 6e 01 	sts	0x016E, r24	; 0x80016e <sensorValue>
	sensorVoltage = sensorValue * VREF / 1023.0;
    363c:	bc 01       	movw	r22, r24
    363e:	80 e0       	ldi	r24, 0x00	; 0
    3640:	90 e0       	ldi	r25, 0x00	; 0
    3642:	0e 94 af 27 	call	0x4f5e	; 0x4f5e <__floatunsisf>
    3646:	2a e0       	ldi	r18, 0x0A	; 10
    3648:	37 ed       	ldi	r19, 0xD7	; 215
    364a:	43 e2       	ldi	r20, 0x23	; 35
    364c:	50 e4       	ldi	r21, 0x40	; 64
    364e:	0e 94 66 28 	call	0x50cc	; 0x50cc <__mulsf3>
    3652:	20 e0       	ldi	r18, 0x00	; 0
    3654:	30 ec       	ldi	r19, 0xC0	; 192
    3656:	4f e7       	ldi	r20, 0x7F	; 127
    3658:	54 e4       	ldi	r21, 0x44	; 68
    365a:	0e 94 07 27 	call	0x4e0e	; 0x4e0e <__divsf3>
    365e:	60 93 6a 01 	sts	0x016A, r22	; 0x80016a <sensorVoltage>
    3662:	70 93 6b 01 	sts	0x016B, r23	; 0x80016b <sensorVoltage+0x1>
    3666:	80 93 6c 01 	sts	0x016C, r24	; 0x80016c <sensorVoltage+0x2>
    366a:	90 93 6d 01 	sts	0x016D, r25	; 0x80016d <sensorVoltage+0x3>
    366e:	08 95       	ret

00003670 <acquireBatteryVoltage>:
}


void acquireBatteryVoltage(void) {
    // read the value from the sensor:
    batteryValue    = ADC_Sample(batteryADC);
    3670:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <batteryADC>
    3674:	0e 94 03 1b 	call	0x3606	; 0x3606 <ADC_Sample>
    3678:	90 93 67 01 	sts	0x0167, r25	; 0x800167 <batteryValue+0x1>
    367c:	80 93 66 01 	sts	0x0166, r24	; 0x800166 <batteryValue>
    batteryVoltage  = batteryValue * VREF / 1023.0;
    3680:	bc 01       	movw	r22, r24
    3682:	80 e0       	ldi	r24, 0x00	; 0
    3684:	90 e0       	ldi	r25, 0x00	; 0
    3686:	0e 94 af 27 	call	0x4f5e	; 0x4f5e <__floatunsisf>
    368a:	2a e0       	ldi	r18, 0x0A	; 10
    368c:	37 ed       	ldi	r19, 0xD7	; 215
    368e:	43 e2       	ldi	r20, 0x23	; 35
    3690:	50 e4       	ldi	r21, 0x40	; 64
    3692:	0e 94 66 28 	call	0x50cc	; 0x50cc <__mulsf3>
    3696:	20 e0       	ldi	r18, 0x00	; 0
    3698:	30 ec       	ldi	r19, 0xC0	; 192
    369a:	4f e7       	ldi	r20, 0x7F	; 127
    369c:	54 e4       	ldi	r21, 0x44	; 68
    369e:	0e 94 07 27 	call	0x4e0e	; 0x4e0e <__divsf3>
	batteryVoltage *= 2.3986;
    36a2:	2a ea       	ldi	r18, 0xAA	; 170
    36a4:	32 e8       	ldi	r19, 0x82	; 130
    36a6:	49 e1       	ldi	r20, 0x19	; 25
    36a8:	50 e4       	ldi	r21, 0x40	; 64
    36aa:	0e 94 66 28 	call	0x50cc	; 0x50cc <__mulsf3>
    36ae:	60 93 5e 01 	sts	0x015E, r22	; 0x80015e <batteryVoltage>
    36b2:	70 93 5f 01 	sts	0x015F, r23	; 0x80015f <batteryVoltage+0x1>
    36b6:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <batteryVoltage+0x2>
    36ba:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <batteryVoltage+0x3>
    36be:	08 95       	ret

000036c0 <calcPressure>:
}

void calcPressure(void) {
    36c0:	8f 92       	push	r8
    36c2:	9f 92       	push	r9
    36c4:	af 92       	push	r10
    36c6:	bf 92       	push	r11
    36c8:	cf 92       	push	r12
    36ca:	df 92       	push	r13
    36cc:	ef 92       	push	r14
    36ce:	ff 92       	push	r15
	/* read the voltage for ADC */
	acquireSensorVoltage();
    36d0:	0e 94 16 1b 	call	0x362c	; 0x362c <acquireSensorVoltage>

	/* compute the resistance from voltage */
	resistance  = (1.625*sensorVoltage + 2.80311987)*12060.0;
    36d4:	c0 90 6a 01 	lds	r12, 0x016A	; 0x80016a <sensorVoltage>
    36d8:	d0 90 6b 01 	lds	r13, 0x016B	; 0x80016b <sensorVoltage+0x1>
    36dc:	e0 90 6c 01 	lds	r14, 0x016C	; 0x80016c <sensorVoltage+0x2>
    36e0:	f0 90 6d 01 	lds	r15, 0x016D	; 0x80016d <sensorVoltage+0x3>
    36e4:	20 e0       	ldi	r18, 0x00	; 0
    36e6:	30 e0       	ldi	r19, 0x00	; 0
    36e8:	40 ed       	ldi	r20, 0xD0	; 208
    36ea:	5f e3       	ldi	r21, 0x3F	; 63
    36ec:	c7 01       	movw	r24, r14
    36ee:	b6 01       	movw	r22, r12
    36f0:	0e 94 66 28 	call	0x50cc	; 0x50cc <__mulsf3>
    36f4:	21 e5       	ldi	r18, 0x51	; 81
    36f6:	36 e6       	ldi	r19, 0x66	; 102
    36f8:	43 e3       	ldi	r20, 0x33	; 51
    36fa:	50 e4       	ldi	r21, 0x40	; 64
    36fc:	0e 94 96 26 	call	0x4d2c	; 0x4d2c <__addsf3>
    3700:	20 e0       	ldi	r18, 0x00	; 0
    3702:	30 e7       	ldi	r19, 0x70	; 112
    3704:	4c e3       	ldi	r20, 0x3C	; 60
    3706:	56 e4       	ldi	r21, 0x46	; 70
    3708:	0e 94 66 28 	call	0x50cc	; 0x50cc <__mulsf3>
    370c:	4b 01       	movw	r8, r22
    370e:	5c 01       	movw	r10, r24
	resistance /= (8.40935961 - 2.965 * sensorVoltage);
    3710:	2f e8       	ldi	r18, 0x8F	; 143
    3712:	32 ec       	ldi	r19, 0xC2	; 194
    3714:	4d e3       	ldi	r20, 0x3D	; 61
    3716:	50 e4       	ldi	r21, 0x40	; 64
    3718:	c7 01       	movw	r24, r14
    371a:	b6 01       	movw	r22, r12
    371c:	0e 94 66 28 	call	0x50cc	; 0x50cc <__mulsf3>
    3720:	9b 01       	movw	r18, r22
    3722:	ac 01       	movw	r20, r24
    3724:	6d eb       	ldi	r22, 0xBD	; 189
    3726:	7c e8       	ldi	r23, 0x8C	; 140
    3728:	86 e0       	ldi	r24, 0x06	; 6
    372a:	91 e4       	ldi	r25, 0x41	; 65
    372c:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__subsf3>
    3730:	9b 01       	movw	r18, r22
    3732:	ac 01       	movw	r20, r24
    3734:	c5 01       	movw	r24, r10
    3736:	b4 01       	movw	r22, r8
    3738:	0e 94 07 27 	call	0x4e0e	; 0x4e0e <__divsf3>
    373c:	60 93 62 01 	sts	0x0162, r22	; 0x800162 <resistance>
    3740:	70 93 63 01 	sts	0x0163, r23	; 0x800163 <resistance+0x1>
    3744:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <resistance+0x2>
    3748:	90 93 65 01 	sts	0x0165, r25	; 0x800165 <resistance+0x3>

	/* compute pressure from resistance (KOhms) */
	sensorPressure =  P1 * pow(resistance / 1000.0, P2) + P3;
    374c:	20 e0       	ldi	r18, 0x00	; 0
    374e:	30 e0       	ldi	r19, 0x00	; 0
    3750:	4a e7       	ldi	r20, 0x7A	; 122
    3752:	54 e4       	ldi	r21, 0x44	; 68
    3754:	0e 94 07 27 	call	0x4e0e	; 0x4e0e <__divsf3>
    3758:	2b e6       	ldi	r18, 0x6B	; 107
    375a:	3b e2       	ldi	r19, 0x2B	; 43
    375c:	46 e3       	ldi	r20, 0x36	; 54
    375e:	5f eb       	ldi	r21, 0xBF	; 191
    3760:	0e 94 d3 28 	call	0x51a6	; 0x51a6 <pow>
    3764:	2d ec       	ldi	r18, 0xCD	; 205
    3766:	3c e4       	ldi	r19, 0x4C	; 76
    3768:	45 ee       	ldi	r20, 0xE5	; 229
    376a:	53 e4       	ldi	r21, 0x43	; 67
    376c:	0e 94 66 28 	call	0x50cc	; 0x50cc <__mulsf3>
    3770:	28 ef       	ldi	r18, 0xF8	; 248
    3772:	33 e5       	ldi	r19, 0x53	; 83
    3774:	43 e9       	ldi	r20, 0x93	; 147
    3776:	50 e4       	ldi	r21, 0x40	; 64
    3778:	0e 94 96 26 	call	0x4d2c	; 0x4d2c <__addsf3>
    377c:	0e 94 80 27 	call	0x4f00	; 0x4f00 <__fixunssfsi>
    3780:	70 93 69 01 	sts	0x0169, r23	; 0x800169 <sensorPressure+0x1>
    3784:	60 93 68 01 	sts	0x0168, r22	; 0x800168 <sensorPressure>

	/* max of pressure */
	if (sensorPressure >= 99) sensorPressure = 99;
    3788:	63 36       	cpi	r22, 0x63	; 99
    378a:	71 05       	cpc	r23, r1
    378c:	38 f0       	brcs	.+14     	; 0x379c <calcPressure+0xdc>
    378e:	83 e6       	ldi	r24, 0x63	; 99
    3790:	90 e0       	ldi	r25, 0x00	; 0
    3792:	90 93 69 01 	sts	0x0169, r25	; 0x800169 <sensorPressure+0x1>
    3796:	80 93 68 01 	sts	0x0168, r24	; 0x800168 <sensorPressure>
    379a:	09 c0       	rjmp	.+18     	; 0x37ae <calcPressure+0xee>
	if (sensorPressure <= 20) reset = 1;
    379c:	65 31       	cpi	r22, 0x15	; 21
    379e:	71 05       	cpc	r23, r1
    37a0:	30 f4       	brcc	.+12     	; 0x37ae <calcPressure+0xee>
    37a2:	81 e0       	ldi	r24, 0x01	; 1
    37a4:	90 e0       	ldi	r25, 0x00	; 0
    37a6:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
    37aa:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
}
    37ae:	ff 90       	pop	r15
    37b0:	ef 90       	pop	r14
    37b2:	df 90       	pop	r13
    37b4:	cf 90       	pop	r12
    37b6:	bf 90       	pop	r11
    37b8:	af 90       	pop	r10
    37ba:	9f 90       	pop	r9
    37bc:	8f 90       	pop	r8
    37be:	08 95       	ret

000037c0 <roundPressure>:


int roundPressure(void) {
    37c0:	cf 92       	push	r12
    37c2:	df 92       	push	r13
    37c4:	ef 92       	push	r14
    37c6:	ff 92       	push	r15
	int retval = 0;
	
	if (sensorPressure >= (10 - offset) && sensorPressure < (10 + offset)) retval = 10;
    37c8:	60 91 68 01 	lds	r22, 0x0168	; 0x800168 <sensorPressure>
    37cc:	70 91 69 01 	lds	r23, 0x0169	; 0x800169 <sensorPressure+0x1>
    37d0:	80 e0       	ldi	r24, 0x00	; 0
    37d2:	90 e0       	ldi	r25, 0x00	; 0
    37d4:	0e 94 af 27 	call	0x4f5e	; 0x4f5e <__floatunsisf>
    37d8:	6b 01       	movw	r12, r22
    37da:	7c 01       	movw	r14, r24
    37dc:	20 e0       	ldi	r18, 0x00	; 0
    37de:	30 e0       	ldi	r19, 0x00	; 0
    37e0:	40 ef       	ldi	r20, 0xF0	; 240
    37e2:	50 e4       	ldi	r21, 0x40	; 64
    37e4:	0e 94 61 28 	call	0x50c2	; 0x50c2 <__gesf2>
    37e8:	88 23       	and	r24, r24
    37ea:	5c f0       	brlt	.+22     	; 0x3802 <roundPressure+0x42>
    37ec:	20 e0       	ldi	r18, 0x00	; 0
    37ee:	30 e0       	ldi	r19, 0x00	; 0
    37f0:	48 e4       	ldi	r20, 0x48	; 72
    37f2:	51 e4       	ldi	r21, 0x41	; 65
    37f4:	c7 01       	movw	r24, r14
    37f6:	b6 01       	movw	r22, r12
    37f8:	0e 94 02 27 	call	0x4e04	; 0x4e04 <__cmpsf2>
    37fc:	88 23       	and	r24, r24
    37fe:	0c f4       	brge	.+2      	; 0x3802 <roundPressure+0x42>
    3800:	f6 c0       	rjmp	.+492    	; 0x39ee <roundPressure+0x22e>
	else if (sensorPressure >= (15 - offset) && sensorPressure < (15 + offset)) retval = 15;
    3802:	20 e0       	ldi	r18, 0x00	; 0
    3804:	30 e0       	ldi	r19, 0x00	; 0
    3806:	48 e4       	ldi	r20, 0x48	; 72
    3808:	51 e4       	ldi	r21, 0x41	; 65
    380a:	c7 01       	movw	r24, r14
    380c:	b6 01       	movw	r22, r12
    380e:	0e 94 61 28 	call	0x50c2	; 0x50c2 <__gesf2>
    3812:	88 23       	and	r24, r24
    3814:	5c f0       	brlt	.+22     	; 0x382c <roundPressure+0x6c>
    3816:	20 e0       	ldi	r18, 0x00	; 0
    3818:	30 e0       	ldi	r19, 0x00	; 0
    381a:	4c e8       	ldi	r20, 0x8C	; 140
    381c:	51 e4       	ldi	r21, 0x41	; 65
    381e:	c7 01       	movw	r24, r14
    3820:	b6 01       	movw	r22, r12
    3822:	0e 94 02 27 	call	0x4e04	; 0x4e04 <__cmpsf2>
    3826:	88 23       	and	r24, r24
    3828:	0c f4       	brge	.+2      	; 0x382c <roundPressure+0x6c>
    382a:	e4 c0       	rjmp	.+456    	; 0x39f4 <roundPressure+0x234>
	else if (sensorPressure >= (20 - offset) && sensorPressure < (20 + offset)) retval = 20;
    382c:	20 e0       	ldi	r18, 0x00	; 0
    382e:	30 e0       	ldi	r19, 0x00	; 0
    3830:	4c e8       	ldi	r20, 0x8C	; 140
    3832:	51 e4       	ldi	r21, 0x41	; 65
    3834:	c7 01       	movw	r24, r14
    3836:	b6 01       	movw	r22, r12
    3838:	0e 94 61 28 	call	0x50c2	; 0x50c2 <__gesf2>
    383c:	88 23       	and	r24, r24
    383e:	5c f0       	brlt	.+22     	; 0x3856 <roundPressure+0x96>
    3840:	20 e0       	ldi	r18, 0x00	; 0
    3842:	30 e0       	ldi	r19, 0x00	; 0
    3844:	44 eb       	ldi	r20, 0xB4	; 180
    3846:	51 e4       	ldi	r21, 0x41	; 65
    3848:	c7 01       	movw	r24, r14
    384a:	b6 01       	movw	r22, r12
    384c:	0e 94 02 27 	call	0x4e04	; 0x4e04 <__cmpsf2>
    3850:	88 23       	and	r24, r24
    3852:	0c f4       	brge	.+2      	; 0x3856 <roundPressure+0x96>
    3854:	d2 c0       	rjmp	.+420    	; 0x39fa <roundPressure+0x23a>
	else if (sensorPressure >= (25 - offset) && sensorPressure < (25 + offset)) retval = 25;
    3856:	20 e0       	ldi	r18, 0x00	; 0
    3858:	30 e0       	ldi	r19, 0x00	; 0
    385a:	44 eb       	ldi	r20, 0xB4	; 180
    385c:	51 e4       	ldi	r21, 0x41	; 65
    385e:	c7 01       	movw	r24, r14
    3860:	b6 01       	movw	r22, r12
    3862:	0e 94 61 28 	call	0x50c2	; 0x50c2 <__gesf2>
    3866:	88 23       	and	r24, r24
    3868:	5c f0       	brlt	.+22     	; 0x3880 <roundPressure+0xc0>
    386a:	20 e0       	ldi	r18, 0x00	; 0
    386c:	30 e0       	ldi	r19, 0x00	; 0
    386e:	4c ed       	ldi	r20, 0xDC	; 220
    3870:	51 e4       	ldi	r21, 0x41	; 65
    3872:	c7 01       	movw	r24, r14
    3874:	b6 01       	movw	r22, r12
    3876:	0e 94 02 27 	call	0x4e04	; 0x4e04 <__cmpsf2>
    387a:	88 23       	and	r24, r24
    387c:	0c f4       	brge	.+2      	; 0x3880 <roundPressure+0xc0>
    387e:	c0 c0       	rjmp	.+384    	; 0x3a00 <roundPressure+0x240>
	else if (sensorPressure >= (30 - offset) && sensorPressure < (30 + offset)) retval = 30;
    3880:	20 e0       	ldi	r18, 0x00	; 0
    3882:	30 e0       	ldi	r19, 0x00	; 0
    3884:	4c ed       	ldi	r20, 0xDC	; 220
    3886:	51 e4       	ldi	r21, 0x41	; 65
    3888:	c7 01       	movw	r24, r14
    388a:	b6 01       	movw	r22, r12
    388c:	0e 94 61 28 	call	0x50c2	; 0x50c2 <__gesf2>
    3890:	88 23       	and	r24, r24
    3892:	5c f0       	brlt	.+22     	; 0x38aa <roundPressure+0xea>
    3894:	20 e0       	ldi	r18, 0x00	; 0
    3896:	30 e0       	ldi	r19, 0x00	; 0
    3898:	42 e0       	ldi	r20, 0x02	; 2
    389a:	52 e4       	ldi	r21, 0x42	; 66
    389c:	c7 01       	movw	r24, r14
    389e:	b6 01       	movw	r22, r12
    38a0:	0e 94 02 27 	call	0x4e04	; 0x4e04 <__cmpsf2>
    38a4:	88 23       	and	r24, r24
    38a6:	0c f4       	brge	.+2      	; 0x38aa <roundPressure+0xea>
    38a8:	ae c0       	rjmp	.+348    	; 0x3a06 <roundPressure+0x246>
	else if (sensorPressure >= (35 - offset) && sensorPressure < (35 + offset)) retval = 35;
    38aa:	20 e0       	ldi	r18, 0x00	; 0
    38ac:	30 e0       	ldi	r19, 0x00	; 0
    38ae:	42 e0       	ldi	r20, 0x02	; 2
    38b0:	52 e4       	ldi	r21, 0x42	; 66
    38b2:	c7 01       	movw	r24, r14
    38b4:	b6 01       	movw	r22, r12
    38b6:	0e 94 61 28 	call	0x50c2	; 0x50c2 <__gesf2>
    38ba:	88 23       	and	r24, r24
    38bc:	5c f0       	brlt	.+22     	; 0x38d4 <roundPressure+0x114>
    38be:	20 e0       	ldi	r18, 0x00	; 0
    38c0:	30 e0       	ldi	r19, 0x00	; 0
    38c2:	46 e1       	ldi	r20, 0x16	; 22
    38c4:	52 e4       	ldi	r21, 0x42	; 66
    38c6:	c7 01       	movw	r24, r14
    38c8:	b6 01       	movw	r22, r12
    38ca:	0e 94 02 27 	call	0x4e04	; 0x4e04 <__cmpsf2>
    38ce:	88 23       	and	r24, r24
    38d0:	0c f4       	brge	.+2      	; 0x38d4 <roundPressure+0x114>
    38d2:	9c c0       	rjmp	.+312    	; 0x3a0c <roundPressure+0x24c>
	else if (sensorPressure >= (40 - offset) && sensorPressure < (40 + offset)) retval = 40;
    38d4:	20 e0       	ldi	r18, 0x00	; 0
    38d6:	30 e0       	ldi	r19, 0x00	; 0
    38d8:	46 e1       	ldi	r20, 0x16	; 22
    38da:	52 e4       	ldi	r21, 0x42	; 66
    38dc:	c7 01       	movw	r24, r14
    38de:	b6 01       	movw	r22, r12
    38e0:	0e 94 61 28 	call	0x50c2	; 0x50c2 <__gesf2>
    38e4:	88 23       	and	r24, r24
    38e6:	5c f0       	brlt	.+22     	; 0x38fe <roundPressure+0x13e>
    38e8:	20 e0       	ldi	r18, 0x00	; 0
    38ea:	30 e0       	ldi	r19, 0x00	; 0
    38ec:	4a e2       	ldi	r20, 0x2A	; 42
    38ee:	52 e4       	ldi	r21, 0x42	; 66
    38f0:	c7 01       	movw	r24, r14
    38f2:	b6 01       	movw	r22, r12
    38f4:	0e 94 02 27 	call	0x4e04	; 0x4e04 <__cmpsf2>
    38f8:	88 23       	and	r24, r24
    38fa:	0c f4       	brge	.+2      	; 0x38fe <roundPressure+0x13e>
    38fc:	8a c0       	rjmp	.+276    	; 0x3a12 <roundPressure+0x252>
	else if (sensorPressure >= (45 - offset) && sensorPressure < (45 + offset)) retval = 45;
    38fe:	20 e0       	ldi	r18, 0x00	; 0
    3900:	30 e0       	ldi	r19, 0x00	; 0
    3902:	4a e2       	ldi	r20, 0x2A	; 42
    3904:	52 e4       	ldi	r21, 0x42	; 66
    3906:	c7 01       	movw	r24, r14
    3908:	b6 01       	movw	r22, r12
    390a:	0e 94 61 28 	call	0x50c2	; 0x50c2 <__gesf2>
    390e:	88 23       	and	r24, r24
    3910:	5c f0       	brlt	.+22     	; 0x3928 <roundPressure+0x168>
    3912:	20 e0       	ldi	r18, 0x00	; 0
    3914:	30 e0       	ldi	r19, 0x00	; 0
    3916:	4e e3       	ldi	r20, 0x3E	; 62
    3918:	52 e4       	ldi	r21, 0x42	; 66
    391a:	c7 01       	movw	r24, r14
    391c:	b6 01       	movw	r22, r12
    391e:	0e 94 02 27 	call	0x4e04	; 0x4e04 <__cmpsf2>
    3922:	88 23       	and	r24, r24
    3924:	0c f4       	brge	.+2      	; 0x3928 <roundPressure+0x168>
    3926:	78 c0       	rjmp	.+240    	; 0x3a18 <roundPressure+0x258>
	else if (sensorPressure >= (50 - offset) && sensorPressure < (50 + offset)) retval = 50;
    3928:	20 e0       	ldi	r18, 0x00	; 0
    392a:	30 e0       	ldi	r19, 0x00	; 0
    392c:	4e e3       	ldi	r20, 0x3E	; 62
    392e:	52 e4       	ldi	r21, 0x42	; 66
    3930:	c7 01       	movw	r24, r14
    3932:	b6 01       	movw	r22, r12
    3934:	0e 94 61 28 	call	0x50c2	; 0x50c2 <__gesf2>
    3938:	88 23       	and	r24, r24
    393a:	5c f0       	brlt	.+22     	; 0x3952 <roundPressure+0x192>
    393c:	20 e0       	ldi	r18, 0x00	; 0
    393e:	30 e0       	ldi	r19, 0x00	; 0
    3940:	42 e5       	ldi	r20, 0x52	; 82
    3942:	52 e4       	ldi	r21, 0x42	; 66
    3944:	c7 01       	movw	r24, r14
    3946:	b6 01       	movw	r22, r12
    3948:	0e 94 02 27 	call	0x4e04	; 0x4e04 <__cmpsf2>
    394c:	88 23       	and	r24, r24
    394e:	0c f4       	brge	.+2      	; 0x3952 <roundPressure+0x192>
    3950:	66 c0       	rjmp	.+204    	; 0x3a1e <roundPressure+0x25e>
	else if (sensorPressure >= (55 - offset) && sensorPressure < (55 + offset)) retval = 55;
    3952:	20 e0       	ldi	r18, 0x00	; 0
    3954:	30 e0       	ldi	r19, 0x00	; 0
    3956:	42 e5       	ldi	r20, 0x52	; 82
    3958:	52 e4       	ldi	r21, 0x42	; 66
    395a:	c7 01       	movw	r24, r14
    395c:	b6 01       	movw	r22, r12
    395e:	0e 94 61 28 	call	0x50c2	; 0x50c2 <__gesf2>
    3962:	88 23       	and	r24, r24
    3964:	5c f0       	brlt	.+22     	; 0x397c <roundPressure+0x1bc>
    3966:	20 e0       	ldi	r18, 0x00	; 0
    3968:	30 e0       	ldi	r19, 0x00	; 0
    396a:	46 e6       	ldi	r20, 0x66	; 102
    396c:	52 e4       	ldi	r21, 0x42	; 66
    396e:	c7 01       	movw	r24, r14
    3970:	b6 01       	movw	r22, r12
    3972:	0e 94 02 27 	call	0x4e04	; 0x4e04 <__cmpsf2>
    3976:	88 23       	and	r24, r24
    3978:	0c f4       	brge	.+2      	; 0x397c <roundPressure+0x1bc>
    397a:	54 c0       	rjmp	.+168    	; 0x3a24 <roundPressure+0x264>
	else if (sensorPressure >= (60 - offset) && sensorPressure < (60 + offset)) retval = 60;
    397c:	20 e0       	ldi	r18, 0x00	; 0
    397e:	30 e0       	ldi	r19, 0x00	; 0
    3980:	46 e6       	ldi	r20, 0x66	; 102
    3982:	52 e4       	ldi	r21, 0x42	; 66
    3984:	c7 01       	movw	r24, r14
    3986:	b6 01       	movw	r22, r12
    3988:	0e 94 61 28 	call	0x50c2	; 0x50c2 <__gesf2>
    398c:	88 23       	and	r24, r24
    398e:	5c f0       	brlt	.+22     	; 0x39a6 <roundPressure+0x1e6>
    3990:	20 e0       	ldi	r18, 0x00	; 0
    3992:	30 e0       	ldi	r19, 0x00	; 0
    3994:	4a e7       	ldi	r20, 0x7A	; 122
    3996:	52 e4       	ldi	r21, 0x42	; 66
    3998:	c7 01       	movw	r24, r14
    399a:	b6 01       	movw	r22, r12
    399c:	0e 94 02 27 	call	0x4e04	; 0x4e04 <__cmpsf2>
    39a0:	88 23       	and	r24, r24
    39a2:	0c f4       	brge	.+2      	; 0x39a6 <roundPressure+0x1e6>
    39a4:	42 c0       	rjmp	.+132    	; 0x3a2a <roundPressure+0x26a>
	else if (sensorPressure >= (65 - offset) && sensorPressure < (65 + offset)) retval = 65;
    39a6:	20 e0       	ldi	r18, 0x00	; 0
    39a8:	30 e0       	ldi	r19, 0x00	; 0
    39aa:	4a e7       	ldi	r20, 0x7A	; 122
    39ac:	52 e4       	ldi	r21, 0x42	; 66
    39ae:	c7 01       	movw	r24, r14
    39b0:	b6 01       	movw	r22, r12
    39b2:	0e 94 61 28 	call	0x50c2	; 0x50c2 <__gesf2>
    39b6:	88 23       	and	r24, r24
    39b8:	6c f0       	brlt	.+26     	; 0x39d4 <roundPressure+0x214>
    39ba:	20 e0       	ldi	r18, 0x00	; 0
    39bc:	30 e0       	ldi	r19, 0x00	; 0
    39be:	47 e8       	ldi	r20, 0x87	; 135
    39c0:	52 e4       	ldi	r21, 0x42	; 66
    39c2:	c7 01       	movw	r24, r14
    39c4:	b6 01       	movw	r22, r12
    39c6:	0e 94 02 27 	call	0x4e04	; 0x4e04 <__cmpsf2>
    39ca:	88 23       	and	r24, r24
    39cc:	8c f1       	brlt	.+98     	; 0x3a30 <roundPressure+0x270>
	else if (sensorPressure >= (65 - offset)) retval = 99;
    39ce:	83 e6       	ldi	r24, 0x63	; 99
    39d0:	90 e0       	ldi	r25, 0x00	; 0
    39d2:	33 c0       	rjmp	.+102    	; 0x3a3a <roundPressure+0x27a>
    39d4:	20 e0       	ldi	r18, 0x00	; 0
    39d6:	30 e0       	ldi	r19, 0x00	; 0
    39d8:	4a e7       	ldi	r20, 0x7A	; 122
    39da:	52 e4       	ldi	r21, 0x42	; 66
    39dc:	c7 01       	movw	r24, r14
    39de:	b6 01       	movw	r22, r12
    39e0:	0e 94 61 28 	call	0x50c2	; 0x50c2 <__gesf2>
    39e4:	88 23       	and	r24, r24
    39e6:	3c f5       	brge	.+78     	; 0x3a36 <roundPressure+0x276>
	else retval = 0;
    39e8:	80 e0       	ldi	r24, 0x00	; 0
    39ea:	90 e0       	ldi	r25, 0x00	; 0
    39ec:	26 c0       	rjmp	.+76     	; 0x3a3a <roundPressure+0x27a>


int roundPressure(void) {
	int retval = 0;
	
	if (sensorPressure >= (10 - offset) && sensorPressure < (10 + offset)) retval = 10;
    39ee:	8a e0       	ldi	r24, 0x0A	; 10
    39f0:	90 e0       	ldi	r25, 0x00	; 0
    39f2:	23 c0       	rjmp	.+70     	; 0x3a3a <roundPressure+0x27a>
	else if (sensorPressure >= (15 - offset) && sensorPressure < (15 + offset)) retval = 15;
    39f4:	8f e0       	ldi	r24, 0x0F	; 15
    39f6:	90 e0       	ldi	r25, 0x00	; 0
    39f8:	20 c0       	rjmp	.+64     	; 0x3a3a <roundPressure+0x27a>
	else if (sensorPressure >= (20 - offset) && sensorPressure < (20 + offset)) retval = 20;
    39fa:	84 e1       	ldi	r24, 0x14	; 20
    39fc:	90 e0       	ldi	r25, 0x00	; 0
    39fe:	1d c0       	rjmp	.+58     	; 0x3a3a <roundPressure+0x27a>
	else if (sensorPressure >= (25 - offset) && sensorPressure < (25 + offset)) retval = 25;
    3a00:	89 e1       	ldi	r24, 0x19	; 25
    3a02:	90 e0       	ldi	r25, 0x00	; 0
    3a04:	1a c0       	rjmp	.+52     	; 0x3a3a <roundPressure+0x27a>
	else if (sensorPressure >= (30 - offset) && sensorPressure < (30 + offset)) retval = 30;
    3a06:	8e e1       	ldi	r24, 0x1E	; 30
    3a08:	90 e0       	ldi	r25, 0x00	; 0
    3a0a:	17 c0       	rjmp	.+46     	; 0x3a3a <roundPressure+0x27a>
	else if (sensorPressure >= (35 - offset) && sensorPressure < (35 + offset)) retval = 35;
    3a0c:	83 e2       	ldi	r24, 0x23	; 35
    3a0e:	90 e0       	ldi	r25, 0x00	; 0
    3a10:	14 c0       	rjmp	.+40     	; 0x3a3a <roundPressure+0x27a>
	else if (sensorPressure >= (40 - offset) && sensorPressure < (40 + offset)) retval = 40;
    3a12:	88 e2       	ldi	r24, 0x28	; 40
    3a14:	90 e0       	ldi	r25, 0x00	; 0
    3a16:	11 c0       	rjmp	.+34     	; 0x3a3a <roundPressure+0x27a>
	else if (sensorPressure >= (45 - offset) && sensorPressure < (45 + offset)) retval = 45;
    3a18:	8d e2       	ldi	r24, 0x2D	; 45
    3a1a:	90 e0       	ldi	r25, 0x00	; 0
    3a1c:	0e c0       	rjmp	.+28     	; 0x3a3a <roundPressure+0x27a>
	else if (sensorPressure >= (50 - offset) && sensorPressure < (50 + offset)) retval = 50;
    3a1e:	82 e3       	ldi	r24, 0x32	; 50
    3a20:	90 e0       	ldi	r25, 0x00	; 0
    3a22:	0b c0       	rjmp	.+22     	; 0x3a3a <roundPressure+0x27a>
	else if (sensorPressure >= (55 - offset) && sensorPressure < (55 + offset)) retval = 55;
    3a24:	87 e3       	ldi	r24, 0x37	; 55
    3a26:	90 e0       	ldi	r25, 0x00	; 0
    3a28:	08 c0       	rjmp	.+16     	; 0x3a3a <roundPressure+0x27a>
	else if (sensorPressure >= (60 - offset) && sensorPressure < (60 + offset)) retval = 60;
    3a2a:	8c e3       	ldi	r24, 0x3C	; 60
    3a2c:	90 e0       	ldi	r25, 0x00	; 0
    3a2e:	05 c0       	rjmp	.+10     	; 0x3a3a <roundPressure+0x27a>
	else if (sensorPressure >= (65 - offset) && sensorPressure < (65 + offset)) retval = 65;
    3a30:	81 e4       	ldi	r24, 0x41	; 65
    3a32:	90 e0       	ldi	r25, 0x00	; 0
    3a34:	02 c0       	rjmp	.+4      	; 0x3a3a <roundPressure+0x27a>
	else if (sensorPressure >= (65 - offset)) retval = 99;
    3a36:	83 e6       	ldi	r24, 0x63	; 99
    3a38:	90 e0       	ldi	r25, 0x00	; 0
	else retval = 0;

	return retval;
}
    3a3a:	ff 90       	pop	r15
    3a3c:	ef 90       	pop	r14
    3a3e:	df 90       	pop	r13
    3a40:	cf 90       	pop	r12
    3a42:	08 95       	ret

00003a44 <enableDisplay>:
	u8g_SetColorIndex(&u8g, 1);		// assign default color value  	
	u8g_SetContrast(&u8g, 100);		// set the contrast
}

void enableDisplay(void) {
	 set_bit(PORTD, 2);   // sets the ADC on
    3a44:	5a 9a       	sbi	0x0b, 2	; 11
	 set_bit(PORTD, 3);   // sets the LED on
    3a46:	5b 9a       	sbi	0x0b, 3	; 11
	 set_bit(PORTD, 4);   // sets the LCD on
    3a48:	5c 9a       	sbi	0x0b, 4	; 11
    3a4a:	08 95       	ret

00003a4c <initBoard>:
		draw();
	} while (u8g_NextPage(&u8g));

}

void initBoard(void) {	
    3a4c:	cf 92       	push	r12
    3a4e:	ef 92       	push	r14
    3a50:	0f 93       	push	r16
    3a52:	cf 93       	push	r28
	 /* Configure LED, LCD, ADC I/O */
	 set_bit(DDRD, 2);    // Pin PD2 (ADC) is now configured as an OUTPUT
    3a54:	52 9a       	sbi	0x0a, 2	; 10
	 set_bit(DDRD, 3);    // Pin PD3 (LED) is now configured as an OUTPUT
    3a56:	53 9a       	sbi	0x0a, 3	; 10
	 set_bit(DDRD, 4);    // Pin PD4 (LCD) is now configured as an OUTPUT
    3a58:	54 9a       	sbi	0x0a, 4	; 10
	 set_bit(DDRD, 5);    // Pin PD5 (CS) is now configured as an OUTPUT
    3a5a:	55 9a       	sbi	0x0a, 5	; 10
	 set_bit(DDRD, 7);    // Pin PD5 (A0) is now configured as an OUTPUT
    3a5c:	57 9a       	sbi	0x0a, 7	; 10
	 set_bit(DDRD, 6);    // Pin PD5 (RST) is now configured as an OUTPUT
    3a5e:	56 9a       	sbi	0x0a, 6	; 10
	 
	 /* Enable Display */
	 enableDisplay();
    3a60:	0e 94 22 1d 	call	0x3a44	; 0x3a44 <enableDisplay>
	 
	 /* Enable Sleep Timer 15 mins (set in timer.h*/
	 Timer_Init();
    3a64:	0e 94 0d 1f 	call	0x3e1a	; 0x3e1a <Timer_Init>
	 Timer_Enable();
    3a68:	0e 94 1c 1f 	call	0x3e38	; 0x3e38 <Timer_Enable>
    A0: PORTD, Bit 7 --> PN(3,7)
    SCK: PORTB, Bit 1 --> PN(1,1)
    MOSI: PORTB, Bit 2 --> PN(1,2)
	RST: PORTD, Bit 6 --> PN(3,6)
    */
    u8g_InitSPI(&u8g, &u8g_dev_st7565_lm6059_sw_spi, PN(1, 1) /*SCK PB1*/, PN(1, 2) /*MOSI PB2*/, PN(3, 5) /*CS PD5*/, PN(3, 7) /*AO PD7*/, PN(3, 6) /* RST PD 6*/);
    3a6c:	66 e0       	ldi	r22, 0x06	; 6
    3a6e:	83 e0       	ldi	r24, 0x03	; 3
    3a70:	0e 94 00 21 	call	0x4200	; 0x4200 <u8g_Pin>
    3a74:	c8 2e       	mov	r12, r24
    3a76:	67 e0       	ldi	r22, 0x07	; 7
    3a78:	83 e0       	ldi	r24, 0x03	; 3
    3a7a:	0e 94 00 21 	call	0x4200	; 0x4200 <u8g_Pin>
    3a7e:	e8 2e       	mov	r14, r24
    3a80:	65 e0       	ldi	r22, 0x05	; 5
    3a82:	83 e0       	ldi	r24, 0x03	; 3
    3a84:	0e 94 00 21 	call	0x4200	; 0x4200 <u8g_Pin>
    3a88:	08 2f       	mov	r16, r24
    3a8a:	62 e0       	ldi	r22, 0x02	; 2
    3a8c:	81 e0       	ldi	r24, 0x01	; 1
    3a8e:	0e 94 00 21 	call	0x4200	; 0x4200 <u8g_Pin>
    3a92:	c8 2f       	mov	r28, r24
    3a94:	61 e0       	ldi	r22, 0x01	; 1
    3a96:	81 e0       	ldi	r24, 0x01	; 1
    3a98:	0e 94 00 21 	call	0x4200	; 0x4200 <u8g_Pin>
    3a9c:	48 2f       	mov	r20, r24
    3a9e:	2c 2f       	mov	r18, r28
    3aa0:	64 e0       	ldi	r22, 0x04	; 4
    3aa2:	71 e0       	ldi	r23, 0x01	; 1
    3aa4:	86 e0       	ldi	r24, 0x06	; 6
    3aa6:	92 e0       	ldi	r25, 0x02	; 2
    3aa8:	0e 94 17 25 	call	0x4a2e	; 0x4a2e <u8g_InitSPI>
	
	u8g_SetColorIndex(&u8g, 1);		// assign default color value  	
    3aac:	61 e0       	ldi	r22, 0x01	; 1
    3aae:	86 e0       	ldi	r24, 0x06	; 6
    3ab0:	92 e0       	ldi	r25, 0x02	; 2
    3ab2:	0e 94 69 25 	call	0x4ad2	; 0x4ad2 <u8g_SetColorIndex>
	u8g_SetContrast(&u8g, 100);		// set the contrast
    3ab6:	64 e6       	ldi	r22, 0x64	; 100
    3ab8:	86 e0       	ldi	r24, 0x06	; 6
    3aba:	92 e0       	ldi	r25, 0x02	; 2
    3abc:	0e 94 50 25 	call	0x4aa0	; 0x4aa0 <u8g_SetContrast>
}
    3ac0:	cf 91       	pop	r28
    3ac2:	0f 91       	pop	r16
    3ac4:	ef 90       	pop	r14
    3ac6:	cf 90       	pop	r12
    3ac8:	08 95       	ret

00003aca <disableDisplay>:
	 set_bit(PORTD, 3);   // sets the LED on
	 set_bit(PORTD, 4);   // sets the LCD on
}

void disableDisplay(void) {
	clear_bit(PORTD, 2);   // sets the ADC off
    3aca:	5a 98       	cbi	0x0b, 2	; 11
	clear_bit(PORTD, 3);   // sets the LED off
    3acc:	5b 98       	cbi	0x0b, 3	; 11
	clear_bit(PORTD, 4);   // sets the LCD off
    3ace:	5c 98       	cbi	0x0b, 4	; 11
    3ad0:	08 95       	ret

00003ad2 <draw>:
}

void draw(void) {
	// graphic commands to redraw the complete screen should be placed here
	
	if(batterylevel == BATTERY_LOW){
    3ad2:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <batterylevel>
    3ad6:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <batterylevel+0x1>
    3ada:	01 97       	sbiw	r24, 0x01	; 1
    3adc:	71 f4       	brne	.+28     	; 0x3afa <draw+0x28>
		u8g_SetFont(&u8g, u8g_font_unifont);
    3ade:	68 e0       	ldi	r22, 0x08	; 8
    3ae0:	70 e2       	ldi	r23, 0x20	; 32
    3ae2:	86 e0       	ldi	r24, 0x06	; 6
    3ae4:	92 e0       	ldi	r25, 0x02	; 2
    3ae6:	0e 94 fa 23 	call	0x47f4	; 0x47f4 <u8g_SetFont>
		u8g_DrawStr(&u8g, 0, 25,  "LOW BATTERY");
    3aea:	22 e1       	ldi	r18, 0x12	; 18
    3aec:	31 e0       	ldi	r19, 0x01	; 1
    3aee:	49 e1       	ldi	r20, 0x19	; 25
    3af0:	60 e0       	ldi	r22, 0x00	; 0
    3af2:	86 e0       	ldi	r24, 0x06	; 6
    3af4:	92 e0       	ldi	r25, 0x02	; 2
    3af6:	0e 94 6e 23 	call	0x46dc	; 0x46dc <u8g_DrawStr>
	}

	if (reset == 1) {
    3afa:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    3afe:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
    3b02:	01 97       	sbiw	r24, 0x01	; 1
    3b04:	79 f4       	brne	.+30     	; 0x3b24 <draw+0x52>
		u8g_SetFont(&u8g, u8g_font_fub30r);
    3b06:	62 e0       	ldi	r22, 0x02	; 2
    3b08:	72 e0       	ldi	r23, 0x02	; 2
    3b0a:	86 e0       	ldi	r24, 0x06	; 6
    3b0c:	92 e0       	ldi	r25, 0x02	; 2
    3b0e:	0e 94 fa 23 	call	0x47f4	; 0x47f4 <u8g_SetFont>
		u8g_DrawStr(&u8g, 5, 56, "WRAP");
    3b12:	2c e3       	ldi	r18, 0x3C	; 60
    3b14:	31 e0       	ldi	r19, 0x01	; 1
    3b16:	48 e3       	ldi	r20, 0x38	; 56
    3b18:	65 e0       	ldi	r22, 0x05	; 5
    3b1a:	86 e0       	ldi	r24, 0x06	; 6
    3b1c:	92 e0       	ldi	r25, 0x02	; 2
    3b1e:	0e 94 6e 23 	call	0x46dc	; 0x46dc <u8g_DrawStr>
    3b22:	08 95       	ret
		} else {

		// DEBUG
		#ifdef DEBUG
		u8g_SetFont(&u8g, u8g_font_unifont);
    3b24:	68 e0       	ldi	r22, 0x08	; 8
    3b26:	70 e2       	ldi	r23, 0x20	; 32
    3b28:	86 e0       	ldi	r24, 0x06	; 6
    3b2a:	92 e0       	ldi	r25, 0x02	; 2
    3b2c:	0e 94 fa 23 	call	0x47f4	; 0x47f4 <u8g_SetFont>
		u8g_DrawStr(&u8g, 0, 10,  displayADC);
    3b30:	22 ef       	ldi	r18, 0xF2	; 242
    3b32:	31 e0       	ldi	r19, 0x01	; 1
    3b34:	4a e0       	ldi	r20, 0x0A	; 10
    3b36:	60 e0       	ldi	r22, 0x00	; 0
    3b38:	86 e0       	ldi	r24, 0x06	; 6
    3b3a:	92 e0       	ldi	r25, 0x02	; 2
    3b3c:	0e 94 6e 23 	call	0x46dc	; 0x46dc <u8g_DrawStr>
		u8g_DrawStr(&u8g, 0, 22,  displayVoltage);
    3b40:	2b e4       	ldi	r18, 0x4B	; 75
    3b42:	32 e0       	ldi	r19, 0x02	; 2
    3b44:	46 e1       	ldi	r20, 0x16	; 22
    3b46:	60 e0       	ldi	r22, 0x00	; 0
    3b48:	86 e0       	ldi	r24, 0x06	; 6
    3b4a:	92 e0       	ldi	r25, 0x02	; 2
    3b4c:	0e 94 6e 23 	call	0x46dc	; 0x46dc <u8g_DrawStr>
		u8g_DrawStr(&u8g, 0, 34,  displayResistance);
    3b50:	2f e3       	ldi	r18, 0x3F	; 63
    3b52:	32 e0       	ldi	r19, 0x02	; 2
    3b54:	42 e2       	ldi	r20, 0x22	; 34
    3b56:	60 e0       	ldi	r22, 0x00	; 0
    3b58:	86 e0       	ldi	r24, 0x06	; 6
    3b5a:	92 e0       	ldi	r25, 0x02	; 2
    3b5c:	0e 94 6e 23 	call	0x46dc	; 0x46dc <u8g_DrawStr>
		u8g_DrawStr(&u8g, 0, 46,  displayPressure);
    3b60:	2c ef       	ldi	r18, 0xFC	; 252
    3b62:	31 e0       	ldi	r19, 0x01	; 1
    3b64:	4e e2       	ldi	r20, 0x2E	; 46
    3b66:	60 e0       	ldi	r22, 0x00	; 0
    3b68:	86 e0       	ldi	r24, 0x06	; 6
    3b6a:	92 e0       	ldi	r25, 0x02	; 2
    3b6c:	0e 94 6e 23 	call	0x46dc	; 0x46dc <u8g_DrawStr>
		u8g_DrawStr(&u8g, 0, 58,  displayScalePressure);
    3b70:	25 e5       	ldi	r18, 0x55	; 85
    3b72:	32 e0       	ldi	r19, 0x02	; 2
    3b74:	4a e3       	ldi	r20, 0x3A	; 58
    3b76:	60 e0       	ldi	r22, 0x00	; 0
    3b78:	86 e0       	ldi	r24, 0x06	; 6
    3b7a:	92 e0       	ldi	r25, 0x02	; 2
    3b7c:	0e 94 6e 23 	call	0x46dc	; 0x46dc <u8g_DrawStr>
    3b80:	08 95       	ret

00003b82 <readSensors>:
	else retval = 0;

	return retval;
}

void readSensors(void) {
    3b82:	8f 92       	push	r8
    3b84:	9f 92       	push	r9
    3b86:	af 92       	push	r10
    3b88:	bf 92       	push	r11
    3b8a:	cf 92       	push	r12
    3b8c:	df 92       	push	r13
    3b8e:	ef 92       	push	r14
    3b90:	ff 92       	push	r15
    3b92:	cf 93       	push	r28
    3b94:	df 93       	push	r29
	// -------------- read the sensors voltage ------------------- //
	calcPressure();
    3b96:	0e 94 60 1b 	call	0x36c0	; 0x36c0 <calcPressure>
	acquireBatteryVoltage();
    3b9a:	0e 94 38 1b 	call	0x3670	; 0x3670 <acquireBatteryVoltage>
	
	// ------------------ check battery levels ------------------- //
	if(batteryVoltage < 4.36 || timerinterupt == 1){
    3b9e:	c0 90 5e 01 	lds	r12, 0x015E	; 0x80015e <batteryVoltage>
    3ba2:	d0 90 5f 01 	lds	r13, 0x015F	; 0x80015f <batteryVoltage+0x1>
    3ba6:	e0 90 60 01 	lds	r14, 0x0160	; 0x800160 <batteryVoltage+0x2>
    3baa:	f0 90 61 01 	lds	r15, 0x0161	; 0x800161 <batteryVoltage+0x3>
    3bae:	2f e1       	ldi	r18, 0x1F	; 31
    3bb0:	35 e8       	ldi	r19, 0x85	; 133
    3bb2:	4b e8       	ldi	r20, 0x8B	; 139
    3bb4:	50 e4       	ldi	r21, 0x40	; 64
    3bb6:	c7 01       	movw	r24, r14
    3bb8:	b6 01       	movw	r22, r12
    3bba:	0e 94 02 27 	call	0x4e04	; 0x4e04 <__cmpsf2>
    3bbe:	88 23       	and	r24, r24
    3bc0:	34 f0       	brlt	.+12     	; 0x3bce <readSensors+0x4c>
    3bc2:	80 91 3d 02 	lds	r24, 0x023D	; 0x80023d <timerinterupt>
    3bc6:	90 91 3e 02 	lds	r25, 0x023E	; 0x80023e <timerinterupt+0x1>
    3bca:	01 97       	sbiw	r24, 0x01	; 1
    3bcc:	49 f4       	brne	.+18     	; 0x3be0 <readSensors+0x5e>
		batterylevel = BATTERY_CRITICAL;
    3bce:	82 e0       	ldi	r24, 0x02	; 2
    3bd0:	90 e0       	ldi	r25, 0x00	; 0
    3bd2:	90 93 5d 01 	sts	0x015D, r25	; 0x80015d <batterylevel+0x1>
    3bd6:	80 93 5c 01 	sts	0x015C, r24	; 0x80015c <batterylevel>
		disableDisplay();
    3bda:	0e 94 65 1d 	call	0x3aca	; 0x3aca <disableDisplay>
    3bde:	15 c0       	rjmp	.+42     	; 0x3c0a <readSensors+0x88>
	}
	else if(batteryVoltage < 4.76)
    3be0:	2c ee       	ldi	r18, 0xEC	; 236
    3be2:	31 e5       	ldi	r19, 0x51	; 81
    3be4:	48 e9       	ldi	r20, 0x98	; 152
    3be6:	50 e4       	ldi	r21, 0x40	; 64
    3be8:	c7 01       	movw	r24, r14
    3bea:	b6 01       	movw	r22, r12
    3bec:	0e 94 02 27 	call	0x4e04	; 0x4e04 <__cmpsf2>
    3bf0:	88 23       	and	r24, r24
    3bf2:	3c f4       	brge	.+14     	; 0x3c02 <readSensors+0x80>
		batterylevel = BATTERY_LOW;
    3bf4:	81 e0       	ldi	r24, 0x01	; 1
    3bf6:	90 e0       	ldi	r25, 0x00	; 0
    3bf8:	90 93 5d 01 	sts	0x015D, r25	; 0x80015d <batterylevel+0x1>
    3bfc:	80 93 5c 01 	sts	0x015C, r24	; 0x80015c <batterylevel>
    3c00:	04 c0       	rjmp	.+8      	; 0x3c0a <readSensors+0x88>
	else
		batterylevel = BATTERY_NORMAL;
    3c02:	10 92 5d 01 	sts	0x015D, r1	; 0x80015d <batterylevel+0x1>
    3c06:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <batterylevel>
	

	if (reset == 1 && initPressure != sensorPressure) reset = 0;
    3c0a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    3c0e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
    3c12:	01 97       	sbiw	r24, 0x01	; 1
    3c14:	79 f4       	brne	.+30     	; 0x3c34 <readSensors+0xb2>
    3c16:	20 91 5a 01 	lds	r18, 0x015A	; 0x80015a <__data_end>
    3c1a:	30 91 5b 01 	lds	r19, 0x015B	; 0x80015b <__data_end+0x1>
    3c1e:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <sensorPressure>
    3c22:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <sensorPressure+0x1>
    3c26:	28 17       	cp	r18, r24
    3c28:	39 07       	cpc	r19, r25
    3c2a:	21 f0       	breq	.+8      	; 0x3c34 <readSensors+0xb2>
    3c2c:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__data_start+0x1>
    3c30:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_start>

	// --------------- Display Debugging Info -------------------- //
	#ifdef DEBUG
	sprintf(displayADC, "ADC:= %u", sensorValue);
    3c34:	80 91 6f 01 	lds	r24, 0x016F	; 0x80016f <sensorValue+0x1>
    3c38:	8f 93       	push	r24
    3c3a:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <sensorValue>
    3c3e:	8f 93       	push	r24
    3c40:	8e e1       	ldi	r24, 0x1E	; 30
    3c42:	91 e0       	ldi	r25, 0x01	; 1
    3c44:	9f 93       	push	r25
    3c46:	8f 93       	push	r24
    3c48:	82 ef       	ldi	r24, 0xF2	; 242
    3c4a:	91 e0       	ldi	r25, 0x01	; 1
    3c4c:	9f 93       	push	r25
    3c4e:	8f 93       	push	r24
    3c50:	0e 94 67 2a 	call	0x54ce	; 0x54ce <sprintf>
	int volt = (sensorVoltage - (int) sensorVoltage) * 100;
    3c54:	80 90 6a 01 	lds	r8, 0x016A	; 0x80016a <sensorVoltage>
    3c58:	90 90 6b 01 	lds	r9, 0x016B	; 0x80016b <sensorVoltage+0x1>
    3c5c:	a0 90 6c 01 	lds	r10, 0x016C	; 0x80016c <sensorVoltage+0x2>
    3c60:	b0 90 6d 01 	lds	r11, 0x016D	; 0x80016d <sensorVoltage+0x3>
    3c64:	c5 01       	movw	r24, r10
    3c66:	b4 01       	movw	r22, r8
    3c68:	0e 94 79 27 	call	0x4ef2	; 0x4ef2 <__fixsfsi>
    3c6c:	6b 01       	movw	r12, r22
    3c6e:	7c 01       	movw	r14, r24
    3c70:	07 2e       	mov	r0, r23
    3c72:	00 0c       	add	r0, r0
    3c74:	88 0b       	sbc	r24, r24
    3c76:	99 0b       	sbc	r25, r25
    3c78:	0e 94 b1 27 	call	0x4f62	; 0x4f62 <__floatsisf>
    3c7c:	9b 01       	movw	r18, r22
    3c7e:	ac 01       	movw	r20, r24
    3c80:	c5 01       	movw	r24, r10
    3c82:	b4 01       	movw	r22, r8
    3c84:	0e 94 95 26 	call	0x4d2a	; 0x4d2a <__subsf3>
    3c88:	20 e0       	ldi	r18, 0x00	; 0
    3c8a:	30 e0       	ldi	r19, 0x00	; 0
    3c8c:	48 ec       	ldi	r20, 0xC8	; 200
    3c8e:	52 e4       	ldi	r21, 0x42	; 66
    3c90:	0e 94 66 28 	call	0x50cc	; 0x50cc <__mulsf3>
    3c94:	0e 94 79 27 	call	0x4ef2	; 0x4ef2 <__fixsfsi>
	sprintf(displayVoltage, "V:= %d.%d", (int) sensorVoltage, volt);
    3c98:	7f 93       	push	r23
    3c9a:	6f 93       	push	r22
    3c9c:	df 92       	push	r13
    3c9e:	cf 92       	push	r12
    3ca0:	87 e2       	ldi	r24, 0x27	; 39
    3ca2:	91 e0       	ldi	r25, 0x01	; 1
    3ca4:	9f 93       	push	r25
    3ca6:	8f 93       	push	r24
    3ca8:	8b e4       	ldi	r24, 0x4B	; 75
    3caa:	92 e0       	ldi	r25, 0x02	; 2
    3cac:	9f 93       	push	r25
    3cae:	8f 93       	push	r24
    3cb0:	0e 94 67 2a 	call	0x54ce	; 0x54ce <sprintf>
	sprintf(displayResistance, "R:= %lu", (unsigned long)resistance);
    3cb4:	60 91 62 01 	lds	r22, 0x0162	; 0x800162 <resistance>
    3cb8:	70 91 63 01 	lds	r23, 0x0163	; 0x800163 <resistance+0x1>
    3cbc:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <resistance+0x2>
    3cc0:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <resistance+0x3>
    3cc4:	0e 94 80 27 	call	0x4f00	; 0x4f00 <__fixunssfsi>
    3cc8:	9f 93       	push	r25
    3cca:	8f 93       	push	r24
    3ccc:	7f 93       	push	r23
    3cce:	6f 93       	push	r22
    3cd0:	81 e3       	ldi	r24, 0x31	; 49
    3cd2:	91 e0       	ldi	r25, 0x01	; 1
    3cd4:	9f 93       	push	r25
    3cd6:	8f 93       	push	r24
    3cd8:	8f e3       	ldi	r24, 0x3F	; 63
    3cda:	92 e0       	ldi	r25, 0x02	; 2
    3cdc:	9f 93       	push	r25
    3cde:	8f 93       	push	r24
    3ce0:	0e 94 67 2a 	call	0x54ce	; 0x54ce <sprintf>

	if (reset == 1) {
    3ce4:	8d b7       	in	r24, 0x3d	; 61
    3ce6:	9e b7       	in	r25, 0x3e	; 62
    3ce8:	46 96       	adiw	r24, 0x16	; 22
    3cea:	0f b6       	in	r0, 0x3f	; 63
    3cec:	f8 94       	cli
    3cee:	9e bf       	out	0x3e, r25	; 62
    3cf0:	0f be       	out	0x3f, r0	; 63
    3cf2:	8d bf       	out	0x3d, r24	; 61
    3cf4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    3cf8:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
    3cfc:	01 97       	sbiw	r24, 0x01	; 1
    3cfe:	99 f4       	brne	.+38     	; 0x3d26 <readSensors+0x1a4>
		sprintf(displayPressure, "P: WRAP");
    3d00:	88 e0       	ldi	r24, 0x08	; 8
    3d02:	e9 e3       	ldi	r30, 0x39	; 57
    3d04:	f1 e0       	ldi	r31, 0x01	; 1
    3d06:	ac ef       	ldi	r26, 0xFC	; 252
    3d08:	b1 e0       	ldi	r27, 0x01	; 1
    3d0a:	01 90       	ld	r0, Z+
    3d0c:	0d 92       	st	X+, r0
    3d0e:	8a 95       	dec	r24
    3d10:	e1 f7       	brne	.-8      	; 0x3d0a <readSensors+0x188>
		sprintf(displayScalePressure, "P:= WRAP");
    3d12:	89 e0       	ldi	r24, 0x09	; 9
    3d14:	e1 e4       	ldi	r30, 0x41	; 65
    3d16:	f1 e0       	ldi	r31, 0x01	; 1
    3d18:	a5 e5       	ldi	r26, 0x55	; 85
    3d1a:	b2 e0       	ldi	r27, 0x02	; 2
    3d1c:	01 90       	ld	r0, Z+
    3d1e:	0d 92       	st	X+, r0
    3d20:	8a 95       	dec	r24
    3d22:	e1 f7       	brne	.-8      	; 0x3d1c <readSensors+0x19a>
    3d24:	44 c0       	rjmp	.+136    	; 0x3dae <readSensors+0x22c>
		} else if (sensorPressure > (65 + offset)) {
    3d26:	e0 90 68 01 	lds	r14, 0x0168	; 0x800168 <sensorPressure>
    3d2a:	f0 90 69 01 	lds	r15, 0x0169	; 0x800169 <sensorPressure+0x1>
    3d2e:	b7 01       	movw	r22, r14
    3d30:	80 e0       	ldi	r24, 0x00	; 0
    3d32:	90 e0       	ldi	r25, 0x00	; 0
    3d34:	0e 94 af 27 	call	0x4f5e	; 0x4f5e <__floatunsisf>
    3d38:	20 e0       	ldi	r18, 0x00	; 0
    3d3a:	30 e0       	ldi	r19, 0x00	; 0
    3d3c:	47 e8       	ldi	r20, 0x87	; 135
    3d3e:	52 e4       	ldi	r21, 0x42	; 66
    3d40:	0e 94 61 28 	call	0x50c2	; 0x50c2 <__gesf2>
    3d44:	18 16       	cp	r1, r24
    3d46:	9c f4       	brge	.+38     	; 0x3d6e <readSensors+0x1ec>
		sprintf(displayPressure, "P:= 65+");
    3d48:	88 e0       	ldi	r24, 0x08	; 8
    3d4a:	ea e4       	ldi	r30, 0x4A	; 74
    3d4c:	f1 e0       	ldi	r31, 0x01	; 1
    3d4e:	ac ef       	ldi	r26, 0xFC	; 252
    3d50:	b1 e0       	ldi	r27, 0x01	; 1
    3d52:	01 90       	ld	r0, Z+
    3d54:	0d 92       	st	X+, r0
    3d56:	8a 95       	dec	r24
    3d58:	e1 f7       	brne	.-8      	; 0x3d52 <readSensors+0x1d0>
		sprintf(displayScalePressure, "P:= 65+");
    3d5a:	88 e0       	ldi	r24, 0x08	; 8
    3d5c:	ea e4       	ldi	r30, 0x4A	; 74
    3d5e:	f1 e0       	ldi	r31, 0x01	; 1
    3d60:	a5 e5       	ldi	r26, 0x55	; 85
    3d62:	b2 e0       	ldi	r27, 0x02	; 2
    3d64:	01 90       	ld	r0, Z+
    3d66:	0d 92       	st	X+, r0
    3d68:	8a 95       	dec	r24
    3d6a:	e1 f7       	brne	.-8      	; 0x3d64 <readSensors+0x1e2>
    3d6c:	20 c0       	rjmp	.+64     	; 0x3dae <readSensors+0x22c>
		} else {
		sprintf(displayPressure, "P:= %d", (int)sensorPressure);
    3d6e:	ff 92       	push	r15
    3d70:	ef 92       	push	r14
    3d72:	c2 e5       	ldi	r28, 0x52	; 82
    3d74:	d1 e0       	ldi	r29, 0x01	; 1
    3d76:	df 93       	push	r29
    3d78:	cf 93       	push	r28
    3d7a:	8c ef       	ldi	r24, 0xFC	; 252
    3d7c:	91 e0       	ldi	r25, 0x01	; 1
    3d7e:	9f 93       	push	r25
    3d80:	8f 93       	push	r24
    3d82:	0e 94 67 2a 	call	0x54ce	; 0x54ce <sprintf>
		sprintf(displayScalePressure, "P:= %d", roundPressure());
    3d86:	0e 94 e0 1b 	call	0x37c0	; 0x37c0 <roundPressure>
    3d8a:	9f 93       	push	r25
    3d8c:	8f 93       	push	r24
    3d8e:	df 93       	push	r29
    3d90:	cf 93       	push	r28
    3d92:	85 e5       	ldi	r24, 0x55	; 85
    3d94:	92 e0       	ldi	r25, 0x02	; 2
    3d96:	9f 93       	push	r25
    3d98:	8f 93       	push	r24
    3d9a:	0e 94 67 2a 	call	0x54ce	; 0x54ce <sprintf>
    3d9e:	8d b7       	in	r24, 0x3d	; 61
    3da0:	9e b7       	in	r25, 0x3e	; 62
    3da2:	0c 96       	adiw	r24, 0x0c	; 12
    3da4:	0f b6       	in	r0, 0x3f	; 63
    3da6:	f8 94       	cli
    3da8:	9e bf       	out	0x3e, r25	; 62
    3daa:	0f be       	out	0x3f, r0	; 63
    3dac:	8d bf       	out	0x3d, r24	; 61

	// --------------------- Update LCD Screen ------------------- //
	}
	#endif
	
	u8g_FirstPage(&u8g);
    3dae:	86 e0       	ldi	r24, 0x06	; 6
    3db0:	92 e0       	ldi	r25, 0x02	; 2
    3db2:	0e 94 3a 25 	call	0x4a74	; 0x4a74 <u8g_FirstPage>
	do {
		draw();
    3db6:	0e 94 69 1d 	call	0x3ad2	; 0x3ad2 <draw>
	} while (u8g_NextPage(&u8g));
    3dba:	86 e0       	ldi	r24, 0x06	; 6
    3dbc:	92 e0       	ldi	r25, 0x02	; 2
    3dbe:	0e 94 40 25 	call	0x4a80	; 0x4a80 <u8g_NextPage>
    3dc2:	81 11       	cpse	r24, r1
    3dc4:	f8 cf       	rjmp	.-16     	; 0x3db6 <readSensors+0x234>

}
    3dc6:	df 91       	pop	r29
    3dc8:	cf 91       	pop	r28
    3dca:	ff 90       	pop	r15
    3dcc:	ef 90       	pop	r14
    3dce:	df 90       	pop	r13
    3dd0:	cf 90       	pop	r12
    3dd2:	bf 90       	pop	r11
    3dd4:	af 90       	pop	r10
    3dd6:	9f 90       	pop	r9
    3dd8:	8f 90       	pop	r8
    3dda:	08 95       	ret

00003ddc <main>:
#define DEBUG

int main(void)
{
	/* select minimal prescaler (max system speed) */
	CLKPR = 0x80;
    3ddc:	e1 e6       	ldi	r30, 0x61	; 97
    3dde:	f0 e0       	ldi	r31, 0x00	; 0
    3de0:	80 e8       	ldi	r24, 0x80	; 128
    3de2:	80 83       	st	Z, r24
	CLKPR = 0x00;
    3de4:	10 82       	st	Z, r1
	 
	/* Initialize Peripherals */
	ADC_Init();
    3de6:	0e 94 fb 1a 	call	0x35f6	; 0x35f6 <ADC_Init>
	initBoard();
    3dea:	0e 94 26 1d 	call	0x3a4c	; 0x3a4c <initBoard>
	
	/* get initial voltage */
	calcPressure();
    3dee:	0e 94 60 1b 	call	0x36c0	; 0x36c0 <calcPressure>
	initPressure = sensorPressure;
    3df2:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <sensorPressure>
    3df6:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <sensorPressure+0x1>
    3dfa:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <__data_end+0x1>
    3dfe:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <__data_end>

	while (1)
	{
		readSensors(); 
    3e02:	0e 94 c1 1d 	call	0x3b82	; 0x3b82 <readSensors>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    3e06:	2f ef       	ldi	r18, 0xFF	; 255
    3e08:	83 ec       	ldi	r24, 0xC3	; 195
    3e0a:	99 e0       	ldi	r25, 0x09	; 9
    3e0c:	21 50       	subi	r18, 0x01	; 1
    3e0e:	80 40       	sbci	r24, 0x00	; 0
    3e10:	90 40       	sbci	r25, 0x00	; 0
    3e12:	e1 f7       	brne	.-8      	; 0x3e0c <main+0x30>
    3e14:	00 c0       	rjmp	.+0      	; 0x3e16 <main+0x3a>
    3e16:	00 00       	nop
    3e18:	f4 cf       	rjmp	.-24     	; 0x3e02 <main+0x26>

00003e1a <Timer_Init>:
}

void Timer_Disable(void)
{
    /* Disable Timer 1*/
    TIMSK1 = 0;   
    3e1a:	e1 e8       	ldi	r30, 0x81	; 129
    3e1c:	f0 e0       	ldi	r31, 0x00	; 0
    3e1e:	80 81       	ld	r24, Z
    3e20:	88 60       	ori	r24, 0x08	; 8
    3e22:	80 83       	st	Z, r24
    3e24:	80 81       	ld	r24, Z
    3e26:	84 60       	ori	r24, 0x04	; 4
    3e28:	80 83       	st	Z, r24
    3e2a:	84 e2       	ldi	r24, 0x24	; 36
    3e2c:	94 ef       	ldi	r25, 0xF4	; 244
    3e2e:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    3e32:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    3e36:	08 95       	ret

00003e38 <Timer_Enable>:
    3e38:	ef e6       	ldi	r30, 0x6F	; 111
    3e3a:	f0 e0       	ldi	r31, 0x00	; 0
    3e3c:	80 81       	ld	r24, Z
    3e3e:	82 60       	ori	r24, 0x02	; 2
    3e40:	80 83       	st	Z, r24
    3e42:	10 92 4a 02 	sts	0x024A, r1	; 0x80024a <timervalue+0x1>
    3e46:	10 92 49 02 	sts	0x0249, r1	; 0x800249 <timervalue>
    3e4a:	10 92 3e 02 	sts	0x023E, r1	; 0x80023e <timerinterupt+0x1>
    3e4e:	10 92 3d 02 	sts	0x023D, r1	; 0x80023d <timerinterupt>
    3e52:	08 95       	ret

00003e54 <__vector_17>:
}

ISR(TIMER1_COMPA_vect)
{
    3e54:	1f 92       	push	r1
    3e56:	0f 92       	push	r0
    3e58:	0f b6       	in	r0, 0x3f	; 63
    3e5a:	0f 92       	push	r0
    3e5c:	11 24       	eor	r1, r1
    3e5e:	2f 93       	push	r18
    3e60:	8f 93       	push	r24
    3e62:	9f 93       	push	r25
    /* Do Something */
    //BMS_SampleTransmit();
	timervalue++;
    3e64:	80 91 49 02 	lds	r24, 0x0249	; 0x800249 <timervalue>
    3e68:	90 91 4a 02 	lds	r25, 0x024A	; 0x80024a <timervalue+0x1>
    3e6c:	01 96       	adiw	r24, 0x01	; 1
    3e6e:	90 93 4a 02 	sts	0x024A, r25	; 0x80024a <timervalue+0x1>
    3e72:	80 93 49 02 	sts	0x0249, r24	; 0x800249 <timervalue>
	if(timervalue > TIMEOUT){
    3e76:	85 38       	cpi	r24, 0x85	; 133
    3e78:	93 40       	sbci	r25, 0x03	; 3
    3e7a:	30 f0       	brcs	.+12     	; 0x3e88 <__vector_17+0x34>
		timerinterupt = 1;
    3e7c:	81 e0       	ldi	r24, 0x01	; 1
    3e7e:	90 e0       	ldi	r25, 0x00	; 0
    3e80:	90 93 3e 02 	sts	0x023E, r25	; 0x80023e <timerinterupt+0x1>
    3e84:	80 93 3d 02 	sts	0x023D, r24	; 0x80023d <timerinterupt>
	}
}
    3e88:	9f 91       	pop	r25
    3e8a:	8f 91       	pop	r24
    3e8c:	2f 91       	pop	r18
    3e8e:	0f 90       	pop	r0
    3e90:	0f be       	out	0x3f, r0	; 63
    3e92:	0f 90       	pop	r0
    3e94:	1f 90       	pop	r1
    3e96:	18 95       	reti

00003e98 <u8g_IsBBXIntersection>:
  }
}


uint8_t u8g_IsBBXIntersection(u8g_t *u8g, u8g_uint_t x, u8g_uint_t y, u8g_uint_t w, u8g_uint_t h)
{
    3e98:	0f 93       	push	r16
    3e9a:	fc 01       	movw	r30, r24
    3e9c:	01 50       	subi	r16, 0x01	; 1
  register u8g_uint_t tmp;
  tmp = y;
  tmp += h;
  tmp--;
    3e9e:	04 0f       	add	r16, r20
  if ( u8g_is_intersection_decision_tree(u8g->current_page.y0, u8g->current_page.y1, y, tmp) == 0 )
    3ea0:	84 a9       	ldd	r24, Z+52	; 0x34
//static uint8_t u8g_is_intersection_decision_tree(u8g_uint_t a0, u8g_uint_t a1, u8g_uint_t v0, u8g_uint_t v1) U8G_ALWAYS_INLINE;
static uint8_t U8G_ALWAYS_INLINE u8g_is_intersection_decision_tree(u8g_uint_t a0, u8g_uint_t a1, u8g_uint_t v0, u8g_uint_t v1) 
{
  /* surprisingly the macro leads to larger code */
  /* return U8G_IS_INTERSECTION_MACRO(a0,a1,v0,v1); */
  if ( v0 <= a1 )
    3ea2:	96 a9       	ldd	r25, Z+54	; 0x36
    3ea4:	94 17       	cp	r25, r20
    3ea6:	38 f0       	brcs	.+14     	; 0x3eb6 <u8g_IsBBXIntersection+0x1e>
  {
    if ( v1 >= a0 )
    3ea8:	08 17       	cp	r16, r24
    3eaa:	68 f4       	brcc	.+26     	; 0x3ec6 <u8g_IsBBXIntersection+0x2e>
    {
      return 1;
    }
    else
    {
      if ( v0 > v1 )
    3eac:	81 e0       	ldi	r24, 0x01	; 1
    3eae:	04 17       	cp	r16, r20
    3eb0:	40 f0       	brcs	.+16     	; 0x3ec2 <u8g_IsBBXIntersection+0x2a>
    3eb2:	80 e0       	ldi	r24, 0x00	; 0
    3eb4:	06 c0       	rjmp	.+12     	; 0x3ec2 <u8g_IsBBXIntersection+0x2a>
      }
    }
  }
  else
  {
    if ( v1 >= a0 )
    3eb6:	08 17       	cp	r16, r24
    3eb8:	d0 f0       	brcs	.+52     	; 0x3eee <u8g_IsBBXIntersection+0x56>
    {
      if ( v0 > v1 )
    3eba:	81 e0       	ldi	r24, 0x01	; 1
    3ebc:	04 17       	cp	r16, r20
    3ebe:	08 f0       	brcs	.+2      	; 0x3ec2 <u8g_IsBBXIntersection+0x2a>
    3ec0:	80 e0       	ldi	r24, 0x00	; 0
{
  register u8g_uint_t tmp;
  tmp = y;
  tmp += h;
  tmp--;
  if ( u8g_is_intersection_decision_tree(u8g->current_page.y0, u8g->current_page.y1, y, tmp) == 0 )
    3ec2:	88 23       	and	r24, r24
    3ec4:	c9 f0       	breq	.+50     	; 0x3ef8 <u8g_IsBBXIntersection+0x60>
    3ec6:	21 50       	subi	r18, 0x01	; 1
    return 0; 
  
  tmp = x;
  tmp += w;
  tmp--;
    3ec8:	26 0f       	add	r18, r22
  return u8g_is_intersection_decision_tree(u8g->current_page.x0, u8g->current_page.x1, x, tmp);
    3eca:	83 a9       	ldd	r24, Z+51	; 0x33
//static uint8_t u8g_is_intersection_decision_tree(u8g_uint_t a0, u8g_uint_t a1, u8g_uint_t v0, u8g_uint_t v1) U8G_ALWAYS_INLINE;
static uint8_t U8G_ALWAYS_INLINE u8g_is_intersection_decision_tree(u8g_uint_t a0, u8g_uint_t a1, u8g_uint_t v0, u8g_uint_t v1) 
{
  /* surprisingly the macro leads to larger code */
  /* return U8G_IS_INTERSECTION_MACRO(a0,a1,v0,v1); */
  if ( v0 <= a1 )
    3ecc:	95 a9       	ldd	r25, Z+53	; 0x35
    3ece:	96 17       	cp	r25, r22
    3ed0:	38 f0       	brcs	.+14     	; 0x3ee0 <u8g_IsBBXIntersection+0x48>
  {
    if ( v1 >= a0 )
    3ed2:	28 17       	cp	r18, r24
    3ed4:	70 f4       	brcc	.+28     	; 0x3ef2 <u8g_IsBBXIntersection+0x5a>
    {
      return 1;
    }
    else
    {
      if ( v0 > v1 )
    3ed6:	81 e0       	ldi	r24, 0x01	; 1
    3ed8:	26 17       	cp	r18, r22
    3eda:	70 f0       	brcs	.+28     	; 0x3ef8 <u8g_IsBBXIntersection+0x60>
    3edc:	80 e0       	ldi	r24, 0x00	; 0
    3ede:	0c c0       	rjmp	.+24     	; 0x3ef8 <u8g_IsBBXIntersection+0x60>
      }
    }
  }
  else
  {
    if ( v1 >= a0 )
    3ee0:	28 17       	cp	r18, r24
    3ee2:	48 f0       	brcs	.+18     	; 0x3ef6 <u8g_IsBBXIntersection+0x5e>
    {
      if ( v0 > v1 )
    3ee4:	81 e0       	ldi	r24, 0x01	; 1
    3ee6:	26 17       	cp	r18, r22
    3ee8:	38 f0       	brcs	.+14     	; 0x3ef8 <u8g_IsBBXIntersection+0x60>
    3eea:	80 e0       	ldi	r24, 0x00	; 0
    3eec:	05 c0       	rjmp	.+10     	; 0x3ef8 <u8g_IsBBXIntersection+0x60>
  register u8g_uint_t tmp;
  tmp = y;
  tmp += h;
  tmp--;
  if ( u8g_is_intersection_decision_tree(u8g->current_page.y0, u8g->current_page.y1, y, tmp) == 0 )
    return 0; 
    3eee:	80 e0       	ldi	r24, 0x00	; 0
    3ef0:	03 c0       	rjmp	.+6      	; 0x3ef8 <u8g_IsBBXIntersection+0x60>
  /* return U8G_IS_INTERSECTION_MACRO(a0,a1,v0,v1); */
  if ( v0 <= a1 )
  {
    if ( v1 >= a0 )
    {
      return 1;
    3ef2:	81 e0       	ldi	r24, 0x01	; 1
    3ef4:	01 c0       	rjmp	.+2      	; 0x3ef8 <u8g_IsBBXIntersection+0x60>
	return 0;
      }
    }
    else
    {
      return 0;
    3ef6:	80 e0       	ldi	r24, 0x00	; 0
  
  tmp = x;
  tmp += w;
  tmp--;
  return u8g_is_intersection_decision_tree(u8g->current_page.x0, u8g->current_page.x1, x, tmp);
}
    3ef8:	0f 91       	pop	r16
    3efa:	08 95       	ret

00003efc <u8g_InitCom>:
}

uint8_t u8g_WriteSequenceP(u8g_t *u8g, u8g_dev_t *dev, uint8_t cnt, const uint8_t *seq)
{
  return dev->com_fn(u8g, U8G_COM_MSG_WRITE_SEQ_P, cnt, (void *)seq);
}
    3efc:	db 01       	movw	r26, r22
    3efe:	14 96       	adiw	r26, 0x04	; 4
    3f00:	ed 91       	ld	r30, X+
    3f02:	fc 91       	ld	r31, X
    3f04:	15 97       	sbiw	r26, 0x05	; 5
    3f06:	20 e0       	ldi	r18, 0x00	; 0
    3f08:	30 e0       	ldi	r19, 0x00	; 0
    3f0a:	61 e0       	ldi	r22, 0x01	; 1
    3f0c:	09 95       	icall
    3f0e:	08 95       	ret

00003f10 <u8g_SetChipSelect>:
    3f10:	db 01       	movw	r26, r22
    3f12:	14 96       	adiw	r26, 0x04	; 4
    3f14:	ed 91       	ld	r30, X+
    3f16:	fc 91       	ld	r31, X
    3f18:	15 97       	sbiw	r26, 0x05	; 5
    3f1a:	20 e0       	ldi	r18, 0x00	; 0
    3f1c:	30 e0       	ldi	r19, 0x00	; 0
    3f1e:	63 e0       	ldi	r22, 0x03	; 3
    3f20:	09 95       	icall
    3f22:	08 95       	ret

00003f24 <u8g_SetResetLow>:
    3f24:	db 01       	movw	r26, r22
    3f26:	14 96       	adiw	r26, 0x04	; 4
    3f28:	ed 91       	ld	r30, X+
    3f2a:	fc 91       	ld	r31, X
    3f2c:	15 97       	sbiw	r26, 0x05	; 5
    3f2e:	20 e0       	ldi	r18, 0x00	; 0
    3f30:	30 e0       	ldi	r19, 0x00	; 0
    3f32:	40 e0       	ldi	r20, 0x00	; 0
    3f34:	64 e0       	ldi	r22, 0x04	; 4
    3f36:	09 95       	icall
    3f38:	08 95       	ret

00003f3a <u8g_SetResetHigh>:
    3f3a:	db 01       	movw	r26, r22
    3f3c:	14 96       	adiw	r26, 0x04	; 4
    3f3e:	ed 91       	ld	r30, X+
    3f40:	fc 91       	ld	r31, X
    3f42:	15 97       	sbiw	r26, 0x05	; 5
    3f44:	20 e0       	ldi	r18, 0x00	; 0
    3f46:	30 e0       	ldi	r19, 0x00	; 0
    3f48:	41 e0       	ldi	r20, 0x01	; 1
    3f4a:	64 e0       	ldi	r22, 0x04	; 4
    3f4c:	09 95       	icall
    3f4e:	08 95       	ret

00003f50 <u8g_SetAddress>:
    3f50:	db 01       	movw	r26, r22
    3f52:	14 96       	adiw	r26, 0x04	; 4
    3f54:	ed 91       	ld	r30, X+
    3f56:	fc 91       	ld	r31, X
    3f58:	15 97       	sbiw	r26, 0x05	; 5
    3f5a:	20 e0       	ldi	r18, 0x00	; 0
    3f5c:	30 e0       	ldi	r19, 0x00	; 0
    3f5e:	62 e0       	ldi	r22, 0x02	; 2
    3f60:	09 95       	icall
    3f62:	08 95       	ret

00003f64 <u8g_WriteByte>:
    3f64:	db 01       	movw	r26, r22
    3f66:	14 96       	adiw	r26, 0x04	; 4
    3f68:	ed 91       	ld	r30, X+
    3f6a:	fc 91       	ld	r31, X
    3f6c:	15 97       	sbiw	r26, 0x05	; 5
    3f6e:	20 e0       	ldi	r18, 0x00	; 0
    3f70:	30 e0       	ldi	r19, 0x00	; 0
    3f72:	65 e0       	ldi	r22, 0x05	; 5
    3f74:	09 95       	icall
    3f76:	08 95       	ret

00003f78 <u8g_WriteSequence>:
    3f78:	db 01       	movw	r26, r22
    3f7a:	14 96       	adiw	r26, 0x04	; 4
    3f7c:	ed 91       	ld	r30, X+
    3f7e:	fc 91       	ld	r31, X
    3f80:	15 97       	sbiw	r26, 0x05	; 5
    3f82:	66 e0       	ldi	r22, 0x06	; 6
    3f84:	09 95       	icall
    3f86:	08 95       	ret

00003f88 <u8g_WriteEscSeqP>:
#define U8G_ESC_255 255, 255
#define U8G_ESC_RST(x) 255, (0xc0 | ((x)&0x0f))

*/
uint8_t u8g_WriteEscSeqP(u8g_t *u8g, u8g_dev_t *dev, const uint8_t *esc_seq)
{
    3f88:	af 92       	push	r10
    3f8a:	bf 92       	push	r11
    3f8c:	cf 92       	push	r12
    3f8e:	df 92       	push	r13
    3f90:	ef 92       	push	r14
    3f92:	ff 92       	push	r15
    3f94:	0f 93       	push	r16
    3f96:	1f 93       	push	r17
    3f98:	cf 93       	push	r28
    3f9a:	df 93       	push	r29
    3f9c:	6c 01       	movw	r12, r24
    3f9e:	7b 01       	movw	r14, r22
    3fa0:	8a 01       	movw	r16, r20
  uint8_t is_escape = 0;
    3fa2:	d0 e0       	ldi	r29, 0x00	; 0
      }
      else if ( value <= 127 )
      {
        u8g_Delay(value);
      }
      is_escape = 0;
    3fa4:	b1 2c       	mov	r11, r1
        if ( u8g_WriteByte(u8g, dev, value) == 0 )
          return 0;
      }
      else
      {
        is_escape = 1;
    3fa6:	aa 24       	eor	r10, r10
    3fa8:	a3 94       	inc	r10
{
  uint8_t is_escape = 0;
  uint8_t value;
  for(;;)
  {
    value = u8g_pgm_read(esc_seq);
    3faa:	f8 01       	movw	r30, r16
    3fac:	c4 91       	lpm	r28, Z
    if ( is_escape == 0 )
    3fae:	d1 11       	cpse	r29, r1
    3fb0:	0b c0       	rjmp	.+22     	; 0x3fc8 <u8g_WriteEscSeqP+0x40>
    {
      if ( value != 255 )
    3fb2:	cf 3f       	cpi	r28, 0xFF	; 255
    3fb4:	09 f4       	brne	.+2      	; 0x3fb8 <u8g_WriteEscSeqP+0x30>
    3fb6:	4a c0       	rjmp	.+148    	; 0x404c <u8g_WriteEscSeqP+0xc4>
      {
        if ( u8g_WriteByte(u8g, dev, value) == 0 )
    3fb8:	4c 2f       	mov	r20, r28
    3fba:	b7 01       	movw	r22, r14
    3fbc:	c6 01       	movw	r24, r12
    3fbe:	0e 94 b2 1f 	call	0x3f64	; 0x3f64 <u8g_WriteByte>
    3fc2:	81 11       	cpse	r24, r1
    3fc4:	48 c0       	rjmp	.+144    	; 0x4056 <u8g_WriteEscSeqP+0xce>
    3fc6:	4b c0       	rjmp	.+150    	; 0x405e <u8g_WriteEscSeqP+0xd6>
        is_escape = 1;
      }
    }
    else
    {
      if ( value == 255 )
    3fc8:	cf 3f       	cpi	r28, 0xFF	; 255
    3fca:	51 f4       	brne	.+20     	; 0x3fe0 <u8g_WriteEscSeqP+0x58>
      {
        if ( u8g_WriteByte(u8g, dev, value) == 0 )
    3fcc:	4f ef       	ldi	r20, 0xFF	; 255
    3fce:	b7 01       	movw	r22, r14
    3fd0:	c6 01       	movw	r24, r12
    3fd2:	0e 94 b2 1f 	call	0x3f64	; 0x3f64 <u8g_WriteByte>
    3fd6:	88 23       	and	r24, r24
    3fd8:	09 f4       	brne	.+2      	; 0x3fdc <u8g_WriteEscSeqP+0x54>
    3fda:	41 c0       	rjmp	.+130    	; 0x405e <u8g_WriteEscSeqP+0xd6>
      }
      else if ( value <= 127 )
      {
        u8g_Delay(value);
      }
      is_escape = 0;
    3fdc:	db 2d       	mov	r29, r11
    3fde:	3b c0       	rjmp	.+118    	; 0x4056 <u8g_WriteEscSeqP+0xce>
      if ( value == 255 )
      {
        if ( u8g_WriteByte(u8g, dev, value) == 0 )
          return 0;
      }
      else if ( value == 254 )
    3fe0:	ce 3f       	cpi	r28, 0xFE	; 254
    3fe2:	e1 f1       	breq	.+120    	; 0x405c <u8g_WriteEscSeqP+0xd4>
      {
        break;
      }
      else if ( value >= 0x0f0 )
    3fe4:	c0 3f       	cpi	r28, 0xF0	; 240
    3fe6:	a0 f5       	brcc	.+104    	; 0x4050 <u8g_WriteEscSeqP+0xc8>
      {
        /* not yet used, do nothing */
      }
      else if ( value >= 0xe0  )
    3fe8:	c0 3e       	cpi	r28, 0xE0	; 224
    3fea:	40 f0       	brcs	.+16     	; 0x3ffc <u8g_WriteEscSeqP+0x74>
      {
        u8g_SetAddress(u8g, dev, value & 0x0f);
    3fec:	4c 2f       	mov	r20, r28
    3fee:	4f 70       	andi	r20, 0x0F	; 15
    3ff0:	b7 01       	movw	r22, r14
    3ff2:	c6 01       	movw	r24, r12
    3ff4:	0e 94 a8 1f 	call	0x3f50	; 0x3f50 <u8g_SetAddress>
      }
      else if ( value <= 127 )
      {
        u8g_Delay(value);
      }
      is_escape = 0;
    3ff8:	db 2d       	mov	r29, r11
    3ffa:	2d c0       	rjmp	.+90     	; 0x4056 <u8g_WriteEscSeqP+0xce>
      }
      else if ( value >= 0xe0  )
      {
        u8g_SetAddress(u8g, dev, value & 0x0f);
      }
      else if ( value >= 0xd0 )
    3ffc:	c0 3d       	cpi	r28, 0xD0	; 208
    3ffe:	40 f0       	brcs	.+16     	; 0x4010 <u8g_WriteEscSeqP+0x88>
      {
        u8g_SetChipSelect(u8g, dev, value & 0x0f);
    4000:	4c 2f       	mov	r20, r28
    4002:	4f 70       	andi	r20, 0x0F	; 15
    4004:	b7 01       	movw	r22, r14
    4006:	c6 01       	movw	r24, r12
    4008:	0e 94 88 1f 	call	0x3f10	; 0x3f10 <u8g_SetChipSelect>
      }
      else if ( value <= 127 )
      {
        u8g_Delay(value);
      }
      is_escape = 0;
    400c:	db 2d       	mov	r29, r11
    400e:	23 c0       	rjmp	.+70     	; 0x4056 <u8g_WriteEscSeqP+0xce>
      }
      else if ( value >= 0xd0 )
      {
        u8g_SetChipSelect(u8g, dev, value & 0x0f);
      }
      else if ( value >= 0xc0 )
    4010:	c0 3c       	cpi	r28, 0xC0	; 192
    4012:	a0 f0       	brcs	.+40     	; 0x403c <u8g_WriteEscSeqP+0xb4>
      {
        u8g_SetResetLow(u8g, dev);
    4014:	b7 01       	movw	r22, r14
    4016:	c6 01       	movw	r24, r12
    4018:	0e 94 92 1f 	call	0x3f24	; 0x3f24 <u8g_SetResetLow>
        value &= 0x0f;
        value <<= 4;
    401c:	c2 95       	swap	r28
    401e:	c0 7f       	andi	r28, 0xF0	; 240
        value+=2;
    4020:	ce 5f       	subi	r28, 0xFE	; 254
        u8g_Delay(value);
    4022:	d0 e0       	ldi	r29, 0x00	; 0
    4024:	ce 01       	movw	r24, r28
    4026:	0e 94 61 21 	call	0x42c2	; 0x42c2 <u8g_Delay>
        u8g_SetResetHigh(u8g, dev);
    402a:	b7 01       	movw	r22, r14
    402c:	c6 01       	movw	r24, r12
    402e:	0e 94 9d 1f 	call	0x3f3a	; 0x3f3a <u8g_SetResetHigh>
        u8g_Delay(value);
    4032:	ce 01       	movw	r24, r28
    4034:	0e 94 61 21 	call	0x42c2	; 0x42c2 <u8g_Delay>
      }
      else if ( value <= 127 )
      {
        u8g_Delay(value);
      }
      is_escape = 0;
    4038:	db 2d       	mov	r29, r11
    403a:	0d c0       	rjmp	.+26     	; 0x4056 <u8g_WriteEscSeqP+0xce>
      else if ( value >= 0xbe )
      {
	/* not yet implemented */
        /* u8g_SetVCC(u8g, dev, value & 0x01); */
      }
      else if ( value <= 127 )
    403c:	cc 23       	and	r28, r28
    403e:	54 f0       	brlt	.+20     	; 0x4054 <u8g_WriteEscSeqP+0xcc>
      {
        u8g_Delay(value);
    4040:	8c 2f       	mov	r24, r28
    4042:	90 e0       	ldi	r25, 0x00	; 0
    4044:	0e 94 61 21 	call	0x42c2	; 0x42c2 <u8g_Delay>
      }
      is_escape = 0;
    4048:	db 2d       	mov	r29, r11
    404a:	05 c0       	rjmp	.+10     	; 0x4056 <u8g_WriteEscSeqP+0xce>
        if ( u8g_WriteByte(u8g, dev, value) == 0 )
          return 0;
      }
      else
      {
        is_escape = 1;
    404c:	da 2d       	mov	r29, r10
    404e:	03 c0       	rjmp	.+6      	; 0x4056 <u8g_WriteEscSeqP+0xce>
      }
      else if ( value <= 127 )
      {
        u8g_Delay(value);
      }
      is_escape = 0;
    4050:	db 2d       	mov	r29, r11
    4052:	01 c0       	rjmp	.+2      	; 0x4056 <u8g_WriteEscSeqP+0xce>
    4054:	db 2d       	mov	r29, r11
    }
    esc_seq++;
    4056:	0f 5f       	subi	r16, 0xFF	; 255
    4058:	1f 4f       	sbci	r17, 0xFF	; 255
  }
    405a:	a7 cf       	rjmp	.-178    	; 0x3faa <u8g_WriteEscSeqP+0x22>
  return 1;
    405c:	81 e0       	ldi	r24, 0x01	; 1
}
    405e:	df 91       	pop	r29
    4060:	cf 91       	pop	r28
    4062:	1f 91       	pop	r17
    4064:	0f 91       	pop	r16
    4066:	ff 90       	pop	r15
    4068:	ef 90       	pop	r14
    406a:	df 90       	pop	r13
    406c:	cf 90       	pop	r12
    406e:	bf 90       	pop	r11
    4070:	af 90       	pop	r10
    4072:	08 95       	ret

00004074 <u8g_atmega_sw_spi_shift_out>:

#if defined(__AVR__)

static void u8g_atmega_sw_spi_shift_out(u8g_t *u8g, uint8_t val) U8G_NOINLINE;
static void u8g_atmega_sw_spi_shift_out(u8g_t *u8g, uint8_t val)
{
    4074:	0f 93       	push	r16
    4076:	1f 93       	push	r17
    4078:	cf 93       	push	r28
    407a:	df 93       	push	r29
    407c:	8c 01       	movw	r16, r24
    407e:	d6 2f       	mov	r29, r22
    4080:	c8 e0       	ldi	r28, 0x08	; 8
  uint8_t i = 8;
  do
  {
    u8g_SetPILevel(u8g, U8G_PI_MOSI, val & 128 );
    4082:	4d 2f       	mov	r20, r29
    4084:	40 78       	andi	r20, 0x80	; 128
    4086:	65 e0       	ldi	r22, 0x05	; 5
    4088:	c8 01       	movw	r24, r16
    408a:	0e 94 57 21 	call	0x42ae	; 0x42ae <u8g_SetPILevel>
    val <<= 1;
    408e:	dd 0f       	add	r29, r29
    u8g_SetPILevel(u8g, U8G_PI_SCK, 1 );
    4090:	41 e0       	ldi	r20, 0x01	; 1
    4092:	64 e0       	ldi	r22, 0x04	; 4
    4094:	c8 01       	movw	r24, r16
    4096:	0e 94 57 21 	call	0x42ae	; 0x42ae <u8g_SetPILevel>
    u8g_MicroDelay();		/* 15 Aug 2012: added for high speed uC */
    409a:	0e 94 6b 21 	call	0x42d6	; 0x42d6 <u8g_MicroDelay>
    u8g_SetPILevel(u8g, U8G_PI_SCK, 0 );
    409e:	40 e0       	ldi	r20, 0x00	; 0
    40a0:	64 e0       	ldi	r22, 0x04	; 4
    40a2:	c8 01       	movw	r24, r16
    40a4:	0e 94 57 21 	call	0x42ae	; 0x42ae <u8g_SetPILevel>
    u8g_MicroDelay();		/* 15 Aug 2012: added for high speed uC */
    40a8:	0e 94 6b 21 	call	0x42d6	; 0x42d6 <u8g_MicroDelay>
    40ac:	c1 50       	subi	r28, 0x01	; 1
    i--;
  } while( i != 0 );
    40ae:	49 f7       	brne	.-46     	; 0x4082 <u8g_atmega_sw_spi_shift_out+0xe>
}
    40b0:	df 91       	pop	r29
    40b2:	cf 91       	pop	r28
    40b4:	1f 91       	pop	r17
    40b6:	0f 91       	pop	r16
    40b8:	08 95       	ret

000040ba <u8g_com_atmega_sw_spi_fn>:

uint8_t u8g_com_atmega_sw_spi_fn(u8g_t *u8g, uint8_t msg, uint8_t arg_val, void *arg_ptr)
{
    40ba:	cf 92       	push	r12
    40bc:	df 92       	push	r13
    40be:	ef 92       	push	r14
    40c0:	ff 92       	push	r15
    40c2:	0f 93       	push	r16
    40c4:	1f 93       	push	r17
    40c6:	cf 93       	push	r28
    40c8:	df 93       	push	r29
    40ca:	7c 01       	movw	r14, r24
    40cc:	e9 01       	movw	r28, r18
  switch(msg)
    40ce:	06 2f       	mov	r16, r22
    40d0:	10 e0       	ldi	r17, 0x00	; 0
    40d2:	f8 01       	movw	r30, r16
    40d4:	31 97       	sbiw	r30, 0x01	; 1
    40d6:	e7 30       	cpi	r30, 0x07	; 7
    40d8:	f1 05       	cpc	r31, r1
    40da:	08 f0       	brcs	.+2      	; 0x40de <u8g_com_atmega_sw_spi_fn+0x24>
    40dc:	70 c0       	rjmp	.+224    	; 0x41be <u8g_com_atmega_sw_spi_fn+0x104>
    40de:	ea 5a       	subi	r30, 0xAA	; 170
    40e0:	ff 4f       	sbci	r31, 0xFF	; 255
    40e2:	0c 94 58 2a 	jmp	0x54b0	; 0x54b0 <__tablejump2__>
      break;
    
    case U8G_COM_MSG_WRITE_SEQ:
      {
        register uint8_t *ptr = arg_ptr;
        while( arg_val > 0 )
    40e6:	41 11       	cpse	r20, r1
    40e8:	49 c0       	rjmp	.+146    	; 0x417c <u8g_com_atmega_sw_spi_fn+0xc2>
    40ea:	69 c0       	rjmp	.+210    	; 0x41be <u8g_com_atmega_sw_spi_fn+0x104>
      break;

      case U8G_COM_MSG_WRITE_SEQ_P:
      {
        register uint8_t *ptr = arg_ptr;
        while( arg_val > 0 )
    40ec:	41 11       	cpse	r20, r1
    40ee:	57 c0       	rjmp	.+174    	; 0x419e <u8g_com_atmega_sw_spi_fn+0xe4>
    40f0:	66 c0       	rjmp	.+204    	; 0x41be <u8g_com_atmega_sw_spi_fn+0x104>
uint8_t u8g_com_atmega_sw_spi_fn(u8g_t *u8g, uint8_t msg, uint8_t arg_val, void *arg_ptr)
{
  switch(msg)
  {
    case U8G_COM_MSG_INIT:
      u8g_SetPIOutput(u8g, U8G_PI_SCK);
    40f2:	64 e0       	ldi	r22, 0x04	; 4
    40f4:	0e 94 4e 21 	call	0x429c	; 0x429c <u8g_SetPIOutput>
      u8g_SetPIOutput(u8g, U8G_PI_MOSI);
    40f8:	65 e0       	ldi	r22, 0x05	; 5
    40fa:	c7 01       	movw	r24, r14
    40fc:	0e 94 4e 21 	call	0x429c	; 0x429c <u8g_SetPIOutput>
      u8g_SetPIOutput(u8g, U8G_PI_A0);
    4100:	61 e0       	ldi	r22, 0x01	; 1
    4102:	c7 01       	movw	r24, r14
    4104:	0e 94 4e 21 	call	0x429c	; 0x429c <u8g_SetPIOutput>
      u8g_SetPIOutput(u8g, U8G_PI_CS);
    4108:	62 e0       	ldi	r22, 0x02	; 2
    410a:	c7 01       	movw	r24, r14
    410c:	0e 94 4e 21 	call	0x429c	; 0x429c <u8g_SetPIOutput>
      u8g_SetPIOutput(u8g, U8G_PI_RESET);
    4110:	60 e0       	ldi	r22, 0x00	; 0
    4112:	c7 01       	movw	r24, r14
    4114:	0e 94 4e 21 	call	0x429c	; 0x429c <u8g_SetPIOutput>
      
      u8g_SetPILevel(u8g, U8G_PI_SCK, 0 );
    4118:	40 e0       	ldi	r20, 0x00	; 0
    411a:	64 e0       	ldi	r22, 0x04	; 4
    411c:	c7 01       	movw	r24, r14
    411e:	0e 94 57 21 	call	0x42ae	; 0x42ae <u8g_SetPILevel>
      u8g_SetPILevel(u8g, U8G_PI_MOSI, 0 );
    4122:	40 e0       	ldi	r20, 0x00	; 0
    4124:	65 e0       	ldi	r22, 0x05	; 5
    4126:	c7 01       	movw	r24, r14
    4128:	0e 94 57 21 	call	0x42ae	; 0x42ae <u8g_SetPILevel>
      u8g_SetPILevel(u8g, U8G_PI_CS, 1 );
    412c:	41 e0       	ldi	r20, 0x01	; 1
    412e:	62 e0       	ldi	r22, 0x02	; 2
    4130:	c7 01       	movw	r24, r14
    4132:	0e 94 57 21 	call	0x42ae	; 0x42ae <u8g_SetPILevel>
      u8g_SetPILevel(u8g, U8G_PI_A0, 0);
    4136:	40 e0       	ldi	r20, 0x00	; 0
    4138:	61 e0       	ldi	r22, 0x01	; 1
    413a:	c7 01       	movw	r24, r14
    413c:	0e 94 57 21 	call	0x42ae	; 0x42ae <u8g_SetPILevel>
      break;
    4140:	3e c0       	rjmp	.+124    	; 0x41be <u8g_com_atmega_sw_spi_fn+0x104>
    
    case U8G_COM_MSG_STOP:
      break;

    case U8G_COM_MSG_ADDRESS:                     /* define cmd (arg_val = 0) or data mode (arg_val = 1) */
      u8g_SetPILevel(u8g, U8G_PI_A0, arg_val);
    4142:	61 e0       	ldi	r22, 0x01	; 1
    4144:	0e 94 57 21 	call	0x42ae	; 0x42ae <u8g_SetPILevel>
      break;
    4148:	3a c0       	rjmp	.+116    	; 0x41be <u8g_com_atmega_sw_spi_fn+0x104>

    case U8G_COM_MSG_CHIP_SELECT:
      
      if ( arg_val == 0 )
    414a:	41 11       	cpse	r20, r1
    414c:	05 c0       	rjmp	.+10     	; 0x4158 <u8g_com_atmega_sw_spi_fn+0x9e>
      {
        /* disable */
        u8g_SetPILevel(u8g, U8G_PI_CS, 1);
    414e:	41 e0       	ldi	r20, 0x01	; 1
    4150:	62 e0       	ldi	r22, 0x02	; 2
    4152:	0e 94 57 21 	call	0x42ae	; 0x42ae <u8g_SetPILevel>
    4156:	33 c0       	rjmp	.+102    	; 0x41be <u8g_com_atmega_sw_spi_fn+0x104>
      }
      else
      {
        u8g_SetPILevel(u8g, U8G_PI_SCK, 0 );
    4158:	40 e0       	ldi	r20, 0x00	; 0
    415a:	64 e0       	ldi	r22, 0x04	; 4
    415c:	0e 94 57 21 	call	0x42ae	; 0x42ae <u8g_SetPILevel>
        /* enable */
        u8g_SetPILevel(u8g, U8G_PI_CS, 0); /* CS = 0 (low active) */
    4160:	40 e0       	ldi	r20, 0x00	; 0
    4162:	62 e0       	ldi	r22, 0x02	; 2
    4164:	c7 01       	movw	r24, r14
    4166:	0e 94 57 21 	call	0x42ae	; 0x42ae <u8g_SetPILevel>
    416a:	29 c0       	rjmp	.+82     	; 0x41be <u8g_com_atmega_sw_spi_fn+0x104>
      }
      break;
      
    case U8G_COM_MSG_RESET:
      u8g_SetPILevel(u8g, U8G_PI_RESET, arg_val);
    416c:	60 e0       	ldi	r22, 0x00	; 0
    416e:	0e 94 57 21 	call	0x42ae	; 0x42ae <u8g_SetPILevel>
      break;
    4172:	25 c0       	rjmp	.+74     	; 0x41be <u8g_com_atmega_sw_spi_fn+0x104>
    

    case U8G_COM_MSG_WRITE_BYTE:
      u8g_atmega_sw_spi_shift_out(u8g, arg_val);
    4174:	64 2f       	mov	r22, r20
    4176:	0e 94 3a 20 	call	0x4074	; 0x4074 <u8g_atmega_sw_spi_shift_out>
      break;
    417a:	21 c0       	rjmp	.+66     	; 0x41be <u8g_com_atmega_sw_spi_fn+0x104>
    417c:	6e 01       	movw	r12, r28
    417e:	41 50       	subi	r20, 0x01	; 1
    4180:	50 e0       	ldi	r21, 0x00	; 0
    4182:	4f 5f       	subi	r20, 0xFF	; 255
    4184:	5f 4f       	sbci	r21, 0xFF	; 255
    4186:	c4 0f       	add	r28, r20
    4188:	d5 1f       	adc	r29, r21
    case U8G_COM_MSG_WRITE_SEQ:
      {
        register uint8_t *ptr = arg_ptr;
        while( arg_val > 0 )
        {
          u8g_atmega_sw_spi_shift_out(u8g, *ptr++);
    418a:	f6 01       	movw	r30, r12
    418c:	61 91       	ld	r22, Z+
    418e:	6f 01       	movw	r12, r30
    4190:	c7 01       	movw	r24, r14
    4192:	0e 94 3a 20 	call	0x4074	; 0x4074 <u8g_atmega_sw_spi_shift_out>
      break;
    
    case U8G_COM_MSG_WRITE_SEQ:
      {
        register uint8_t *ptr = arg_ptr;
        while( arg_val > 0 )
    4196:	cc 16       	cp	r12, r28
    4198:	dd 06       	cpc	r13, r29
    419a:	b9 f7       	brne	.-18     	; 0x418a <u8g_com_atmega_sw_spi_fn+0xd0>
    419c:	10 c0       	rjmp	.+32     	; 0x41be <u8g_com_atmega_sw_spi_fn+0x104>
    419e:	41 50       	subi	r20, 0x01	; 1
    41a0:	04 2f       	mov	r16, r20
    41a2:	10 e0       	ldi	r17, 0x00	; 0
    41a4:	0f 5f       	subi	r16, 0xFF	; 255
    41a6:	1f 4f       	sbci	r17, 0xFF	; 255
    41a8:	0c 0f       	add	r16, r28
    41aa:	1d 1f       	adc	r17, r29
      case U8G_COM_MSG_WRITE_SEQ_P:
      {
        register uint8_t *ptr = arg_ptr;
        while( arg_val > 0 )
        {
          u8g_atmega_sw_spi_shift_out(u8g, u8g_pgm_read(ptr));
    41ac:	fe 01       	movw	r30, r28
    41ae:	64 91       	lpm	r22, Z
    41b0:	c7 01       	movw	r24, r14
    41b2:	0e 94 3a 20 	call	0x4074	; 0x4074 <u8g_atmega_sw_spi_shift_out>
          ptr++;
    41b6:	21 96       	adiw	r28, 0x01	; 1
      break;

      case U8G_COM_MSG_WRITE_SEQ_P:
      {
        register uint8_t *ptr = arg_ptr;
        while( arg_val > 0 )
    41b8:	c0 17       	cp	r28, r16
    41ba:	d1 07       	cpc	r29, r17
    41bc:	b9 f7       	brne	.-18     	; 0x41ac <u8g_com_atmega_sw_spi_fn+0xf2>
        }
      }
      break;
  }
  return 1;
}
    41be:	81 e0       	ldi	r24, 0x01	; 1
    41c0:	df 91       	pop	r29
    41c2:	cf 91       	pop	r28
    41c4:	1f 91       	pop	r17
    41c6:	0f 91       	pop	r16
    41c8:	ff 90       	pop	r15
    41ca:	ef 90       	pop	r14
    41cc:	df 90       	pop	r13
    41ce:	cf 90       	pop	r12
    41d0:	08 95       	ret

000041d2 <u8g_get_avr_io_ptr>:
{
  volatile uint8_t * tmp = u8g_get_avr_io_ptr(u8g_avr_pin_P, internal_pin_number>>3);
  if ( ((*tmp) & _BV(internal_pin_number&7))  != 0 )
    return 1;
  return 0;
}
    41d2:	cf 93       	push	r28
    41d4:	df 93       	push	r29
    41d6:	00 d0       	rcall	.+0      	; 0x41d8 <u8g_get_avr_io_ptr+0x6>
    41d8:	cd b7       	in	r28, 0x3d	; 61
    41da:	de b7       	in	r29, 0x3e	; 62
    41dc:	70 e0       	ldi	r23, 0x00	; 0
    41de:	66 0f       	add	r22, r22
    41e0:	77 1f       	adc	r23, r23
    41e2:	68 0f       	add	r22, r24
    41e4:	79 1f       	adc	r23, r25
    41e6:	42 e0       	ldi	r20, 0x02	; 2
    41e8:	50 e0       	ldi	r21, 0x00	; 0
    41ea:	ce 01       	movw	r24, r28
    41ec:	01 96       	adiw	r24, 0x01	; 1
    41ee:	0e 94 5e 2a 	call	0x54bc	; 0x54bc <memcpy_P>
    41f2:	89 81       	ldd	r24, Y+1	; 0x01
    41f4:	9a 81       	ldd	r25, Y+2	; 0x02
    41f6:	0f 90       	pop	r0
    41f8:	0f 90       	pop	r0
    41fa:	df 91       	pop	r29
    41fc:	cf 91       	pop	r28
    41fe:	08 95       	ret

00004200 <u8g_Pin>:
    4200:	88 0f       	add	r24, r24
    4202:	88 0f       	add	r24, r24
    4204:	88 0f       	add	r24, r24
    4206:	86 0f       	add	r24, r22
    4208:	08 95       	ret

0000420a <u8g_SetPinOutput>:
    420a:	cf 93       	push	r28
    420c:	c8 2f       	mov	r28, r24
    420e:	68 2f       	mov	r22, r24
    4210:	66 95       	lsr	r22
    4212:	66 95       	lsr	r22
    4214:	66 95       	lsr	r22
    4216:	80 eb       	ldi	r24, 0xB0	; 176
    4218:	91 e0       	ldi	r25, 0x01	; 1
    421a:	0e 94 e9 20 	call	0x41d2	; 0x41d2 <u8g_get_avr_io_ptr>
    421e:	fc 01       	movw	r30, r24
    4220:	40 81       	ld	r20, Z
    4222:	c7 70       	andi	r28, 0x07	; 7
    4224:	21 e0       	ldi	r18, 0x01	; 1
    4226:	30 e0       	ldi	r19, 0x00	; 0
    4228:	02 c0       	rjmp	.+4      	; 0x422e <u8g_SetPinOutput+0x24>
    422a:	22 0f       	add	r18, r18
    422c:	33 1f       	adc	r19, r19
    422e:	ca 95       	dec	r28
    4230:	e2 f7       	brpl	.-8      	; 0x422a <u8g_SetPinOutput+0x20>
    4232:	24 2b       	or	r18, r20
    4234:	20 83       	st	Z, r18
    4236:	cf 91       	pop	r28
    4238:	08 95       	ret

0000423a <u8g_SetPinLevel>:
    423a:	cf 93       	push	r28
    423c:	df 93       	push	r29
    423e:	c8 2f       	mov	r28, r24
    4240:	d6 2f       	mov	r29, r22
    4242:	68 2f       	mov	r22, r24
    4244:	66 95       	lsr	r22
    4246:	66 95       	lsr	r22
    4248:	66 95       	lsr	r22
    424a:	84 ea       	ldi	r24, 0xA4	; 164
    424c:	91 e0       	ldi	r25, 0x01	; 1
    424e:	0e 94 e9 20 	call	0x41d2	; 0x41d2 <u8g_get_avr_io_ptr>
    4252:	d1 11       	cpse	r29, r1
    4254:	11 c0       	rjmp	.+34     	; 0x4278 <u8g_SetPinLevel+0x3e>
    4256:	4f b7       	in	r20, 0x3f	; 63
    4258:	f8 94       	cli
    425a:	fc 01       	movw	r30, r24
    425c:	50 81       	ld	r21, Z
    425e:	c7 70       	andi	r28, 0x07	; 7
    4260:	21 e0       	ldi	r18, 0x01	; 1
    4262:	30 e0       	ldi	r19, 0x00	; 0
    4264:	02 c0       	rjmp	.+4      	; 0x426a <u8g_SetPinLevel+0x30>
    4266:	22 0f       	add	r18, r18
    4268:	33 1f       	adc	r19, r19
    426a:	ca 95       	dec	r28
    426c:	e2 f7       	brpl	.-8      	; 0x4266 <u8g_SetPinLevel+0x2c>
    426e:	20 95       	com	r18
    4270:	25 23       	and	r18, r21
    4272:	20 83       	st	Z, r18
    4274:	4f bf       	out	0x3f, r20	; 63
    4276:	0f c0       	rjmp	.+30     	; 0x4296 <u8g_SetPinLevel+0x5c>
    4278:	4f b7       	in	r20, 0x3f	; 63
    427a:	f8 94       	cli
    427c:	fc 01       	movw	r30, r24
    427e:	50 81       	ld	r21, Z
    4280:	c7 70       	andi	r28, 0x07	; 7
    4282:	21 e0       	ldi	r18, 0x01	; 1
    4284:	30 e0       	ldi	r19, 0x00	; 0
    4286:	02 c0       	rjmp	.+4      	; 0x428c <u8g_SetPinLevel+0x52>
    4288:	22 0f       	add	r18, r18
    428a:	33 1f       	adc	r19, r19
    428c:	ca 95       	dec	r28
    428e:	e2 f7       	brpl	.-8      	; 0x4288 <u8g_SetPinLevel+0x4e>
    4290:	25 2b       	or	r18, r21
    4292:	20 83       	st	Z, r18
    4294:	4f bf       	out	0x3f, r20	; 63
    4296:	df 91       	pop	r29
    4298:	cf 91       	pop	r28
    429a:	08 95       	ret

0000429c <u8g_SetPIOutput>:
#if defined(U8G_WITH_PINLIST)

void u8g_SetPIOutput(u8g_t *u8g, uint8_t pi)
{
  uint8_t pin;
  pin = u8g->pin_list[pi];
    429c:	86 0f       	add	r24, r22
    429e:	91 1d       	adc	r25, r1
    42a0:	fc 01       	movw	r30, r24
    42a2:	83 a1       	ldd	r24, Z+35	; 0x23
  if ( pin != U8G_PIN_NONE )
    42a4:	8f 3f       	cpi	r24, 0xFF	; 255
    42a6:	11 f0       	breq	.+4      	; 0x42ac <u8g_SetPIOutput+0x10>
    u8g_SetPinOutput(pin);
    42a8:	0e 94 05 21 	call	0x420a	; 0x420a <u8g_SetPinOutput>
    42ac:	08 95       	ret

000042ae <u8g_SetPILevel>:
}

void u8g_SetPILevel(u8g_t *u8g, uint8_t pi, uint8_t level)
{
  uint8_t pin;
  pin = u8g->pin_list[pi];
    42ae:	86 0f       	add	r24, r22
    42b0:	91 1d       	adc	r25, r1
    42b2:	fc 01       	movw	r30, r24
    42b4:	83 a1       	ldd	r24, Z+35	; 0x23
  if ( pin != U8G_PIN_NONE )
    42b6:	8f 3f       	cpi	r24, 0xFF	; 255
    42b8:	19 f0       	breq	.+6      	; 0x42c0 <u8g_SetPILevel+0x12>
    42ba:	64 2f       	mov	r22, r20
    u8g_SetPinLevel(pin, level);
    42bc:	0e 94 1d 21 	call	0x423a	; 0x423a <u8g_SetPinLevel>
    42c0:	08 95       	ret

000042c2 <u8g_Delay>:
  ==> must be devided by 4, rounded up 7/4 = 2
*/
void u8g_Delay(uint16_t val)
{
  /* old version did a call to the arduino lib: delay(val); */
  while( val != 0 )
    42c2:	00 97       	sbiw	r24, 0x00	; 0
    42c4:	39 f0       	breq	.+14     	; 0x42d4 <u8g_Delay+0x12>
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    42c6:	2e e9       	ldi	r18, 0x9E	; 158
    42c8:	3f e0       	ldi	r19, 0x0F	; 15
    42ca:	f9 01       	movw	r30, r18
    42cc:	31 97       	sbiw	r30, 0x01	; 1
    42ce:	f1 f7       	brne	.-4      	; 0x42cc <u8g_Delay+0xa>
  {
    _delay_loop_2( (F_CPU / 4000 ) -2);
    val--;
    42d0:	01 97       	sbiw	r24, 0x01	; 1
  ==> must be devided by 4, rounded up 7/4 = 2
*/
void u8g_Delay(uint16_t val)
{
  /* old version did a call to the arduino lib: delay(val); */
  while( val != 0 )
    42d2:	d9 f7       	brne	.-10     	; 0x42ca <u8g_Delay+0x8>
    42d4:	08 95       	ret

000042d6 <u8g_MicroDelay>:
    42d6:	84 e0       	ldi	r24, 0x04	; 4
    42d8:	90 e0       	ldi	r25, 0x00	; 0
    42da:	01 97       	sbiw	r24, 0x01	; 1
    42dc:	f1 f7       	brne	.-4      	; 0x42da <u8g_MicroDelay+0x4>
    42de:	08 95       	ret

000042e0 <u8g_dev_st7565_lm6059_fn>:
  U8G_ESC_END                /* end of sequence */
};


uint8_t u8g_dev_st7565_lm6059_fn(u8g_t *u8g, u8g_dev_t *dev, uint8_t msg, void *arg)
{
    42e0:	af 92       	push	r10
    42e2:	bf 92       	push	r11
    42e4:	cf 92       	push	r12
    42e6:	df 92       	push	r13
    42e8:	ef 92       	push	r14
    42ea:	ff 92       	push	r15
    42ec:	0f 93       	push	r16
    42ee:	1f 93       	push	r17
    42f0:	cf 93       	push	r28
    42f2:	7c 01       	movw	r14, r24
    42f4:	8b 01       	movw	r16, r22
    42f6:	c4 2f       	mov	r28, r20
    42f8:	69 01       	movw	r12, r18
  switch(msg)
    42fa:	40 31       	cpi	r20, 0x10	; 16
    42fc:	09 f4       	brne	.+2      	; 0x4300 <u8g_dev_st7565_lm6059_fn+0x20>
    42fe:	52 c0       	rjmp	.+164    	; 0x43a4 <u8g_dev_st7565_lm6059_fn+0xc4>
    4300:	28 f4       	brcc	.+10     	; 0x430c <u8g_dev_st7565_lm6059_fn+0x2c>
    4302:	4a 30       	cpi	r20, 0x0A	; 10
    4304:	49 f0       	breq	.+18     	; 0x4318 <u8g_dev_st7565_lm6059_fn+0x38>
    4306:	4f 30       	cpi	r20, 0x0F	; 15
    4308:	89 f1       	breq	.+98     	; 0x436c <u8g_dev_st7565_lm6059_fn+0x8c>
    430a:	58 c0       	rjmp	.+176    	; 0x43bc <u8g_dev_st7565_lm6059_fn+0xdc>
    430c:	41 31       	cpi	r20, 0x11	; 17
    430e:	09 f4       	brne	.+2      	; 0x4312 <u8g_dev_st7565_lm6059_fn+0x32>
    4310:	4f c0       	rjmp	.+158    	; 0x43b0 <u8g_dev_st7565_lm6059_fn+0xd0>
    4312:	45 31       	cpi	r20, 0x15	; 21
    4314:	59 f0       	breq	.+22     	; 0x432c <u8g_dev_st7565_lm6059_fn+0x4c>
    4316:	52 c0       	rjmp	.+164    	; 0x43bc <u8g_dev_st7565_lm6059_fn+0xdc>
  {
    case U8G_DEV_MSG_INIT:
      u8g_InitCom(u8g, dev, U8G_SPI_CLK_CYCLE_400NS);
    4318:	43 e0       	ldi	r20, 0x03	; 3
    431a:	0e 94 7e 1f 	call	0x3efc	; 0x3efc <u8g_InitCom>
      u8g_WriteEscSeqP(u8g, dev, u8g_dev_st7565_lm6059_init_seq);
    431e:	4c ed       	ldi	r20, 0xDC	; 220
    4320:	51 e0       	ldi	r21, 0x01	; 1
    4322:	b8 01       	movw	r22, r16
    4324:	c7 01       	movw	r24, r14
    4326:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <u8g_WriteEscSeqP>
      break;
    432a:	48 c0       	rjmp	.+144    	; 0x43bc <u8g_dev_st7565_lm6059_fn+0xdc>
    case U8G_DEV_MSG_STOP:
      break;
    case U8G_DEV_MSG_PAGE_NEXT:
      {
        u8g_pb_t *pb = (u8g_pb_t *)(dev->dev_mem);
    432c:	fb 01       	movw	r30, r22
    432e:	a2 80       	ldd	r10, Z+2	; 0x02
    4330:	b3 80       	ldd	r11, Z+3	; 0x03
        u8g_WriteEscSeqP(u8g, dev, u8g_dev_st7565_lm6059_data_start);    
    4332:	44 ed       	ldi	r20, 0xD4	; 212
    4334:	51 e0       	ldi	r21, 0x01	; 1
    4336:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <u8g_WriteEscSeqP>
        u8g_WriteByte(u8g, dev, 0x0b0 | pb->p.page); /* select current page (ST7565R) */
    433a:	f5 01       	movw	r30, r10
    433c:	44 81       	ldd	r20, Z+4	; 0x04
    433e:	40 6b       	ori	r20, 0xB0	; 176
    4340:	b8 01       	movw	r22, r16
    4342:	c7 01       	movw	r24, r14
    4344:	0e 94 b2 1f 	call	0x3f64	; 0x3f64 <u8g_WriteByte>
        u8g_SetAddress(u8g, dev, 1);           /* data mode */
    4348:	41 e0       	ldi	r20, 0x01	; 1
    434a:	b8 01       	movw	r22, r16
    434c:	c7 01       	movw	r24, r14
    434e:	0e 94 a8 1f 	call	0x3f50	; 0x3f50 <u8g_SetAddress>
        if ( u8g_pb_WriteBuffer(pb, u8g, dev) == 0 )
    4352:	a8 01       	movw	r20, r16
    4354:	b7 01       	movw	r22, r14
    4356:	c5 01       	movw	r24, r10
    4358:	0e 94 d2 25 	call	0x4ba4	; 0x4ba4 <u8g_pb_WriteBuffer>
    435c:	88 23       	and	r24, r24
    435e:	a1 f1       	breq	.+104    	; 0x43c8 <u8g_dev_st7565_lm6059_fn+0xe8>
          return 0;
        u8g_SetChipSelect(u8g, dev, 0);
    4360:	40 e0       	ldi	r20, 0x00	; 0
    4362:	b8 01       	movw	r22, r16
    4364:	c7 01       	movw	r24, r14
    4366:	0e 94 88 1f 	call	0x3f10	; 0x3f10 <u8g_SetChipSelect>
      }
      break;
    436a:	28 c0       	rjmp	.+80     	; 0x43bc <u8g_dev_st7565_lm6059_fn+0xdc>
    case U8G_DEV_MSG_CONTRAST:
      u8g_SetChipSelect(u8g, dev, 1);
    436c:	41 e0       	ldi	r20, 0x01	; 1
    436e:	0e 94 88 1f 	call	0x3f10	; 0x3f10 <u8g_SetChipSelect>
      u8g_SetAddress(u8g, dev, 0);          /* instruction mode */
    4372:	40 e0       	ldi	r20, 0x00	; 0
    4374:	b8 01       	movw	r22, r16
    4376:	c7 01       	movw	r24, r14
    4378:	0e 94 a8 1f 	call	0x3f50	; 0x3f50 <u8g_SetAddress>
      u8g_WriteByte(u8g, dev, 0x081);
    437c:	41 e8       	ldi	r20, 0x81	; 129
    437e:	b8 01       	movw	r22, r16
    4380:	c7 01       	movw	r24, r14
    4382:	0e 94 b2 1f 	call	0x3f64	; 0x3f64 <u8g_WriteByte>
      u8g_WriteByte(u8g, dev, (*(uint8_t *)arg) >> 2);
    4386:	f6 01       	movw	r30, r12
    4388:	40 81       	ld	r20, Z
    438a:	46 95       	lsr	r20
    438c:	46 95       	lsr	r20
    438e:	b8 01       	movw	r22, r16
    4390:	c7 01       	movw	r24, r14
    4392:	0e 94 b2 1f 	call	0x3f64	; 0x3f64 <u8g_WriteByte>
      u8g_SetChipSelect(u8g, dev, 0);      
    4396:	40 e0       	ldi	r20, 0x00	; 0
    4398:	b8 01       	movw	r22, r16
    439a:	c7 01       	movw	r24, r14
    439c:	0e 94 88 1f 	call	0x3f10	; 0x3f10 <u8g_SetChipSelect>
      return 1;
    43a0:	81 e0       	ldi	r24, 0x01	; 1
    43a2:	12 c0       	rjmp	.+36     	; 0x43c8 <u8g_dev_st7565_lm6059_fn+0xe8>
    case U8G_DEV_MSG_SLEEP_ON:
      u8g_WriteEscSeqP(u8g, dev, u8g_dev_st7565_lm6059_sleep_on);    
    43a4:	48 ec       	ldi	r20, 0xC8	; 200
    43a6:	51 e0       	ldi	r21, 0x01	; 1
    43a8:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <u8g_WriteEscSeqP>
      return 1;
    43ac:	81 e0       	ldi	r24, 0x01	; 1
    43ae:	0c c0       	rjmp	.+24     	; 0x43c8 <u8g_dev_st7565_lm6059_fn+0xe8>
    case U8G_DEV_MSG_SLEEP_OFF:
      u8g_WriteEscSeqP(u8g, dev, u8g_dev_st7565_lm6059_sleep_off);    
    43b0:	4c eb       	ldi	r20, 0xBC	; 188
    43b2:	51 e0       	ldi	r21, 0x01	; 1
    43b4:	0e 94 c4 1f 	call	0x3f88	; 0x3f88 <u8g_WriteEscSeqP>
      return 1;
    43b8:	81 e0       	ldi	r24, 0x01	; 1
    43ba:	06 c0       	rjmp	.+12     	; 0x43c8 <u8g_dev_st7565_lm6059_fn+0xe8>
  }
  return u8g_dev_pb8v1_base_fn(u8g, dev, msg, arg);
    43bc:	96 01       	movw	r18, r12
    43be:	4c 2f       	mov	r20, r28
    43c0:	b8 01       	movw	r22, r16
    43c2:	c7 01       	movw	r24, r14
    43c4:	0e 94 46 26 	call	0x4c8c	; 0x4c8c <u8g_dev_pb8v1_base_fn>
}
    43c8:	cf 91       	pop	r28
    43ca:	1f 91       	pop	r17
    43cc:	0f 91       	pop	r16
    43ce:	ff 90       	pop	r15
    43d0:	ef 90       	pop	r14
    43d2:	df 90       	pop	r13
    43d4:	cf 90       	pop	r12
    43d6:	bf 90       	pop	r11
    43d8:	af 90       	pop	r10
    43da:	08 95       	ret

000043dc <u8g_font_get_word>:
  cap_a = u8g_font_GetCapitalAHeight(u8g->font);
  u8g_font_calc_str_min_box(u8g, s, &buf);
  if ( buf.y_max < cap_a )
    buf.y_max = cap_a;
  u8g_font_get_str_box_fill_args(u8g, s, &buf, x, y, width, height);
}
    43dc:	fc 01       	movw	r30, r24
    43de:	e6 0f       	add	r30, r22
    43e0:	f1 1d       	adc	r31, r1
    43e2:	84 91       	lpm	r24, Z
    43e4:	90 e0       	ldi	r25, 0x00	; 0
    43e6:	98 2f       	mov	r25, r24
    43e8:	88 27       	eor	r24, r24
    43ea:	31 96       	adiw	r30, 0x01	; 1
    43ec:	e4 91       	lpm	r30, Z
    43ee:	8e 0f       	add	r24, r30
    43f0:	91 1d       	adc	r25, r1
    43f2:	08 95       	ret

000043f4 <u8g_font_GetFormat>:
    43f4:	fc 01       	movw	r30, r24
    43f6:	84 91       	lpm	r24, Z
    43f8:	08 95       	ret

000043fa <u8g_font_GetFontGlyphStructureSize>:
    43fa:	0e 94 fa 21 	call	0x43f4	; 0x43f4 <u8g_font_GetFormat>
    43fe:	88 23       	and	r24, r24
    4400:	21 f0       	breq	.+8      	; 0x440a <u8g_font_GetFontGlyphStructureSize+0x10>
    4402:	82 30       	cpi	r24, 0x02	; 2
    4404:	11 f0       	breq	.+4      	; 0x440a <u8g_font_GetFontGlyphStructureSize+0x10>
    4406:	83 e0       	ldi	r24, 0x03	; 3
    4408:	08 95       	ret
    440a:	86 e0       	ldi	r24, 0x06	; 6
    440c:	08 95       	ret

0000440e <u8g_font_calc_vref_font>:
    440e:	80 e0       	ldi	r24, 0x00	; 0
    4410:	08 95       	ret

00004412 <u8g_font_GetEncoding65Pos>:
    4412:	66 e0       	ldi	r22, 0x06	; 6
    4414:	0e 94 ee 21 	call	0x43dc	; 0x43dc <u8g_font_get_word>
    4418:	08 95       	ret

0000441a <u8g_font_GetEncoding97Pos>:
    441a:	68 e0       	ldi	r22, 0x08	; 8
    441c:	0e 94 ee 21 	call	0x43dc	; 0x43dc <u8g_font_get_word>
    4420:	08 95       	ret

00004422 <u8g_font_GetFontStartEncoding>:
    4422:	0a 96       	adiw	r24, 0x0a	; 10
    4424:	fc 01       	movw	r30, r24
    4426:	84 91       	lpm	r24, Z
    4428:	08 95       	ret

0000442a <u8g_font_GetFontEndEncoding>:
    442a:	0b 96       	adiw	r24, 0x0b	; 11
    442c:	fc 01       	movw	r30, r24
    442e:	84 91       	lpm	r24, Z
    4430:	08 95       	ret

00004432 <u8g_GetGlyph>:
    4432:	af 92       	push	r10
    4434:	bf 92       	push	r11
    4436:	cf 92       	push	r12
    4438:	df 92       	push	r13
    443a:	ef 92       	push	r14
    443c:	ff 92       	push	r15
    443e:	0f 93       	push	r16
    4440:	1f 93       	push	r17
    4442:	cf 93       	push	r28
    4444:	df 93       	push	r29
    4446:	7c 01       	movw	r14, r24
    4448:	b6 2e       	mov	r11, r22
    444a:	dc 01       	movw	r26, r24
    444c:	14 96       	adiw	r26, 0x04	; 4
    444e:	cd 91       	ld	r28, X+
    4450:	dc 91       	ld	r29, X
    4452:	15 97       	sbiw	r26, 0x05	; 5
    4454:	ce 01       	movw	r24, r28
    4456:	0e 94 fa 21 	call	0x43f4	; 0x43f4 <u8g_font_GetFormat>
    445a:	18 2f       	mov	r17, r24
    445c:	f7 01       	movw	r30, r14
    445e:	84 81       	ldd	r24, Z+4	; 0x04
    4460:	95 81       	ldd	r25, Z+5	; 0x05
    4462:	0e 94 fd 21 	call	0x43fa	; 0x43fa <u8g_font_GetFontGlyphStructureSize>
    4466:	d8 2e       	mov	r13, r24
    4468:	11 30       	cpi	r17, 0x01	; 1
    446a:	29 f4       	brne	.+10     	; 0x4476 <u8g_GetGlyph+0x44>
    446c:	0f 2e       	mov	r0, r31
    446e:	ff e0       	ldi	r31, 0x0F	; 15
    4470:	af 2e       	mov	r10, r31
    4472:	f0 2d       	mov	r31, r0
    4474:	02 c0       	rjmp	.+4      	; 0x447a <u8g_GetGlyph+0x48>
    4476:	aa 24       	eor	r10, r10
    4478:	aa 94       	dec	r10
    447a:	d7 01       	movw	r26, r14
    447c:	14 96       	adiw	r26, 0x04	; 4
    447e:	8d 91       	ld	r24, X+
    4480:	9c 91       	ld	r25, X
    4482:	15 97       	sbiw	r26, 0x05	; 5
    4484:	0e 94 11 22 	call	0x4422	; 0x4422 <u8g_font_GetFontStartEncoding>
    4488:	18 2f       	mov	r17, r24
    448a:	f7 01       	movw	r30, r14
    448c:	84 81       	ldd	r24, Z+4	; 0x04
    448e:	95 81       	ldd	r25, Z+5	; 0x05
    4490:	0e 94 15 22 	call	0x442a	; 0x442a <u8g_font_GetFontEndEncoding>
    4494:	08 2f       	mov	r16, r24
    4496:	d7 01       	movw	r26, r14
    4498:	14 96       	adiw	r26, 0x04	; 4
    449a:	8d 91       	ld	r24, X+
    449c:	9c 91       	ld	r25, X
    449e:	15 97       	sbiw	r26, 0x05	; 5
    44a0:	0e 94 0d 22 	call	0x441a	; 0x441a <u8g_font_GetEncoding97Pos>
    44a4:	b0 e6       	ldi	r27, 0x60	; 96
    44a6:	bb 15       	cp	r27, r11
    44a8:	30 f4       	brcc	.+12     	; 0x44b6 <u8g_GetGlyph+0x84>
    44aa:	00 97       	sbiw	r24, 0x00	; 0
    44ac:	21 f0       	breq	.+8      	; 0x44b6 <u8g_GetGlyph+0x84>
    44ae:	c8 0f       	add	r28, r24
    44b0:	d9 1f       	adc	r29, r25
    44b2:	11 e6       	ldi	r17, 0x61	; 97
    44b4:	0f c0       	rjmp	.+30     	; 0x44d4 <u8g_GetGlyph+0xa2>
    44b6:	f7 01       	movw	r30, r14
    44b8:	84 81       	ldd	r24, Z+4	; 0x04
    44ba:	95 81       	ldd	r25, Z+5	; 0x05
    44bc:	0e 94 09 22 	call	0x4412	; 0x4412 <u8g_font_GetEncoding65Pos>
    44c0:	f0 e4       	ldi	r31, 0x40	; 64
    44c2:	fb 15       	cp	r31, r11
    44c4:	30 f4       	brcc	.+12     	; 0x44d2 <u8g_GetGlyph+0xa0>
    44c6:	00 97       	sbiw	r24, 0x00	; 0
    44c8:	21 f0       	breq	.+8      	; 0x44d2 <u8g_GetGlyph+0xa0>
    44ca:	c8 0f       	add	r28, r24
    44cc:	d9 1f       	adc	r29, r25
    44ce:	11 e4       	ldi	r17, 0x41	; 65
    44d0:	01 c0       	rjmp	.+2      	; 0x44d4 <u8g_GetGlyph+0xa2>
    44d2:	61 96       	adiw	r28, 0x11	; 17
    44d4:	0b 15       	cp	r16, r11
    44d6:	90 f4       	brcc	.+36     	; 0x44fc <u8g_GetGlyph+0xca>
    44d8:	d7 01       	movw	r26, r14
    44da:	50 96       	adiw	r26, 0x10	; 16
    44dc:	1c 92       	st	X, r1
    44de:	50 97       	sbiw	r26, 0x10	; 16
    44e0:	53 96       	adiw	r26, 0x13	; 19
    44e2:	1c 92       	st	X, r1
    44e4:	53 97       	sbiw	r26, 0x13	; 19
    44e6:	54 96       	adiw	r26, 0x14	; 20
    44e8:	1c 92       	st	X, r1
    44ea:	54 97       	sbiw	r26, 0x14	; 20
    44ec:	51 96       	adiw	r26, 0x11	; 17
    44ee:	1c 92       	st	X, r1
    44f0:	51 97       	sbiw	r26, 0x11	; 17
    44f2:	52 96       	adiw	r26, 0x12	; 18
    44f4:	1c 92       	st	X, r1
    44f6:	80 e0       	ldi	r24, 0x00	; 0
    44f8:	90 e0       	ldi	r25, 0x00	; 0
    44fa:	75 c0       	rjmp	.+234    	; 0x45e6 <u8g_GetGlyph+0x1b4>
    44fc:	01 17       	cp	r16, r17
    44fe:	08 f4       	brcc	.+2      	; 0x4502 <u8g_GetGlyph+0xd0>
    4500:	6a c0       	rjmp	.+212    	; 0x45d6 <u8g_GetGlyph+0x1a4>
    4502:	2d 2d       	mov	r18, r13
    4504:	30 e0       	ldi	r19, 0x00	; 0
    4506:	6e 01       	movw	r12, r28
    4508:	fe 01       	movw	r30, r28
    450a:	94 91       	lpm	r25, Z
    450c:	9f 3f       	cpi	r25, 0xFF	; 255
    450e:	11 f4       	brne	.+4      	; 0x4514 <u8g_GetGlyph+0xe2>
    4510:	21 96       	adiw	r28, 0x01	; 1
    4512:	5d c0       	rjmp	.+186    	; 0x45ce <u8g_GetGlyph+0x19c>
    4514:	1b 11       	cpse	r17, r11
    4516:	52 c0       	rjmp	.+164    	; 0x45bc <u8g_GetGlyph+0x18a>
    4518:	8e 01       	movw	r16, r28
    451a:	d7 01       	movw	r26, r14
    451c:	14 96       	adiw	r26, 0x04	; 4
    451e:	8d 91       	ld	r24, X+
    4520:	9c 91       	ld	r25, X
    4522:	15 97       	sbiw	r26, 0x05	; 5
    4524:	0e 94 fa 21 	call	0x43f4	; 0x43f4 <u8g_font_GetFormat>
    4528:	88 23       	and	r24, r24
    452a:	11 f0       	breq	.+4      	; 0x4530 <u8g_GetGlyph+0xfe>
    452c:	82 30       	cpi	r24, 0x02	; 2
    452e:	f1 f4       	brne	.+60     	; 0x456c <u8g_GetGlyph+0x13a>
    4530:	f6 01       	movw	r30, r12
    4532:	c4 90       	lpm	r12, Z
    4534:	d7 01       	movw	r26, r14
    4536:	53 96       	adiw	r26, 0x13	; 19
    4538:	cc 92       	st	X, r12
    453a:	53 97       	sbiw	r26, 0x13	; 19
    453c:	f8 01       	movw	r30, r16
    453e:	31 96       	adiw	r30, 0x01	; 1
    4540:	e4 91       	lpm	r30, Z
    4542:	54 96       	adiw	r26, 0x14	; 20
    4544:	ec 93       	st	X, r30
    4546:	54 97       	sbiw	r26, 0x14	; 20
    4548:	f8 01       	movw	r30, r16
    454a:	33 96       	adiw	r30, 0x03	; 3
    454c:	e4 91       	lpm	r30, Z
    454e:	50 96       	adiw	r26, 0x10	; 16
    4550:	ec 93       	st	X, r30
    4552:	50 97       	sbiw	r26, 0x10	; 16
    4554:	f8 01       	movw	r30, r16
    4556:	34 96       	adiw	r30, 0x04	; 4
    4558:	e4 91       	lpm	r30, Z
    455a:	51 96       	adiw	r26, 0x11	; 17
    455c:	ec 93       	st	X, r30
    455e:	51 97       	sbiw	r26, 0x11	; 17
    4560:	f8 01       	movw	r30, r16
    4562:	35 96       	adiw	r30, 0x05	; 5
    4564:	e4 91       	lpm	r30, Z
    4566:	52 96       	adiw	r26, 0x12	; 18
    4568:	ec 93       	st	X, r30
    456a:	25 c0       	rjmp	.+74     	; 0x45b6 <u8g_GetGlyph+0x184>
    456c:	fe 01       	movw	r30, r28
    456e:	84 91       	lpm	r24, Z
    4570:	98 2f       	mov	r25, r24
    4572:	9f 70       	andi	r25, 0x0F	; 15
    4574:	92 50       	subi	r25, 0x02	; 2
    4576:	d7 01       	movw	r26, r14
    4578:	52 96       	adiw	r26, 0x12	; 18
    457a:	9c 93       	st	X, r25
    457c:	52 97       	sbiw	r26, 0x12	; 18
    457e:	c8 2e       	mov	r12, r24
    4580:	c6 94       	lsr	r12
    4582:	c6 94       	lsr	r12
    4584:	c6 94       	lsr	r12
    4586:	c6 94       	lsr	r12
    4588:	51 96       	adiw	r26, 0x11	; 17
    458a:	cc 92       	st	X, r12
    458c:	51 97       	sbiw	r26, 0x11	; 17
    458e:	fe 01       	movw	r30, r28
    4590:	31 96       	adiw	r30, 0x01	; 1
    4592:	e4 91       	lpm	r30, Z
    4594:	8e 2f       	mov	r24, r30
    4596:	8f 70       	andi	r24, 0x0F	; 15
    4598:	54 96       	adiw	r26, 0x14	; 20
    459a:	8c 93       	st	X, r24
    459c:	54 97       	sbiw	r26, 0x14	; 20
    459e:	e2 95       	swap	r30
    45a0:	ef 70       	andi	r30, 0x0F	; 15
    45a2:	53 96       	adiw	r26, 0x13	; 19
    45a4:	ec 93       	st	X, r30
    45a6:	53 97       	sbiw	r26, 0x13	; 19
    45a8:	fe 01       	movw	r30, r28
    45aa:	32 96       	adiw	r30, 0x02	; 2
    45ac:	e4 91       	lpm	r30, Z
    45ae:	e2 95       	swap	r30
    45b0:	ef 70       	andi	r30, 0x0F	; 15
    45b2:	50 96       	adiw	r26, 0x10	; 16
    45b4:	ec 93       	st	X, r30
    45b6:	8c 2f       	mov	r24, r28
    45b8:	9d 2f       	mov	r25, r29
    45ba:	15 c0       	rjmp	.+42     	; 0x45e6 <u8g_GetGlyph+0x1b4>
    45bc:	fe 01       	movw	r30, r28
    45be:	32 96       	adiw	r30, 0x02	; 2
    45c0:	e4 91       	lpm	r30, Z
    45c2:	ea 21       	and	r30, r10
    45c4:	c9 01       	movw	r24, r18
    45c6:	8e 0f       	add	r24, r30
    45c8:	91 1d       	adc	r25, r1
    45ca:	c8 0f       	add	r28, r24
    45cc:	d9 1f       	adc	r29, r25
    45ce:	10 17       	cp	r17, r16
    45d0:	11 f0       	breq	.+4      	; 0x45d6 <u8g_GetGlyph+0x1a4>
    45d2:	1f 5f       	subi	r17, 0xFF	; 255
    45d4:	98 cf       	rjmp	.-208    	; 0x4506 <u8g_GetGlyph+0xd4>
    45d6:	f7 01       	movw	r30, r14
    45d8:	10 8a       	std	Z+16, r1	; 0x10
    45da:	13 8a       	std	Z+19, r1	; 0x13
    45dc:	14 8a       	std	Z+20, r1	; 0x14
    45de:	11 8a       	std	Z+17, r1	; 0x11
    45e0:	12 8a       	std	Z+18, r1	; 0x12
    45e2:	80 e0       	ldi	r24, 0x00	; 0
    45e4:	90 e0       	ldi	r25, 0x00	; 0
    45e6:	df 91       	pop	r29
    45e8:	cf 91       	pop	r28
    45ea:	1f 91       	pop	r17
    45ec:	0f 91       	pop	r16
    45ee:	ff 90       	pop	r15
    45f0:	ef 90       	pop	r14
    45f2:	df 90       	pop	r13
    45f4:	cf 90       	pop	r12
    45f6:	bf 90       	pop	r11
    45f8:	af 90       	pop	r10
    45fa:	08 95       	ret

000045fc <u8g_draw_glyph>:
    45fc:	6f 92       	push	r6
    45fe:	7f 92       	push	r7
    4600:	8f 92       	push	r8
    4602:	9f 92       	push	r9
    4604:	af 92       	push	r10
    4606:	bf 92       	push	r11
    4608:	cf 92       	push	r12
    460a:	df 92       	push	r13
    460c:	ef 92       	push	r14
    460e:	ff 92       	push	r15
    4610:	0f 93       	push	r16
    4612:	1f 93       	push	r17
    4614:	cf 93       	push	r28
    4616:	df 93       	push	r29
    4618:	5c 01       	movw	r10, r24
    461a:	16 2f       	mov	r17, r22
    461c:	64 2e       	mov	r6, r20
    461e:	62 2f       	mov	r22, r18
    4620:	0e 94 19 22 	call	0x4432	; 0x4432 <u8g_GetGlyph>
    4624:	6c 01       	movw	r12, r24
    4626:	89 2b       	or	r24, r25
    4628:	09 f4       	brne	.+2      	; 0x462c <u8g_draw_glyph+0x30>
    462a:	48 c0       	rjmp	.+144    	; 0x46bc <u8g_draw_glyph+0xc0>
    462c:	f5 01       	movw	r30, r10
    462e:	84 81       	ldd	r24, Z+4	; 0x04
    4630:	95 81       	ldd	r25, Z+5	; 0x05
    4632:	0e 94 fd 21 	call	0x43fa	; 0x43fa <u8g_font_GetFontGlyphStructureSize>
    4636:	98 2e       	mov	r9, r24
    4638:	f5 01       	movw	r30, r10
    463a:	d3 89       	ldd	r29, Z+19	; 0x13
    463c:	c4 89       	ldd	r28, Z+20	; 0x14
    463e:	71 88       	ldd	r7, Z+17	; 0x11
    4640:	71 0e       	add	r7, r17
    4642:	92 89       	ldd	r25, Z+18	; 0x12
    4644:	69 1a       	sub	r6, r25
    4646:	f6 2c       	mov	r15, r6
    4648:	fc 1a       	sub	r15, r28
    464a:	0c 2f       	mov	r16, r28
    464c:	2d 2f       	mov	r18, r29
    464e:	4f 2d       	mov	r20, r15
    4650:	67 2d       	mov	r22, r7
    4652:	c5 01       	movw	r24, r10
    4654:	0e 94 4c 1f 	call	0x3e98	; 0x3e98 <u8g_IsBBXIntersection>
    4658:	81 11       	cpse	r24, r1
    465a:	03 c0       	rjmp	.+6      	; 0x4662 <u8g_draw_glyph+0x66>
    465c:	f5 01       	movw	r30, r10
    465e:	80 89       	ldd	r24, Z+16	; 0x10
    4660:	2e c0       	rjmp	.+92     	; 0x46be <u8g_draw_glyph+0xc2>
    4662:	d9 5f       	subi	r29, 0xF9	; 249
    4664:	ed 2e       	mov	r14, r29
    4666:	e6 94       	lsr	r14
    4668:	e6 94       	lsr	r14
    466a:	e6 94       	lsr	r14
    466c:	cc 23       	and	r28, r28
    466e:	19 f1       	breq	.+70     	; 0x46b6 <u8g_draw_glyph+0xba>
    4670:	e6 01       	movw	r28, r12
    4672:	c9 0d       	add	r28, r9
    4674:	d1 1d       	adc	r29, r1
    4676:	88 24       	eor	r8, r8
    4678:	8a 94       	dec	r8
    467a:	8e 0c       	add	r8, r14
    467c:	91 2c       	mov	r9, r1
    467e:	ff ef       	ldi	r31, 0xFF	; 255
    4680:	8f 1a       	sub	r8, r31
    4682:	9f 0a       	sbc	r9, r31
    4684:	11 c0       	rjmp	.+34     	; 0x46a8 <u8g_draw_glyph+0xac>
    4686:	fe 01       	movw	r30, r28
    4688:	04 91       	lpm	r16, Z
    468a:	20 e0       	ldi	r18, 0x00	; 0
    468c:	4f 2d       	mov	r20, r15
    468e:	61 2f       	mov	r22, r17
    4690:	c5 01       	movw	r24, r10
    4692:	0e 94 57 25 	call	0x4aae	; 0x4aae <u8g_Draw8Pixel>
    4696:	21 96       	adiw	r28, 0x01	; 1
    4698:	18 5f       	subi	r17, 0xF8	; 248
    469a:	cc 15       	cp	r28, r12
    469c:	dd 05       	cpc	r29, r13
    469e:	99 f7       	brne	.-26     	; 0x4686 <u8g_draw_glyph+0x8a>
    46a0:	e6 01       	movw	r28, r12
    46a2:	f3 94       	inc	r15
    46a4:	f6 14       	cp	r15, r6
    46a6:	39 f0       	breq	.+14     	; 0x46b6 <u8g_draw_glyph+0xba>
    46a8:	ee 20       	and	r14, r14
    46aa:	d9 f3       	breq	.-10     	; 0x46a2 <u8g_draw_glyph+0xa6>
    46ac:	6e 01       	movw	r12, r28
    46ae:	c8 0c       	add	r12, r8
    46b0:	d9 1c       	adc	r13, r9
    46b2:	17 2d       	mov	r17, r7
    46b4:	e8 cf       	rjmp	.-48     	; 0x4686 <u8g_draw_glyph+0x8a>
    46b6:	f5 01       	movw	r30, r10
    46b8:	80 89       	ldd	r24, Z+16	; 0x10
    46ba:	01 c0       	rjmp	.+2      	; 0x46be <u8g_draw_glyph+0xc2>
    46bc:	80 e0       	ldi	r24, 0x00	; 0
    46be:	df 91       	pop	r29
    46c0:	cf 91       	pop	r28
    46c2:	1f 91       	pop	r17
    46c4:	0f 91       	pop	r16
    46c6:	ff 90       	pop	r15
    46c8:	ef 90       	pop	r14
    46ca:	df 90       	pop	r13
    46cc:	cf 90       	pop	r12
    46ce:	bf 90       	pop	r11
    46d0:	af 90       	pop	r10
    46d2:	9f 90       	pop	r9
    46d4:	8f 90       	pop	r8
    46d6:	7f 90       	pop	r7
    46d8:	6f 90       	pop	r6
    46da:	08 95       	ret

000046dc <u8g_DrawStr>:
    46dc:	cf 92       	push	r12
    46de:	df 92       	push	r13
    46e0:	ff 92       	push	r15
    46e2:	0f 93       	push	r16
    46e4:	1f 93       	push	r17
    46e6:	cf 93       	push	r28
    46e8:	df 93       	push	r29
    46ea:	6c 01       	movw	r12, r24
    46ec:	c6 2f       	mov	r28, r22
    46ee:	f4 2e       	mov	r15, r20
    46f0:	89 01       	movw	r16, r18
    46f2:	dc 01       	movw	r26, r24
    46f4:	55 96       	adiw	r26, 0x15	; 21
    46f6:	ed 91       	ld	r30, X+
    46f8:	fc 91       	ld	r31, X
    46fa:	56 97       	sbiw	r26, 0x16	; 22
    46fc:	09 95       	icall
    46fe:	f8 0e       	add	r15, r24
    4700:	f8 01       	movw	r30, r16
    4702:	20 81       	ld	r18, Z
    4704:	22 23       	and	r18, r18
    4706:	81 f0       	breq	.+32     	; 0x4728 <u8g_DrawStr+0x4c>
    4708:	0f 5f       	subi	r16, 0xFF	; 255
    470a:	1f 4f       	sbci	r17, 0xFF	; 255
    470c:	d0 e0       	ldi	r29, 0x00	; 0
    470e:	4f 2d       	mov	r20, r15
    4710:	6c 2f       	mov	r22, r28
    4712:	c6 01       	movw	r24, r12
    4714:	0e 94 fe 22 	call	0x45fc	; 0x45fc <u8g_draw_glyph>
    4718:	c8 0f       	add	r28, r24
    471a:	d8 0f       	add	r29, r24
    471c:	d8 01       	movw	r26, r16
    471e:	2d 91       	ld	r18, X+
    4720:	8d 01       	movw	r16, r26
    4722:	21 11       	cpse	r18, r1
    4724:	f4 cf       	rjmp	.-24     	; 0x470e <u8g_DrawStr+0x32>
    4726:	01 c0       	rjmp	.+2      	; 0x472a <u8g_DrawStr+0x4e>
    4728:	d0 e0       	ldi	r29, 0x00	; 0
    472a:	8d 2f       	mov	r24, r29
    472c:	df 91       	pop	r29
    472e:	cf 91       	pop	r28
    4730:	1f 91       	pop	r17
    4732:	0f 91       	pop	r16
    4734:	ff 90       	pop	r15
    4736:	df 90       	pop	r13
    4738:	cf 90       	pop	r12
    473a:	08 95       	ret

0000473c <u8g_UpdateRefHeight>:
    473c:	dc 01       	movw	r26, r24
    473e:	14 96       	adiw	r26, 0x04	; 4
    4740:	8d 91       	ld	r24, X+
    4742:	9c 91       	ld	r25, X
    4744:	15 97       	sbiw	r26, 0x05	; 5
    4746:	00 97       	sbiw	r24, 0x00	; 0
    4748:	09 f4       	brne	.+2      	; 0x474c <u8g_UpdateRefHeight+0x10>
    474a:	4d c0       	rjmp	.+154    	; 0x47e6 <u8g_UpdateRefHeight+0xaa>
    474c:	57 96       	adiw	r26, 0x17	; 23
    474e:	2c 91       	ld	r18, X
    4750:	57 97       	sbiw	r26, 0x17	; 23
    4752:	21 11       	cpse	r18, r1
    4754:	0d c0       	rjmp	.+26     	; 0x4770 <u8g_UpdateRefHeight+0x34>
    4756:	fc 01       	movw	r30, r24
    4758:	35 96       	adiw	r30, 0x05	; 5
    475a:	e4 91       	lpm	r30, Z
    475c:	58 96       	adiw	r26, 0x18	; 24
    475e:	ec 93       	st	X, r30
    4760:	58 97       	sbiw	r26, 0x18	; 24
    4762:	fc 01       	movw	r30, r24
    4764:	3c 96       	adiw	r30, 0x0c	; 12
    4766:	e4 91       	lpm	r30, Z
    4768:	59 96       	adiw	r26, 0x19	; 25
    476a:	ec 93       	st	X, r30
    476c:	59 97       	sbiw	r26, 0x19	; 25
    476e:	1b c0       	rjmp	.+54     	; 0x47a6 <u8g_UpdateRefHeight+0x6a>
    4770:	21 30       	cpi	r18, 0x01	; 1
    4772:	69 f4       	brne	.+26     	; 0x478e <u8g_UpdateRefHeight+0x52>
    4774:	fc 01       	movw	r30, r24
    4776:	3f 96       	adiw	r30, 0x0f	; 15
    4778:	e4 91       	lpm	r30, Z
    477a:	58 96       	adiw	r26, 0x18	; 24
    477c:	ec 93       	st	X, r30
    477e:	58 97       	sbiw	r26, 0x18	; 24
    4780:	fc 01       	movw	r30, r24
    4782:	70 96       	adiw	r30, 0x10	; 16
    4784:	e4 91       	lpm	r30, Z
    4786:	59 96       	adiw	r26, 0x19	; 25
    4788:	ec 93       	st	X, r30
    478a:	59 97       	sbiw	r26, 0x19	; 25
    478c:	0c c0       	rjmp	.+24     	; 0x47a6 <u8g_UpdateRefHeight+0x6a>
    478e:	fc 01       	movw	r30, r24
    4790:	3d 96       	adiw	r30, 0x0d	; 13
    4792:	e4 91       	lpm	r30, Z
    4794:	58 96       	adiw	r26, 0x18	; 24
    4796:	ec 93       	st	X, r30
    4798:	58 97       	sbiw	r26, 0x18	; 24
    479a:	fc 01       	movw	r30, r24
    479c:	3e 96       	adiw	r30, 0x0e	; 14
    479e:	e4 91       	lpm	r30, Z
    47a0:	59 96       	adiw	r26, 0x19	; 25
    47a2:	ec 93       	st	X, r30
    47a4:	59 97       	sbiw	r26, 0x19	; 25
    47a6:	58 96       	adiw	r26, 0x18	; 24
    47a8:	8c 91       	ld	r24, X
    47aa:	58 97       	sbiw	r26, 0x18	; 24
    47ac:	08 2e       	mov	r0, r24
    47ae:	00 0c       	add	r0, r0
    47b0:	99 0b       	sbc	r25, r25
    47b2:	59 96       	adiw	r26, 0x19	; 25
    47b4:	2c 91       	ld	r18, X
    47b6:	59 97       	sbiw	r26, 0x19	; 25
    47b8:	82 1b       	sub	r24, r18
    47ba:	91 09       	sbc	r25, r1
    47bc:	27 fd       	sbrc	r18, 7
    47be:	93 95       	inc	r25
    47c0:	5a 96       	adiw	r26, 0x1a	; 26
    47c2:	2c 91       	ld	r18, X
    47c4:	5a 97       	sbiw	r26, 0x1a	; 26
    47c6:	20 34       	cpi	r18, 0x40	; 64
    47c8:	61 f0       	breq	.+24     	; 0x47e2 <u8g_UpdateRefHeight+0xa6>
    47ca:	82 9f       	mul	r24, r18
    47cc:	c0 01       	movw	r24, r0
    47ce:	11 24       	eor	r1, r1
    47d0:	00 24       	eor	r0, r0
    47d2:	88 0f       	add	r24, r24
    47d4:	99 1f       	adc	r25, r25
    47d6:	00 1c       	adc	r0, r0
    47d8:	88 0f       	add	r24, r24
    47da:	99 1f       	adc	r25, r25
    47dc:	00 1c       	adc	r0, r0
    47de:	89 2f       	mov	r24, r25
    47e0:	90 2d       	mov	r25, r0
    47e2:	5b 96       	adiw	r26, 0x1b	; 27
    47e4:	8c 93       	st	X, r24
    47e6:	08 95       	ret

000047e8 <u8g_SetFontPosBaseline>:
    47e8:	27 e0       	ldi	r18, 0x07	; 7
    47ea:	32 e2       	ldi	r19, 0x22	; 34
    47ec:	fc 01       	movw	r30, r24
    47ee:	36 8b       	std	Z+22, r19	; 0x16
    47f0:	25 8b       	std	Z+21, r18	; 0x15
    47f2:	08 95       	ret

000047f4 <u8g_SetFont>:

void u8g_SetFont(u8g_t *u8g, const u8g_fntpgm_uint8_t  *font)
{
    47f4:	cf 93       	push	r28
    47f6:	df 93       	push	r29
  if ( u8g->font != font )
    47f8:	fc 01       	movw	r30, r24
    47fa:	24 81       	ldd	r18, Z+4	; 0x04
    47fc:	35 81       	ldd	r19, Z+5	; 0x05
    47fe:	26 17       	cp	r18, r22
    4800:	37 07       	cpc	r19, r23
    4802:	49 f0       	breq	.+18     	; 0x4816 <u8g_SetFont+0x22>
    4804:	ec 01       	movw	r28, r24
  {
    u8g->font = font;
    4806:	75 83       	std	Z+5, r23	; 0x05
    4808:	64 83       	std	Z+4, r22	; 0x04
    u8g_UpdateRefHeight(u8g);
    480a:	0e 94 9e 23 	call	0x473c	; 0x473c <u8g_UpdateRefHeight>
  return 0;
}

void u8g_SetFontPosBaseline(u8g_t *u8g)
{
  u8g->font_calc_vref = u8g_font_calc_vref_font;
    480e:	87 e0       	ldi	r24, 0x07	; 7
    4810:	92 e2       	ldi	r25, 0x22	; 34
    4812:	9e 8b       	std	Y+22, r25	; 0x16
    4814:	8d 8b       	std	Y+21, r24	; 0x15
  {
    u8g->font = font;
    u8g_UpdateRefHeight(u8g);
    u8g_SetFontPosBaseline(u8g);
  }
}
    4816:	df 91       	pop	r29
    4818:	cf 91       	pop	r28
    481a:	08 95       	ret

0000481c <u8g_init_data>:
  irgb.idx = idx;
  irgb.r = r;
  irgb.g = g;
  irgb.b = b;  
  u8g_call_dev_fn(u8g, u8g->dev, U8G_DEV_MSG_SET_COLOR_ENTRY, &irgb);
}
    481c:	1f 93       	push	r17
    481e:	cf 93       	push	r28
    4820:	df 93       	push	r29
    4822:	ec 01       	movw	r28, r24
    4824:	1d 82       	std	Y+5, r1	; 0x05
    4826:	1c 82       	std	Y+4, r1	; 0x04
    4828:	1f 82       	std	Y+7, r1	; 0x07
    482a:	1e 82       	std	Y+6, r1	; 0x06
    482c:	19 86       	std	Y+9, r1	; 0x09
    482e:	81 e0       	ldi	r24, 0x01	; 1
    4830:	88 87       	std	Y+8, r24	; 0x08
    4832:	82 e2       	ldi	r24, 0x22	; 34
    4834:	8a 87       	std	Y+10, r24	; 0x0a
    4836:	1f 86       	std	Y+15, r1	; 0x0f
    4838:	1e 86       	std	Y+14, r1	; 0x0e
    483a:	fe 01       	movw	r30, r28
    483c:	b3 96       	adiw	r30, 0x23	; 35
    483e:	9e 01       	movw	r18, r28
    4840:	2f 5c       	subi	r18, 0xCF	; 207
    4842:	3f 4f       	sbci	r19, 0xFF	; 255
    4844:	8f ef       	ldi	r24, 0xFF	; 255
    4846:	81 93       	st	Z+, r24
    4848:	e2 17       	cp	r30, r18
    484a:	f3 07       	cpc	r31, r19
    484c:	e1 f7       	brne	.-8      	; 0x4846 <u8g_init_data+0x2a>
    484e:	11 e0       	ldi	r17, 0x01	; 1
    4850:	18 a3       	std	Y+32, r17	; 0x20
    4852:	ce 01       	movw	r24, r28
    4854:	0e 94 f4 23 	call	0x47e8	; 0x47e8 <u8g_SetFontPosBaseline>
    4858:	1f 8b       	std	Y+23, r17	; 0x17
    485a:	18 8e       	std	Y+24, r1	; 0x18
    485c:	19 8e       	std	Y+25, r1	; 0x19
    485e:	80 e4       	ldi	r24, 0x40	; 64
    4860:	8a 8f       	std	Y+26, r24	; 0x1a
    4862:	1b 8e       	std	Y+27, r1	; 0x1b
    4864:	84 e9       	ldi	r24, 0x94	; 148
    4866:	96 e2       	ldi	r25, 0x26	; 38
    4868:	9a ab       	std	Y+50, r25	; 0x32
    486a:	89 ab       	std	Y+49, r24	; 0x31
    486c:	df 91       	pop	r29
    486e:	cf 91       	pop	r28
    4870:	1f 91       	pop	r17
    4872:	08 95       	ret

00004874 <u8g_call_dev_fn>:
    4874:	db 01       	movw	r26, r22
    4876:	ed 91       	ld	r30, X+
    4878:	fc 91       	ld	r31, X
    487a:	09 95       	icall
    487c:	08 95       	ret

0000487e <u8g_InitLL>:
    487e:	0f 93       	push	r16
    4880:	1f 93       	push	r17
    4882:	cf 93       	push	r28
    4884:	df 93       	push	r29
    4886:	ec 01       	movw	r28, r24
    4888:	8b 01       	movw	r16, r22
    488a:	e9 a9       	ldd	r30, Y+49	; 0x31
    488c:	fa a9       	ldd	r31, Y+50	; 0x32
    488e:	82 e0       	ldi	r24, 0x02	; 2
    4890:	09 95       	icall
    4892:	20 e0       	ldi	r18, 0x00	; 0
    4894:	30 e0       	ldi	r19, 0x00	; 0
    4896:	4a e0       	ldi	r20, 0x0A	; 10
    4898:	b8 01       	movw	r22, r16
    489a:	ce 01       	movw	r24, r28
    489c:	0e 94 3a 24 	call	0x4874	; 0x4874 <u8g_call_dev_fn>
    48a0:	18 2f       	mov	r17, r24
    48a2:	e9 a9       	ldd	r30, Y+49	; 0x31
    48a4:	fa a9       	ldd	r31, Y+50	; 0x32
    48a6:	83 e0       	ldi	r24, 0x03	; 3
    48a8:	09 95       	icall
    48aa:	e9 a9       	ldd	r30, Y+49	; 0x31
    48ac:	fa a9       	ldd	r31, Y+50	; 0x32
    48ae:	80 e0       	ldi	r24, 0x00	; 0
    48b0:	09 95       	icall
    48b2:	81 2f       	mov	r24, r17
    48b4:	df 91       	pop	r29
    48b6:	cf 91       	pop	r28
    48b8:	1f 91       	pop	r17
    48ba:	0f 91       	pop	r16
    48bc:	08 95       	ret

000048be <u8g_FirstPageLL>:
    48be:	0f 93       	push	r16
    48c0:	1f 93       	push	r17
    48c2:	cf 93       	push	r28
    48c4:	df 93       	push	r29
    48c6:	ec 01       	movw	r28, r24
    48c8:	8b 01       	movw	r16, r22
    48ca:	e9 a9       	ldd	r30, Y+49	; 0x31
    48cc:	fa a9       	ldd	r31, Y+50	; 0x32
    48ce:	82 e0       	ldi	r24, 0x02	; 2
    48d0:	09 95       	icall
    48d2:	e9 a9       	ldd	r30, Y+49	; 0x31
    48d4:	fa a9       	ldd	r31, Y+50	; 0x32
    48d6:	81 e0       	ldi	r24, 0x01	; 1
    48d8:	09 95       	icall
    48da:	20 e0       	ldi	r18, 0x00	; 0
    48dc:	30 e0       	ldi	r19, 0x00	; 0
    48de:	44 e1       	ldi	r20, 0x14	; 20
    48e0:	b8 01       	movw	r22, r16
    48e2:	ce 01       	movw	r24, r28
    48e4:	0e 94 3a 24 	call	0x4874	; 0x4874 <u8g_call_dev_fn>
    48e8:	9e 01       	movw	r18, r28
    48ea:	2d 5c       	subi	r18, 0xCD	; 205
    48ec:	3f 4f       	sbci	r19, 0xFF	; 255
    48ee:	47 e1       	ldi	r20, 0x17	; 23
    48f0:	b8 01       	movw	r22, r16
    48f2:	ce 01       	movw	r24, r28
    48f4:	0e 94 3a 24 	call	0x4874	; 0x4874 <u8g_call_dev_fn>
    48f8:	e9 a9       	ldd	r30, Y+49	; 0x31
    48fa:	fa a9       	ldd	r31, Y+50	; 0x32
    48fc:	80 e0       	ldi	r24, 0x00	; 0
    48fe:	09 95       	icall
    4900:	df 91       	pop	r29
    4902:	cf 91       	pop	r28
    4904:	1f 91       	pop	r17
    4906:	0f 91       	pop	r16
    4908:	08 95       	ret

0000490a <u8g_NextPageLL>:
    490a:	ef 92       	push	r14
    490c:	ff 92       	push	r15
    490e:	1f 93       	push	r17
    4910:	cf 93       	push	r28
    4912:	df 93       	push	r29
    4914:	ec 01       	movw	r28, r24
    4916:	7b 01       	movw	r14, r22
    4918:	e9 a9       	ldd	r30, Y+49	; 0x31
    491a:	fa a9       	ldd	r31, Y+50	; 0x32
    491c:	82 e0       	ldi	r24, 0x02	; 2
    491e:	09 95       	icall
    4920:	e9 a9       	ldd	r30, Y+49	; 0x31
    4922:	fa a9       	ldd	r31, Y+50	; 0x32
    4924:	81 e0       	ldi	r24, 0x01	; 1
    4926:	09 95       	icall
    4928:	20 e0       	ldi	r18, 0x00	; 0
    492a:	30 e0       	ldi	r19, 0x00	; 0
    492c:	45 e1       	ldi	r20, 0x15	; 21
    492e:	b7 01       	movw	r22, r14
    4930:	ce 01       	movw	r24, r28
    4932:	0e 94 3a 24 	call	0x4874	; 0x4874 <u8g_call_dev_fn>
    4936:	18 2f       	mov	r17, r24
    4938:	88 23       	and	r24, r24
    493a:	41 f0       	breq	.+16     	; 0x494c <u8g_NextPageLL+0x42>
    493c:	9e 01       	movw	r18, r28
    493e:	2d 5c       	subi	r18, 0xCD	; 205
    4940:	3f 4f       	sbci	r19, 0xFF	; 255
    4942:	47 e1       	ldi	r20, 0x17	; 23
    4944:	b7 01       	movw	r22, r14
    4946:	ce 01       	movw	r24, r28
    4948:	0e 94 3a 24 	call	0x4874	; 0x4874 <u8g_call_dev_fn>
    494c:	e9 a9       	ldd	r30, Y+49	; 0x31
    494e:	fa a9       	ldd	r31, Y+50	; 0x32
    4950:	80 e0       	ldi	r24, 0x00	; 0
    4952:	09 95       	icall
    4954:	81 2f       	mov	r24, r17
    4956:	df 91       	pop	r29
    4958:	cf 91       	pop	r28
    495a:	1f 91       	pop	r17
    495c:	ff 90       	pop	r15
    495e:	ef 90       	pop	r14
    4960:	08 95       	ret

00004962 <u8g_SetContrastLL>:
    4962:	cf 93       	push	r28
    4964:	df 93       	push	r29
    4966:	1f 92       	push	r1
    4968:	cd b7       	in	r28, 0x3d	; 61
    496a:	de b7       	in	r29, 0x3e	; 62
    496c:	49 83       	std	Y+1, r20	; 0x01
    496e:	9e 01       	movw	r18, r28
    4970:	2f 5f       	subi	r18, 0xFF	; 255
    4972:	3f 4f       	sbci	r19, 0xFF	; 255
    4974:	4f e0       	ldi	r20, 0x0F	; 15
    4976:	0e 94 3a 24 	call	0x4874	; 0x4874 <u8g_call_dev_fn>
    497a:	0f 90       	pop	r0
    497c:	df 91       	pop	r29
    497e:	cf 91       	pop	r28
    4980:	08 95       	ret

00004982 <u8g_GetWidthLL>:
    4982:	cf 93       	push	r28
    4984:	df 93       	push	r29
    4986:	1f 92       	push	r1
    4988:	cd b7       	in	r28, 0x3d	; 61
    498a:	de b7       	in	r29, 0x3e	; 62
    498c:	9e 01       	movw	r18, r28
    498e:	2f 5f       	subi	r18, 0xFF	; 255
    4990:	3f 4f       	sbci	r19, 0xFF	; 255
    4992:	46 e4       	ldi	r20, 0x46	; 70
    4994:	0e 94 3a 24 	call	0x4874	; 0x4874 <u8g_call_dev_fn>
    4998:	89 81       	ldd	r24, Y+1	; 0x01
    499a:	0f 90       	pop	r0
    499c:	df 91       	pop	r29
    499e:	cf 91       	pop	r28
    49a0:	08 95       	ret

000049a2 <u8g_GetHeightLL>:
    49a2:	cf 93       	push	r28
    49a4:	df 93       	push	r29
    49a6:	1f 92       	push	r1
    49a8:	cd b7       	in	r28, 0x3d	; 61
    49aa:	de b7       	in	r29, 0x3e	; 62
    49ac:	9e 01       	movw	r18, r28
    49ae:	2f 5f       	subi	r18, 0xFF	; 255
    49b0:	3f 4f       	sbci	r19, 0xFF	; 255
    49b2:	47 e4       	ldi	r20, 0x47	; 71
    49b4:	0e 94 3a 24 	call	0x4874	; 0x4874 <u8g_call_dev_fn>
    49b8:	89 81       	ldd	r24, Y+1	; 0x01
    49ba:	0f 90       	pop	r0
    49bc:	df 91       	pop	r29
    49be:	cf 91       	pop	r28
    49c0:	08 95       	ret

000049c2 <u8g_GetModeLL>:
    49c2:	20 e0       	ldi	r18, 0x00	; 0
    49c4:	30 e0       	ldi	r19, 0x00	; 0
    49c6:	48 e4       	ldi	r20, 0x48	; 72
    49c8:	0e 94 3a 24 	call	0x4874	; 0x4874 <u8g_call_dev_fn>
    49cc:	08 95       	ret

000049ce <u8g_UpdateDimension>:
    49ce:	cf 93       	push	r28
    49d0:	df 93       	push	r29
    49d2:	ec 01       	movw	r28, r24
    49d4:	6a 81       	ldd	r22, Y+2	; 0x02
    49d6:	7b 81       	ldd	r23, Y+3	; 0x03
    49d8:	0e 94 c1 24 	call	0x4982	; 0x4982 <u8g_GetWidthLL>
    49dc:	88 83       	st	Y, r24
    49de:	6a 81       	ldd	r22, Y+2	; 0x02
    49e0:	7b 81       	ldd	r23, Y+3	; 0x03
    49e2:	ce 01       	movw	r24, r28
    49e4:	0e 94 d1 24 	call	0x49a2	; 0x49a2 <u8g_GetHeightLL>
    49e8:	89 83       	std	Y+1, r24	; 0x01
    49ea:	6a 81       	ldd	r22, Y+2	; 0x02
    49ec:	7b 81       	ldd	r23, Y+3	; 0x03
    49ee:	ce 01       	movw	r24, r28
    49f0:	0e 94 e1 24 	call	0x49c2	; 0x49c2 <u8g_GetModeLL>
    49f4:	8b 87       	std	Y+11, r24	; 0x0b
    49f6:	9e 01       	movw	r18, r28
    49f8:	2d 5c       	subi	r18, 0xCD	; 205
    49fa:	3f 4f       	sbci	r19, 0xFF	; 255
    49fc:	6a 81       	ldd	r22, Y+2	; 0x02
    49fe:	7b 81       	ldd	r23, Y+3	; 0x03
    4a00:	47 e1       	ldi	r20, 0x17	; 23
    4a02:	ce 01       	movw	r24, r28
    4a04:	0e 94 3a 24 	call	0x4874	; 0x4874 <u8g_call_dev_fn>
    4a08:	df 91       	pop	r29
    4a0a:	cf 91       	pop	r28
    4a0c:	08 95       	ret

00004a0e <u8g_Begin>:
    4a0e:	cf 93       	push	r28
    4a10:	df 93       	push	r29
    4a12:	ec 01       	movw	r28, r24
    4a14:	6a 81       	ldd	r22, Y+2	; 0x02
    4a16:	7b 81       	ldd	r23, Y+3	; 0x03
    4a18:	0e 94 3f 24 	call	0x487e	; 0x487e <u8g_InitLL>
    4a1c:	88 23       	and	r24, r24
    4a1e:	21 f0       	breq	.+8      	; 0x4a28 <u8g_Begin+0x1a>
    4a20:	ce 01       	movw	r24, r28
    4a22:	0e 94 e7 24 	call	0x49ce	; 0x49ce <u8g_UpdateDimension>
    4a26:	81 e0       	ldi	r24, 0x01	; 1
    4a28:	df 91       	pop	r29
    4a2a:	cf 91       	pop	r28
    4a2c:	08 95       	ret

00004a2e <u8g_InitSPI>:
    4a2e:	af 92       	push	r10
    4a30:	bf 92       	push	r11
    4a32:	cf 92       	push	r12
    4a34:	ef 92       	push	r14
    4a36:	ff 92       	push	r15
    4a38:	0f 93       	push	r16
    4a3a:	1f 93       	push	r17
    4a3c:	cf 93       	push	r28
    4a3e:	df 93       	push	r29
    4a40:	ec 01       	movw	r28, r24
    4a42:	5b 01       	movw	r10, r22
    4a44:	f4 2e       	mov	r15, r20
    4a46:	12 2f       	mov	r17, r18
    4a48:	0e 94 0e 24 	call	0x481c	; 0x481c <u8g_init_data>
    4a4c:	bb 82       	std	Y+3, r11	; 0x03
    4a4e:	aa 82       	std	Y+2, r10	; 0x02
    4a50:	ff a2       	std	Y+39, r15	; 0x27
    4a52:	18 a7       	std	Y+40, r17	; 0x28
    4a54:	0d a3       	std	Y+37, r16	; 0x25
    4a56:	ec a2       	std	Y+36, r14	; 0x24
    4a58:	cb a2       	std	Y+35, r12	; 0x23
    4a5a:	ce 01       	movw	r24, r28
    4a5c:	0e 94 07 25 	call	0x4a0e	; 0x4a0e <u8g_Begin>
    4a60:	df 91       	pop	r29
    4a62:	cf 91       	pop	r28
    4a64:	1f 91       	pop	r17
    4a66:	0f 91       	pop	r16
    4a68:	ff 90       	pop	r15
    4a6a:	ef 90       	pop	r14
    4a6c:	cf 90       	pop	r12
    4a6e:	bf 90       	pop	r11
    4a70:	af 90       	pop	r10
    4a72:	08 95       	ret

00004a74 <u8g_FirstPage>:
    4a74:	fc 01       	movw	r30, r24
    4a76:	62 81       	ldd	r22, Z+2	; 0x02
    4a78:	73 81       	ldd	r23, Z+3	; 0x03
    4a7a:	0e 94 5f 24 	call	0x48be	; 0x48be <u8g_FirstPageLL>
    4a7e:	08 95       	ret

00004a80 <u8g_NextPage>:
    4a80:	cf 93       	push	r28
    4a82:	df 93       	push	r29
    4a84:	ec 01       	movw	r28, r24
    4a86:	ee 85       	ldd	r30, Y+14	; 0x0e
    4a88:	ff 85       	ldd	r31, Y+15	; 0x0f
    4a8a:	30 97       	sbiw	r30, 0x00	; 0
    4a8c:	09 f0       	breq	.+2      	; 0x4a90 <u8g_NextPage+0x10>
    4a8e:	09 95       	icall
    4a90:	6a 81       	ldd	r22, Y+2	; 0x02
    4a92:	7b 81       	ldd	r23, Y+3	; 0x03
    4a94:	ce 01       	movw	r24, r28
    4a96:	0e 94 85 24 	call	0x490a	; 0x490a <u8g_NextPageLL>
    4a9a:	df 91       	pop	r29
    4a9c:	cf 91       	pop	r28
    4a9e:	08 95       	ret

00004aa0 <u8g_SetContrast>:
    4aa0:	46 2f       	mov	r20, r22
    4aa2:	fc 01       	movw	r30, r24
    4aa4:	62 81       	ldd	r22, Z+2	; 0x02
    4aa6:	73 81       	ldd	r23, Z+3	; 0x03
    4aa8:	0e 94 b1 24 	call	0x4962	; 0x4962 <u8g_SetContrastLL>
    4aac:	08 95       	ret

00004aae <u8g_Draw8Pixel>:
    4aae:	0f 93       	push	r16
    4ab0:	fc 01       	movw	r30, r24
    4ab2:	82 81       	ldd	r24, Z+2	; 0x02
    4ab4:	93 81       	ldd	r25, Z+3	; 0x03
    4ab6:	64 8f       	std	Z+28, r22	; 0x1c
    4ab8:	45 8f       	std	Z+29, r20	; 0x1d
    4aba:	27 8f       	std	Z+31, r18	; 0x1f
    4abc:	06 8f       	std	Z+30, r16	; 0x1e
    4abe:	9f 01       	movw	r18, r30
    4ac0:	24 5e       	subi	r18, 0xE4	; 228
    4ac2:	3f 4f       	sbci	r19, 0xFF	; 255
    4ac4:	4b e3       	ldi	r20, 0x3B	; 59
    4ac6:	bc 01       	movw	r22, r24
    4ac8:	cf 01       	movw	r24, r30
    4aca:	0e 94 3a 24 	call	0x4874	; 0x4874 <u8g_call_dev_fn>
    4ace:	0f 91       	pop	r16
    4ad0:	08 95       	ret

00004ad2 <u8g_SetColorIndex>:

void u8g_SetColorIndex(u8g_t *u8g, uint8_t idx)
{
  u8g->arg_pixel.color = idx;
    4ad2:	fc 01       	movw	r30, r24
    4ad4:	60 a3       	std	Z+32, r22	; 0x20
    4ad6:	08 95       	ret

00004ad8 <u8g_page_First>:
void u8g_page_Init(u8g_page_t *p, u8g_uint_t page_height, u8g_uint_t total_height )
{
  p->page_height = page_height;
  p->total_height = total_height;
  p->page = 0;
  u8g_page_First(p);
    4ad8:	fc 01       	movw	r30, r24
    4ada:	12 82       	std	Z+2, r1	; 0x02
    4adc:	80 81       	ld	r24, Z
    4ade:	81 50       	subi	r24, 0x01	; 1
    4ae0:	83 83       	std	Z+3, r24	; 0x03
    4ae2:	14 82       	std	Z+4, r1	; 0x04
    4ae4:	08 95       	ret

00004ae6 <u8g_page_Next>:
  p->page_y1--;
  p->page = 0;
}

uint8_t u8g_page_Next(u8g_page_t * p)
{
    4ae6:	fc 01       	movw	r30, r24
  register u8g_uint_t y1;
  p->page_y0 += p->page_height;
    4ae8:	90 81       	ld	r25, Z
    4aea:	82 81       	ldd	r24, Z+2	; 0x02
    4aec:	89 0f       	add	r24, r25
    4aee:	82 83       	std	Z+2, r24	; 0x02
  if ( p->page_y0 >= p->total_height )
    4af0:	21 81       	ldd	r18, Z+1	; 0x01
    4af2:	82 17       	cp	r24, r18
    4af4:	60 f4       	brcc	.+24     	; 0x4b0e <u8g_page_Next+0x28>
    return 0;
  p->page++;
    4af6:	84 81       	ldd	r24, Z+4	; 0x04
    4af8:	8f 5f       	subi	r24, 0xFF	; 255
    4afa:	84 83       	std	Z+4, r24	; 0x04
  y1 = p->page_y1;
    4afc:	83 81       	ldd	r24, Z+3	; 0x03
  y1 += p->page_height;
    4afe:	98 0f       	add	r25, r24
  if ( y1 >= p->total_height )
    4b00:	92 17       	cp	r25, r18
    4b02:	10 f0       	brcs	.+4      	; 0x4b08 <u8g_page_Next+0x22>
  {
    y1 = p->total_height;
    y1--;
    4b04:	9f ef       	ldi	r25, 0xFF	; 255
    4b06:	92 0f       	add	r25, r18
  }
  p->page_y1 = y1;
    4b08:	93 83       	std	Z+3, r25	; 0x03
  
  return 1;
    4b0a:	81 e0       	ldi	r24, 0x01	; 1
    4b0c:	08 95       	ret
uint8_t u8g_page_Next(u8g_page_t * p)
{
  register u8g_uint_t y1;
  p->page_y0 += p->page_height;
  if ( p->page_y0 >= p->total_height )
    return 0;
    4b0e:	80 e0       	ldi	r24, 0x00	; 0
    y1--;
  }
  p->page_y1 = y1;
  
  return 1;
}
    4b10:	08 95       	ret

00004b12 <u8g_pb_Clear>:
  tmp = bbx->x;
  tmp += bbx->w;
  tmp--;
    
  return u8g_pb_IsXIntersection(pb, bbx->x, tmp);
}
    4b12:	dc 01       	movw	r26, r24
    4b14:	16 96       	adiw	r26, 0x06	; 6
    4b16:	ed 91       	ld	r30, X+
    4b18:	fc 91       	ld	r31, X
    4b1a:	17 97       	sbiw	r26, 0x07	; 7
    4b1c:	15 96       	adiw	r26, 0x05	; 5
    4b1e:	8c 91       	ld	r24, X
    4b20:	9f 01       	movw	r18, r30
    4b22:	28 0f       	add	r18, r24
    4b24:	31 1d       	adc	r19, r1
    4b26:	c9 01       	movw	r24, r18
    4b28:	11 92       	st	Z+, r1
    4b2a:	e8 17       	cp	r30, r24
    4b2c:	f9 07       	cpc	r31, r25
    4b2e:	e1 f7       	brne	.-8      	; 0x4b28 <u8g_pb_Clear+0x16>
    4b30:	08 95       	ret

00004b32 <u8g_pb_IsYIntersection>:
    4b32:	fc 01       	movw	r30, r24
    4b34:	91 e0       	ldi	r25, 0x01	; 1
    4b36:	83 81       	ldd	r24, Z+3	; 0x03
    4b38:	86 17       	cp	r24, r22
    4b3a:	08 f4       	brcc	.+2      	; 0x4b3e <u8g_pb_IsYIntersection+0xc>
    4b3c:	90 e0       	ldi	r25, 0x00	; 0
    4b3e:	31 e0       	ldi	r19, 0x01	; 1
    4b40:	46 17       	cp	r20, r22
    4b42:	08 f0       	brcs	.+2      	; 0x4b46 <u8g_pb_IsYIntersection+0x14>
    4b44:	30 e0       	ldi	r19, 0x00	; 0
    4b46:	83 2f       	mov	r24, r19
    4b48:	89 2b       	or	r24, r25
    4b4a:	21 e0       	ldi	r18, 0x01	; 1
    4b4c:	52 81       	ldd	r21, Z+2	; 0x02
    4b4e:	45 17       	cp	r20, r21
    4b50:	08 f4       	brcc	.+2      	; 0x4b54 <u8g_pb_IsYIntersection+0x22>
    4b52:	20 e0       	ldi	r18, 0x00	; 0
    4b54:	28 23       	and	r18, r24
    4b56:	83 2f       	mov	r24, r19
    4b58:	89 23       	and	r24, r25
    4b5a:	82 2b       	or	r24, r18
    4b5c:	08 95       	ret

00004b5e <u8g_pb_GetPageBox>:

void u8g_pb_GetPageBox(u8g_pb_t *pb, u8g_box_t *box)
{
    4b5e:	dc 01       	movw	r26, r24
    4b60:	fb 01       	movw	r30, r22
  box->x0 = 0;
    4b62:	10 82       	st	Z, r1
  box->y0 = pb->p.page_y0;
    4b64:	12 96       	adiw	r26, 0x02	; 2
    4b66:	8c 91       	ld	r24, X
    4b68:	12 97       	sbiw	r26, 0x02	; 2
    4b6a:	81 83       	std	Z+1, r24	; 0x01
  box->x1 = pb->width;
  box->x1--;
    4b6c:	15 96       	adiw	r26, 0x05	; 5
    4b6e:	8c 91       	ld	r24, X
    4b70:	15 97       	sbiw	r26, 0x05	; 5
    4b72:	81 50       	subi	r24, 0x01	; 1
    4b74:	82 83       	std	Z+2, r24	; 0x02
  box->y1 = pb->p.page_y1;
    4b76:	13 96       	adiw	r26, 0x03	; 3
    4b78:	8c 91       	ld	r24, X
    4b7a:	83 83       	std	Z+3, r24	; 0x03
    4b7c:	08 95       	ret

00004b7e <u8g_pb_Is8PixelVisible>:


uint8_t u8g_pb_Is8PixelVisible(u8g_pb_t *b, u8g_dev_arg_pixel_t *arg_pixel)
{
  u8g_uint_t v0, v1;
  v0 = arg_pixel->y;
    4b7e:	fb 01       	movw	r30, r22
    4b80:	31 81       	ldd	r19, Z+1	; 0x01
  v1 = v0;
  switch( arg_pixel->dir )
    4b82:	23 81       	ldd	r18, Z+3	; 0x03
    4b84:	21 30       	cpi	r18, 0x01	; 1
    4b86:	19 f0       	breq	.+6      	; 0x4b8e <u8g_pb_Is8PixelVisible+0x10>
    4b88:	23 30       	cpi	r18, 0x03	; 3
    4b8a:	21 f0       	breq	.+8      	; 0x4b94 <u8g_pb_Is8PixelVisible+0x16>
    4b8c:	06 c0       	rjmp	.+12     	; 0x4b9a <u8g_pb_Is8PixelVisible+0x1c>
  {
    case 0:
      break;
    case 1:  
      v1 += 8;          /* this is independent from the page height */
    4b8e:	48 e0       	ldi	r20, 0x08	; 8
    4b90:	43 0f       	add	r20, r19
      break;
    4b92:	04 c0       	rjmp	.+8      	; 0x4b9c <u8g_pb_Is8PixelVisible+0x1e>

uint8_t u8g_pb_Is8PixelVisible(u8g_pb_t *b, u8g_dev_arg_pixel_t *arg_pixel)
{
  u8g_uint_t v0, v1;
  v0 = arg_pixel->y;
  v1 = v0;
    4b94:	43 2f       	mov	r20, r19
      v1 += 8;          /* this is independent from the page height */
      break;
    case 2:  
      break;
    case 3: 
      v0 -= 8;
    4b96:	38 50       	subi	r19, 0x08	; 8
      break;
    4b98:	01 c0       	rjmp	.+2      	; 0x4b9c <u8g_pb_Is8PixelVisible+0x1e>

uint8_t u8g_pb_Is8PixelVisible(u8g_pb_t *b, u8g_dev_arg_pixel_t *arg_pixel)
{
  u8g_uint_t v0, v1;
  v0 = arg_pixel->y;
  v1 = v0;
    4b9a:	43 2f       	mov	r20, r19
      break;
    case 3: 
      v0 -= 8;
      break;
  }
  return u8g_pb_IsYIntersection(b, v0, v1);
    4b9c:	63 2f       	mov	r22, r19
    4b9e:	0e 94 99 25 	call	0x4b32	; 0x4b32 <u8g_pb_IsYIntersection>
}
    4ba2:	08 95       	ret

00004ba4 <u8g_pb_WriteBuffer>:



uint8_t u8g_pb_WriteBuffer(u8g_pb_t *b, u8g_t *u8g, u8g_dev_t *dev)
{
    4ba4:	fc 01       	movw	r30, r24
    4ba6:	cb 01       	movw	r24, r22
    4ba8:	ba 01       	movw	r22, r20
  return u8g_WriteSequence(u8g, dev, b->width, b->buf);  
    4baa:	26 81       	ldd	r18, Z+6	; 0x06
    4bac:	37 81       	ldd	r19, Z+7	; 0x07
    4bae:	45 81       	ldd	r20, Z+5	; 0x05
    4bb0:	0e 94 bc 1f 	call	0x3f78	; 0x3f78 <u8g_WriteSequence>
}
    4bb4:	08 95       	ret

00004bb6 <u8g_pb8v1_set_pixel>:
      case 2: arg_pixel->x--; break;
      case 3: arg_pixel->y--; break;
    }
    pixel <<= 1;
  } while( pixel != 0  );
}
    4bb6:	dc 01       	movw	r26, r24
    4bb8:	16 96       	adiw	r26, 0x06	; 6
    4bba:	ed 91       	ld	r30, X+
    4bbc:	fc 91       	ld	r31, X
    4bbe:	17 97       	sbiw	r26, 0x07	; 7
    4bc0:	12 96       	adiw	r26, 0x02	; 2
    4bc2:	8c 91       	ld	r24, X
    4bc4:	48 1b       	sub	r20, r24
    4bc6:	47 70       	andi	r20, 0x07	; 7
    4bc8:	81 e0       	ldi	r24, 0x01	; 1
    4bca:	90 e0       	ldi	r25, 0x00	; 0
    4bcc:	02 c0       	rjmp	.+4      	; 0x4bd2 <u8g_pb8v1_set_pixel+0x1c>
    4bce:	88 0f       	add	r24, r24
    4bd0:	99 1f       	adc	r25, r25
    4bd2:	4a 95       	dec	r20
    4bd4:	e2 f7       	brpl	.-8      	; 0x4bce <u8g_pb8v1_set_pixel+0x18>
    4bd6:	e6 0f       	add	r30, r22
    4bd8:	f1 1d       	adc	r31, r1
    4bda:	22 23       	and	r18, r18
    4bdc:	21 f0       	breq	.+8      	; 0x4be6 <u8g_pb8v1_set_pixel+0x30>
    4bde:	90 81       	ld	r25, Z
    4be0:	89 2b       	or	r24, r25
    4be2:	80 83       	st	Z, r24
    4be4:	08 95       	ret
    4be6:	80 95       	com	r24
    4be8:	90 81       	ld	r25, Z
    4bea:	89 23       	and	r24, r25
    4bec:	80 83       	st	Z, r24
    4bee:	08 95       	ret

00004bf0 <u8g_pb8v1_SetPixel>:
    4bf0:	fb 01       	movw	r30, r22
    4bf2:	41 81       	ldd	r20, Z+1	; 0x01
    4bf4:	fc 01       	movw	r30, r24
    4bf6:	22 81       	ldd	r18, Z+2	; 0x02
    4bf8:	42 17       	cp	r20, r18
    4bfa:	70 f0       	brcs	.+28     	; 0x4c18 <u8g_pb8v1_SetPixel+0x28>
    4bfc:	23 81       	ldd	r18, Z+3	; 0x03
    4bfe:	24 17       	cp	r18, r20
    4c00:	58 f0       	brcs	.+22     	; 0x4c18 <u8g_pb8v1_SetPixel+0x28>
    4c02:	fb 01       	movw	r30, r22
    4c04:	30 81       	ld	r19, Z
    4c06:	fc 01       	movw	r30, r24
    4c08:	25 81       	ldd	r18, Z+5	; 0x05
    4c0a:	32 17       	cp	r19, r18
    4c0c:	28 f4       	brcc	.+10     	; 0x4c18 <u8g_pb8v1_SetPixel+0x28>
    4c0e:	fb 01       	movw	r30, r22
    4c10:	24 81       	ldd	r18, Z+4	; 0x04
    4c12:	63 2f       	mov	r22, r19
    4c14:	0e 94 db 25 	call	0x4bb6	; 0x4bb6 <u8g_pb8v1_set_pixel>
    4c18:	08 95       	ret

00004c1a <u8g_pb8v1_Set8PixelOpt2>:


void u8g_pb8v1_Set8PixelOpt2(u8g_pb_t *b, u8g_dev_arg_pixel_t *arg_pixel)
{
    4c1a:	df 92       	push	r13
    4c1c:	ef 92       	push	r14
    4c1e:	ff 92       	push	r15
    4c20:	0f 93       	push	r16
    4c22:	1f 93       	push	r17
    4c24:	cf 93       	push	r28
    4c26:	df 93       	push	r29
    4c28:	7c 01       	movw	r14, r24
    4c2a:	eb 01       	movw	r28, r22
  register uint8_t pixel = arg_pixel->pixel;
    4c2c:	1a 81       	ldd	r17, Y+2	; 0x02
  u8g_uint_t dx = 0;
  u8g_uint_t dy = 0;
  
  switch( arg_pixel->dir )
    4c2e:	8b 81       	ldd	r24, Y+3	; 0x03
    4c30:	81 30       	cpi	r24, 0x01	; 1
    4c32:	49 f0       	breq	.+18     	; 0x4c46 <u8g_pb8v1_Set8PixelOpt2+0x2c>
    4c34:	28 f0       	brcs	.+10     	; 0x4c40 <u8g_pb8v1_Set8PixelOpt2+0x26>
    4c36:	82 30       	cpi	r24, 0x02	; 2
    4c38:	51 f0       	breq	.+20     	; 0x4c4e <u8g_pb8v1_Set8PixelOpt2+0x34>
    4c3a:	83 30       	cpi	r24, 0x03	; 3
    4c3c:	59 f0       	breq	.+22     	; 0x4c54 <u8g_pb8v1_Set8PixelOpt2+0x3a>
    4c3e:	0e c0       	rjmp	.+28     	; 0x4c5c <u8g_pb8v1_Set8PixelOpt2+0x42>

void u8g_pb8v1_Set8PixelOpt2(u8g_pb_t *b, u8g_dev_arg_pixel_t *arg_pixel)
{
  register uint8_t pixel = arg_pixel->pixel;
  u8g_uint_t dx = 0;
  u8g_uint_t dy = 0;
    4c40:	d1 2c       	mov	r13, r1
  
  switch( arg_pixel->dir )
  {
    case 0: dx++; break;
    4c42:	01 e0       	ldi	r16, 0x01	; 1
    4c44:	0d c0       	rjmp	.+26     	; 0x4c60 <u8g_pb8v1_Set8PixelOpt2+0x46>
    case 1: dy++; break;
    4c46:	dd 24       	eor	r13, r13
    4c48:	d3 94       	inc	r13


void u8g_pb8v1_Set8PixelOpt2(u8g_pb_t *b, u8g_dev_arg_pixel_t *arg_pixel)
{
  register uint8_t pixel = arg_pixel->pixel;
  u8g_uint_t dx = 0;
    4c4a:	00 e0       	ldi	r16, 0x00	; 0
  u8g_uint_t dy = 0;
  
  switch( arg_pixel->dir )
  {
    case 0: dx++; break;
    case 1: dy++; break;
    4c4c:	09 c0       	rjmp	.+18     	; 0x4c60 <u8g_pb8v1_Set8PixelOpt2+0x46>

void u8g_pb8v1_Set8PixelOpt2(u8g_pb_t *b, u8g_dev_arg_pixel_t *arg_pixel)
{
  register uint8_t pixel = arg_pixel->pixel;
  u8g_uint_t dx = 0;
  u8g_uint_t dy = 0;
    4c4e:	d1 2c       	mov	r13, r1
  
  switch( arg_pixel->dir )
  {
    case 0: dx++; break;
    case 1: dy++; break;
    case 2: dx--; break;
    4c50:	0f ef       	ldi	r16, 0xFF	; 255
    4c52:	06 c0       	rjmp	.+12     	; 0x4c60 <u8g_pb8v1_Set8PixelOpt2+0x46>
    case 3: dy--; break;
    4c54:	dd 24       	eor	r13, r13
    4c56:	da 94       	dec	r13


void u8g_pb8v1_Set8PixelOpt2(u8g_pb_t *b, u8g_dev_arg_pixel_t *arg_pixel)
{
  register uint8_t pixel = arg_pixel->pixel;
  u8g_uint_t dx = 0;
    4c58:	00 e0       	ldi	r16, 0x00	; 0
  switch( arg_pixel->dir )
  {
    case 0: dx++; break;
    case 1: dy++; break;
    case 2: dx--; break;
    case 3: dy--; break;
    4c5a:	02 c0       	rjmp	.+4      	; 0x4c60 <u8g_pb8v1_Set8PixelOpt2+0x46>

void u8g_pb8v1_Set8PixelOpt2(u8g_pb_t *b, u8g_dev_arg_pixel_t *arg_pixel)
{
  register uint8_t pixel = arg_pixel->pixel;
  u8g_uint_t dx = 0;
  u8g_uint_t dy = 0;
    4c5c:	d1 2c       	mov	r13, r1


void u8g_pb8v1_Set8PixelOpt2(u8g_pb_t *b, u8g_dev_arg_pixel_t *arg_pixel)
{
  register uint8_t pixel = arg_pixel->pixel;
  u8g_uint_t dx = 0;
    4c5e:	00 e0       	ldi	r16, 0x00	; 0
    case 3: dy--; break;
  }
  
  do
  {
    if ( pixel & 128 )
    4c60:	11 23       	and	r17, r17
    4c62:	24 f4       	brge	.+8      	; 0x4c6c <u8g_pb8v1_Set8PixelOpt2+0x52>
      u8g_pb8v1_SetPixel(b, arg_pixel);
    4c64:	be 01       	movw	r22, r28
    4c66:	c7 01       	movw	r24, r14
    4c68:	0e 94 f8 25 	call	0x4bf0	; 0x4bf0 <u8g_pb8v1_SetPixel>
    arg_pixel->x += dx;
    4c6c:	98 81       	ld	r25, Y
    4c6e:	90 0f       	add	r25, r16
    4c70:	98 83       	st	Y, r25
    arg_pixel->y += dy;
    4c72:	99 81       	ldd	r25, Y+1	; 0x01
    4c74:	9d 0d       	add	r25, r13
    4c76:	99 83       	std	Y+1, r25	; 0x01
    pixel <<= 1;
    4c78:	11 0f       	add	r17, r17
  } while( pixel != 0  );
    4c7a:	91 f7       	brne	.-28     	; 0x4c60 <u8g_pb8v1_Set8PixelOpt2+0x46>
  
}
    4c7c:	df 91       	pop	r29
    4c7e:	cf 91       	pop	r28
    4c80:	1f 91       	pop	r17
    4c82:	0f 91       	pop	r16
    4c84:	ff 90       	pop	r15
    4c86:	ef 90       	pop	r14
    4c88:	df 90       	pop	r13
    4c8a:	08 95       	ret

00004c8c <u8g_dev_pb8v1_base_fn>:

uint8_t u8g_dev_pb8v1_base_fn(u8g_t *u8g, u8g_dev_t *dev, uint8_t msg, void *arg)
{
    4c8c:	0f 93       	push	r16
    4c8e:	1f 93       	push	r17
    4c90:	cf 93       	push	r28
    4c92:	df 93       	push	r29
  u8g_pb_t *pb = (u8g_pb_t *)(dev->dev_mem);
    4c94:	fb 01       	movw	r30, r22
    4c96:	c2 81       	ldd	r28, Z+2	; 0x02
    4c98:	d3 81       	ldd	r29, Z+3	; 0x03
  switch(msg)
    4c9a:	50 e0       	ldi	r21, 0x00	; 0
    4c9c:	fa 01       	movw	r30, r20
    4c9e:	74 97       	sbiw	r30, 0x14	; 20
    4ca0:	e4 33       	cpi	r30, 0x34	; 52
    4ca2:	f1 05       	cpc	r31, r1
    4ca4:	c8 f5       	brcc	.+114    	; 0x4d18 <u8g_dev_pb8v1_base_fn+0x8c>
    4ca6:	89 01       	movw	r16, r18
    4ca8:	e3 5a       	subi	r30, 0xA3	; 163
    4caa:	ff 4f       	sbci	r31, 0xFF	; 255
    4cac:	0c 94 58 2a 	jmp	0x54b0	; 0x54b0 <__tablejump2__>
  {
    case U8G_DEV_MSG_SET_8PIXEL:
      if ( u8g_pb_Is8PixelVisible(pb, (u8g_dev_arg_pixel_t *)arg) )
    4cb0:	b9 01       	movw	r22, r18
    4cb2:	ce 01       	movw	r24, r28
    4cb4:	0e 94 bf 25 	call	0x4b7e	; 0x4b7e <u8g_pb_Is8PixelVisible>
    4cb8:	88 23       	and	r24, r24
    4cba:	81 f1       	breq	.+96     	; 0x4d1c <u8g_dev_pb8v1_base_fn+0x90>
        u8g_pb8v1_Set8PixelOpt2(pb, (u8g_dev_arg_pixel_t *)arg);
    4cbc:	b8 01       	movw	r22, r16
    4cbe:	ce 01       	movw	r24, r28
    4cc0:	0e 94 0d 26 	call	0x4c1a	; 0x4c1a <u8g_pb8v1_Set8PixelOpt2>
    case U8G_DEV_MSG_SET_XY_CB:
      break;
    case U8G_DEV_MSG_GET_MODE:
      return U8G_MODE_BW;
  }
  return 1;
    4cc4:	81 e0       	ldi	r24, 0x01	; 1
    4cc6:	2b c0       	rjmp	.+86     	; 0x4d1e <u8g_dev_pb8v1_base_fn+0x92>
    case U8G_DEV_MSG_SET_8PIXEL:
      if ( u8g_pb_Is8PixelVisible(pb, (u8g_dev_arg_pixel_t *)arg) )
        u8g_pb8v1_Set8PixelOpt2(pb, (u8g_dev_arg_pixel_t *)arg);
      break;
    case U8G_DEV_MSG_SET_PIXEL:
        u8g_pb8v1_SetPixel(pb, (u8g_dev_arg_pixel_t *)arg);
    4cc8:	b9 01       	movw	r22, r18
    4cca:	ce 01       	movw	r24, r28
    4ccc:	0e 94 f8 25 	call	0x4bf0	; 0x4bf0 <u8g_pb8v1_SetPixel>
    case U8G_DEV_MSG_SET_XY_CB:
      break;
    case U8G_DEV_MSG_GET_MODE:
      return U8G_MODE_BW;
  }
  return 1;
    4cd0:	81 e0       	ldi	r24, 0x01	; 1
      if ( u8g_pb_Is8PixelVisible(pb, (u8g_dev_arg_pixel_t *)arg) )
        u8g_pb8v1_Set8PixelOpt2(pb, (u8g_dev_arg_pixel_t *)arg);
      break;
    case U8G_DEV_MSG_SET_PIXEL:
        u8g_pb8v1_SetPixel(pb, (u8g_dev_arg_pixel_t *)arg);
      break;
    4cd2:	25 c0       	rjmp	.+74     	; 0x4d1e <u8g_dev_pb8v1_base_fn+0x92>
    case U8G_DEV_MSG_INIT:
      break;
    case U8G_DEV_MSG_STOP:
      break;
    case U8G_DEV_MSG_PAGE_FIRST:
      u8g_pb_Clear(pb);
    4cd4:	ce 01       	movw	r24, r28
    4cd6:	0e 94 89 25 	call	0x4b12	; 0x4b12 <u8g_pb_Clear>
      u8g_page_First(&(pb->p));
    4cda:	ce 01       	movw	r24, r28
    4cdc:	0e 94 6c 25 	call	0x4ad8	; 0x4ad8 <u8g_page_First>
    case U8G_DEV_MSG_SET_XY_CB:
      break;
    case U8G_DEV_MSG_GET_MODE:
      return U8G_MODE_BW;
  }
  return 1;
    4ce0:	81 e0       	ldi	r24, 0x01	; 1
    case U8G_DEV_MSG_STOP:
      break;
    case U8G_DEV_MSG_PAGE_FIRST:
      u8g_pb_Clear(pb);
      u8g_page_First(&(pb->p));
      break;
    4ce2:	1d c0       	rjmp	.+58     	; 0x4d1e <u8g_dev_pb8v1_base_fn+0x92>
    case U8G_DEV_MSG_PAGE_NEXT:
      if ( u8g_page_Next(&(pb->p)) == 0 )
    4ce4:	ce 01       	movw	r24, r28
    4ce6:	0e 94 73 25 	call	0x4ae6	; 0x4ae6 <u8g_page_Next>
    4cea:	88 23       	and	r24, r24
    4cec:	c1 f0       	breq	.+48     	; 0x4d1e <u8g_dev_pb8v1_base_fn+0x92>
        return 0;
      u8g_pb_Clear(pb);
    4cee:	ce 01       	movw	r24, r28
    4cf0:	0e 94 89 25 	call	0x4b12	; 0x4b12 <u8g_pb_Clear>
    case U8G_DEV_MSG_SET_XY_CB:
      break;
    case U8G_DEV_MSG_GET_MODE:
      return U8G_MODE_BW;
  }
  return 1;
    4cf4:	81 e0       	ldi	r24, 0x01	; 1
      break;
    case U8G_DEV_MSG_PAGE_NEXT:
      if ( u8g_page_Next(&(pb->p)) == 0 )
        return 0;
      u8g_pb_Clear(pb);
      break;
    4cf6:	13 c0       	rjmp	.+38     	; 0x4d1e <u8g_dev_pb8v1_base_fn+0x92>
#ifdef U8G_DEV_MSG_IS_BBX_INTERSECTION
    case U8G_DEV_MSG_IS_BBX_INTERSECTION:
      return u8g_pb_IsIntersection(pb, (u8g_dev_arg_bbx_t *)arg);
#endif
    case U8G_DEV_MSG_GET_PAGE_BOX:
      u8g_pb_GetPageBox(pb, (u8g_box_t *)arg);
    4cf8:	b9 01       	movw	r22, r18
    4cfa:	ce 01       	movw	r24, r28
    4cfc:	0e 94 af 25 	call	0x4b5e	; 0x4b5e <u8g_pb_GetPageBox>
    case U8G_DEV_MSG_SET_XY_CB:
      break;
    case U8G_DEV_MSG_GET_MODE:
      return U8G_MODE_BW;
  }
  return 1;
    4d00:	81 e0       	ldi	r24, 0x01	; 1
    case U8G_DEV_MSG_IS_BBX_INTERSECTION:
      return u8g_pb_IsIntersection(pb, (u8g_dev_arg_bbx_t *)arg);
#endif
    case U8G_DEV_MSG_GET_PAGE_BOX:
      u8g_pb_GetPageBox(pb, (u8g_box_t *)arg);
      break;
    4d02:	0d c0       	rjmp	.+26     	; 0x4d1e <u8g_dev_pb8v1_base_fn+0x92>
    case U8G_DEV_MSG_GET_WIDTH:
      *((u8g_uint_t *)arg) = pb->width;
    4d04:	8d 81       	ldd	r24, Y+5	; 0x05
    4d06:	f9 01       	movw	r30, r18
    4d08:	80 83       	st	Z, r24
    case U8G_DEV_MSG_SET_XY_CB:
      break;
    case U8G_DEV_MSG_GET_MODE:
      return U8G_MODE_BW;
  }
  return 1;
    4d0a:	81 e0       	ldi	r24, 0x01	; 1
    case U8G_DEV_MSG_GET_PAGE_BOX:
      u8g_pb_GetPageBox(pb, (u8g_box_t *)arg);
      break;
    case U8G_DEV_MSG_GET_WIDTH:
      *((u8g_uint_t *)arg) = pb->width;
      break;
    4d0c:	08 c0       	rjmp	.+16     	; 0x4d1e <u8g_dev_pb8v1_base_fn+0x92>
    case U8G_DEV_MSG_GET_HEIGHT:
      *((u8g_uint_t *)arg) = pb->p.total_height;
    4d0e:	89 81       	ldd	r24, Y+1	; 0x01
    4d10:	f9 01       	movw	r30, r18
    4d12:	80 83       	st	Z, r24
    case U8G_DEV_MSG_SET_XY_CB:
      break;
    case U8G_DEV_MSG_GET_MODE:
      return U8G_MODE_BW;
  }
  return 1;
    4d14:	81 e0       	ldi	r24, 0x01	; 1
    case U8G_DEV_MSG_GET_WIDTH:
      *((u8g_uint_t *)arg) = pb->width;
      break;
    case U8G_DEV_MSG_GET_HEIGHT:
      *((u8g_uint_t *)arg) = pb->p.total_height;
      break;
    4d16:	03 c0       	rjmp	.+6      	; 0x4d1e <u8g_dev_pb8v1_base_fn+0x92>
    case U8G_DEV_MSG_SET_COLOR_ENTRY:
      break;
    case U8G_DEV_MSG_SET_XY_CB:
      break;
    case U8G_DEV_MSG_GET_MODE:
      return U8G_MODE_BW;
    4d18:	81 e0       	ldi	r24, 0x01	; 1
    4d1a:	01 c0       	rjmp	.+2      	; 0x4d1e <u8g_dev_pb8v1_base_fn+0x92>
  }
  return 1;
    4d1c:	81 e0       	ldi	r24, 0x01	; 1
}
    4d1e:	df 91       	pop	r29
    4d20:	cf 91       	pop	r28
    4d22:	1f 91       	pop	r17
    4d24:	0f 91       	pop	r16
    4d26:	08 95       	ret

00004d28 <u8g_state_dummy_cb>:

#include <stddef.h>
#include "u8g.h"

void u8g_state_dummy_cb(uint8_t msg)
{
    4d28:	08 95       	ret

00004d2a <__subsf3>:
    4d2a:	50 58       	subi	r21, 0x80	; 128

00004d2c <__addsf3>:
    4d2c:	bb 27       	eor	r27, r27
    4d2e:	aa 27       	eor	r26, r26
    4d30:	0e 94 ad 26 	call	0x4d5a	; 0x4d5a <__addsf3x>
    4d34:	0c 94 27 28 	jmp	0x504e	; 0x504e <__fp_round>
    4d38:	0e 94 19 28 	call	0x5032	; 0x5032 <__fp_pscA>
    4d3c:	38 f0       	brcs	.+14     	; 0x4d4c <__addsf3+0x20>
    4d3e:	0e 94 20 28 	call	0x5040	; 0x5040 <__fp_pscB>
    4d42:	20 f0       	brcs	.+8      	; 0x4d4c <__addsf3+0x20>
    4d44:	39 f4       	brne	.+14     	; 0x4d54 <__addsf3+0x28>
    4d46:	9f 3f       	cpi	r25, 0xFF	; 255
    4d48:	19 f4       	brne	.+6      	; 0x4d50 <__addsf3+0x24>
    4d4a:	26 f4       	brtc	.+8      	; 0x4d54 <__addsf3+0x28>
    4d4c:	0c 94 16 28 	jmp	0x502c	; 0x502c <__fp_nan>
    4d50:	0e f4       	brtc	.+2      	; 0x4d54 <__addsf3+0x28>
    4d52:	e0 95       	com	r30
    4d54:	e7 fb       	bst	r30, 7
    4d56:	0c 94 10 28 	jmp	0x5020	; 0x5020 <__fp_inf>

00004d5a <__addsf3x>:
    4d5a:	e9 2f       	mov	r30, r25
    4d5c:	0e 94 38 28 	call	0x5070	; 0x5070 <__fp_split3>
    4d60:	58 f3       	brcs	.-42     	; 0x4d38 <__addsf3+0xc>
    4d62:	ba 17       	cp	r27, r26
    4d64:	62 07       	cpc	r22, r18
    4d66:	73 07       	cpc	r23, r19
    4d68:	84 07       	cpc	r24, r20
    4d6a:	95 07       	cpc	r25, r21
    4d6c:	20 f0       	brcs	.+8      	; 0x4d76 <__addsf3x+0x1c>
    4d6e:	79 f4       	brne	.+30     	; 0x4d8e <__addsf3x+0x34>
    4d70:	a6 f5       	brtc	.+104    	; 0x4dda <__addsf3x+0x80>
    4d72:	0c 94 5a 28 	jmp	0x50b4	; 0x50b4 <__fp_zero>
    4d76:	0e f4       	brtc	.+2      	; 0x4d7a <__addsf3x+0x20>
    4d78:	e0 95       	com	r30
    4d7a:	0b 2e       	mov	r0, r27
    4d7c:	ba 2f       	mov	r27, r26
    4d7e:	a0 2d       	mov	r26, r0
    4d80:	0b 01       	movw	r0, r22
    4d82:	b9 01       	movw	r22, r18
    4d84:	90 01       	movw	r18, r0
    4d86:	0c 01       	movw	r0, r24
    4d88:	ca 01       	movw	r24, r20
    4d8a:	a0 01       	movw	r20, r0
    4d8c:	11 24       	eor	r1, r1
    4d8e:	ff 27       	eor	r31, r31
    4d90:	59 1b       	sub	r21, r25
    4d92:	99 f0       	breq	.+38     	; 0x4dba <__addsf3x+0x60>
    4d94:	59 3f       	cpi	r21, 0xF9	; 249
    4d96:	50 f4       	brcc	.+20     	; 0x4dac <__addsf3x+0x52>
    4d98:	50 3e       	cpi	r21, 0xE0	; 224
    4d9a:	68 f1       	brcs	.+90     	; 0x4df6 <__addsf3x+0x9c>
    4d9c:	1a 16       	cp	r1, r26
    4d9e:	f0 40       	sbci	r31, 0x00	; 0
    4da0:	a2 2f       	mov	r26, r18
    4da2:	23 2f       	mov	r18, r19
    4da4:	34 2f       	mov	r19, r20
    4da6:	44 27       	eor	r20, r20
    4da8:	58 5f       	subi	r21, 0xF8	; 248
    4daa:	f3 cf       	rjmp	.-26     	; 0x4d92 <__addsf3x+0x38>
    4dac:	46 95       	lsr	r20
    4dae:	37 95       	ror	r19
    4db0:	27 95       	ror	r18
    4db2:	a7 95       	ror	r26
    4db4:	f0 40       	sbci	r31, 0x00	; 0
    4db6:	53 95       	inc	r21
    4db8:	c9 f7       	brne	.-14     	; 0x4dac <__addsf3x+0x52>
    4dba:	7e f4       	brtc	.+30     	; 0x4dda <__addsf3x+0x80>
    4dbc:	1f 16       	cp	r1, r31
    4dbe:	ba 0b       	sbc	r27, r26
    4dc0:	62 0b       	sbc	r22, r18
    4dc2:	73 0b       	sbc	r23, r19
    4dc4:	84 0b       	sbc	r24, r20
    4dc6:	ba f0       	brmi	.+46     	; 0x4df6 <__addsf3x+0x9c>
    4dc8:	91 50       	subi	r25, 0x01	; 1
    4dca:	a1 f0       	breq	.+40     	; 0x4df4 <__addsf3x+0x9a>
    4dcc:	ff 0f       	add	r31, r31
    4dce:	bb 1f       	adc	r27, r27
    4dd0:	66 1f       	adc	r22, r22
    4dd2:	77 1f       	adc	r23, r23
    4dd4:	88 1f       	adc	r24, r24
    4dd6:	c2 f7       	brpl	.-16     	; 0x4dc8 <__addsf3x+0x6e>
    4dd8:	0e c0       	rjmp	.+28     	; 0x4df6 <__addsf3x+0x9c>
    4dda:	ba 0f       	add	r27, r26
    4ddc:	62 1f       	adc	r22, r18
    4dde:	73 1f       	adc	r23, r19
    4de0:	84 1f       	adc	r24, r20
    4de2:	48 f4       	brcc	.+18     	; 0x4df6 <__addsf3x+0x9c>
    4de4:	87 95       	ror	r24
    4de6:	77 95       	ror	r23
    4de8:	67 95       	ror	r22
    4dea:	b7 95       	ror	r27
    4dec:	f7 95       	ror	r31
    4dee:	9e 3f       	cpi	r25, 0xFE	; 254
    4df0:	08 f0       	brcs	.+2      	; 0x4df4 <__addsf3x+0x9a>
    4df2:	b0 cf       	rjmp	.-160    	; 0x4d54 <__addsf3+0x28>
    4df4:	93 95       	inc	r25
    4df6:	88 0f       	add	r24, r24
    4df8:	08 f0       	brcs	.+2      	; 0x4dfc <__addsf3x+0xa2>
    4dfa:	99 27       	eor	r25, r25
    4dfc:	ee 0f       	add	r30, r30
    4dfe:	97 95       	ror	r25
    4e00:	87 95       	ror	r24
    4e02:	08 95       	ret

00004e04 <__cmpsf2>:
    4e04:	0e 94 ec 27 	call	0x4fd8	; 0x4fd8 <__fp_cmp>
    4e08:	08 f4       	brcc	.+2      	; 0x4e0c <__cmpsf2+0x8>
    4e0a:	81 e0       	ldi	r24, 0x01	; 1
    4e0c:	08 95       	ret

00004e0e <__divsf3>:
    4e0e:	0e 94 1b 27 	call	0x4e36	; 0x4e36 <__divsf3x>
    4e12:	0c 94 27 28 	jmp	0x504e	; 0x504e <__fp_round>
    4e16:	0e 94 20 28 	call	0x5040	; 0x5040 <__fp_pscB>
    4e1a:	58 f0       	brcs	.+22     	; 0x4e32 <__divsf3+0x24>
    4e1c:	0e 94 19 28 	call	0x5032	; 0x5032 <__fp_pscA>
    4e20:	40 f0       	brcs	.+16     	; 0x4e32 <__divsf3+0x24>
    4e22:	29 f4       	brne	.+10     	; 0x4e2e <__divsf3+0x20>
    4e24:	5f 3f       	cpi	r21, 0xFF	; 255
    4e26:	29 f0       	breq	.+10     	; 0x4e32 <__divsf3+0x24>
    4e28:	0c 94 10 28 	jmp	0x5020	; 0x5020 <__fp_inf>
    4e2c:	51 11       	cpse	r21, r1
    4e2e:	0c 94 5b 28 	jmp	0x50b6	; 0x50b6 <__fp_szero>
    4e32:	0c 94 16 28 	jmp	0x502c	; 0x502c <__fp_nan>

00004e36 <__divsf3x>:
    4e36:	0e 94 38 28 	call	0x5070	; 0x5070 <__fp_split3>
    4e3a:	68 f3       	brcs	.-38     	; 0x4e16 <__divsf3+0x8>

00004e3c <__divsf3_pse>:
    4e3c:	99 23       	and	r25, r25
    4e3e:	b1 f3       	breq	.-20     	; 0x4e2c <__divsf3+0x1e>
    4e40:	55 23       	and	r21, r21
    4e42:	91 f3       	breq	.-28     	; 0x4e28 <__divsf3+0x1a>
    4e44:	95 1b       	sub	r25, r21
    4e46:	55 0b       	sbc	r21, r21
    4e48:	bb 27       	eor	r27, r27
    4e4a:	aa 27       	eor	r26, r26
    4e4c:	62 17       	cp	r22, r18
    4e4e:	73 07       	cpc	r23, r19
    4e50:	84 07       	cpc	r24, r20
    4e52:	38 f0       	brcs	.+14     	; 0x4e62 <__divsf3_pse+0x26>
    4e54:	9f 5f       	subi	r25, 0xFF	; 255
    4e56:	5f 4f       	sbci	r21, 0xFF	; 255
    4e58:	22 0f       	add	r18, r18
    4e5a:	33 1f       	adc	r19, r19
    4e5c:	44 1f       	adc	r20, r20
    4e5e:	aa 1f       	adc	r26, r26
    4e60:	a9 f3       	breq	.-22     	; 0x4e4c <__divsf3_pse+0x10>
    4e62:	35 d0       	rcall	.+106    	; 0x4ece <__divsf3_pse+0x92>
    4e64:	0e 2e       	mov	r0, r30
    4e66:	3a f0       	brmi	.+14     	; 0x4e76 <__divsf3_pse+0x3a>
    4e68:	e0 e8       	ldi	r30, 0x80	; 128
    4e6a:	32 d0       	rcall	.+100    	; 0x4ed0 <__divsf3_pse+0x94>
    4e6c:	91 50       	subi	r25, 0x01	; 1
    4e6e:	50 40       	sbci	r21, 0x00	; 0
    4e70:	e6 95       	lsr	r30
    4e72:	00 1c       	adc	r0, r0
    4e74:	ca f7       	brpl	.-14     	; 0x4e68 <__divsf3_pse+0x2c>
    4e76:	2b d0       	rcall	.+86     	; 0x4ece <__divsf3_pse+0x92>
    4e78:	fe 2f       	mov	r31, r30
    4e7a:	29 d0       	rcall	.+82     	; 0x4ece <__divsf3_pse+0x92>
    4e7c:	66 0f       	add	r22, r22
    4e7e:	77 1f       	adc	r23, r23
    4e80:	88 1f       	adc	r24, r24
    4e82:	bb 1f       	adc	r27, r27
    4e84:	26 17       	cp	r18, r22
    4e86:	37 07       	cpc	r19, r23
    4e88:	48 07       	cpc	r20, r24
    4e8a:	ab 07       	cpc	r26, r27
    4e8c:	b0 e8       	ldi	r27, 0x80	; 128
    4e8e:	09 f0       	breq	.+2      	; 0x4e92 <__divsf3_pse+0x56>
    4e90:	bb 0b       	sbc	r27, r27
    4e92:	80 2d       	mov	r24, r0
    4e94:	bf 01       	movw	r22, r30
    4e96:	ff 27       	eor	r31, r31
    4e98:	93 58       	subi	r25, 0x83	; 131
    4e9a:	5f 4f       	sbci	r21, 0xFF	; 255
    4e9c:	3a f0       	brmi	.+14     	; 0x4eac <__divsf3_pse+0x70>
    4e9e:	9e 3f       	cpi	r25, 0xFE	; 254
    4ea0:	51 05       	cpc	r21, r1
    4ea2:	78 f0       	brcs	.+30     	; 0x4ec2 <__divsf3_pse+0x86>
    4ea4:	0c 94 10 28 	jmp	0x5020	; 0x5020 <__fp_inf>
    4ea8:	0c 94 5b 28 	jmp	0x50b6	; 0x50b6 <__fp_szero>
    4eac:	5f 3f       	cpi	r21, 0xFF	; 255
    4eae:	e4 f3       	brlt	.-8      	; 0x4ea8 <__divsf3_pse+0x6c>
    4eb0:	98 3e       	cpi	r25, 0xE8	; 232
    4eb2:	d4 f3       	brlt	.-12     	; 0x4ea8 <__divsf3_pse+0x6c>
    4eb4:	86 95       	lsr	r24
    4eb6:	77 95       	ror	r23
    4eb8:	67 95       	ror	r22
    4eba:	b7 95       	ror	r27
    4ebc:	f7 95       	ror	r31
    4ebe:	9f 5f       	subi	r25, 0xFF	; 255
    4ec0:	c9 f7       	brne	.-14     	; 0x4eb4 <__divsf3_pse+0x78>
    4ec2:	88 0f       	add	r24, r24
    4ec4:	91 1d       	adc	r25, r1
    4ec6:	96 95       	lsr	r25
    4ec8:	87 95       	ror	r24
    4eca:	97 f9       	bld	r25, 7
    4ecc:	08 95       	ret
    4ece:	e1 e0       	ldi	r30, 0x01	; 1
    4ed0:	66 0f       	add	r22, r22
    4ed2:	77 1f       	adc	r23, r23
    4ed4:	88 1f       	adc	r24, r24
    4ed6:	bb 1f       	adc	r27, r27
    4ed8:	62 17       	cp	r22, r18
    4eda:	73 07       	cpc	r23, r19
    4edc:	84 07       	cpc	r24, r20
    4ede:	ba 07       	cpc	r27, r26
    4ee0:	20 f0       	brcs	.+8      	; 0x4eea <__divsf3_pse+0xae>
    4ee2:	62 1b       	sub	r22, r18
    4ee4:	73 0b       	sbc	r23, r19
    4ee6:	84 0b       	sbc	r24, r20
    4ee8:	ba 0b       	sbc	r27, r26
    4eea:	ee 1f       	adc	r30, r30
    4eec:	88 f7       	brcc	.-30     	; 0x4ed0 <__divsf3_pse+0x94>
    4eee:	e0 95       	com	r30
    4ef0:	08 95       	ret

00004ef2 <__fixsfsi>:
    4ef2:	0e 94 80 27 	call	0x4f00	; 0x4f00 <__fixunssfsi>
    4ef6:	68 94       	set
    4ef8:	b1 11       	cpse	r27, r1
    4efa:	0c 94 5b 28 	jmp	0x50b6	; 0x50b6 <__fp_szero>
    4efe:	08 95       	ret

00004f00 <__fixunssfsi>:
    4f00:	0e 94 40 28 	call	0x5080	; 0x5080 <__fp_splitA>
    4f04:	88 f0       	brcs	.+34     	; 0x4f28 <__fixunssfsi+0x28>
    4f06:	9f 57       	subi	r25, 0x7F	; 127
    4f08:	98 f0       	brcs	.+38     	; 0x4f30 <__fixunssfsi+0x30>
    4f0a:	b9 2f       	mov	r27, r25
    4f0c:	99 27       	eor	r25, r25
    4f0e:	b7 51       	subi	r27, 0x17	; 23
    4f10:	b0 f0       	brcs	.+44     	; 0x4f3e <__fixunssfsi+0x3e>
    4f12:	e1 f0       	breq	.+56     	; 0x4f4c <__fixunssfsi+0x4c>
    4f14:	66 0f       	add	r22, r22
    4f16:	77 1f       	adc	r23, r23
    4f18:	88 1f       	adc	r24, r24
    4f1a:	99 1f       	adc	r25, r25
    4f1c:	1a f0       	brmi	.+6      	; 0x4f24 <__fixunssfsi+0x24>
    4f1e:	ba 95       	dec	r27
    4f20:	c9 f7       	brne	.-14     	; 0x4f14 <__fixunssfsi+0x14>
    4f22:	14 c0       	rjmp	.+40     	; 0x4f4c <__fixunssfsi+0x4c>
    4f24:	b1 30       	cpi	r27, 0x01	; 1
    4f26:	91 f0       	breq	.+36     	; 0x4f4c <__fixunssfsi+0x4c>
    4f28:	0e 94 5a 28 	call	0x50b4	; 0x50b4 <__fp_zero>
    4f2c:	b1 e0       	ldi	r27, 0x01	; 1
    4f2e:	08 95       	ret
    4f30:	0c 94 5a 28 	jmp	0x50b4	; 0x50b4 <__fp_zero>
    4f34:	67 2f       	mov	r22, r23
    4f36:	78 2f       	mov	r23, r24
    4f38:	88 27       	eor	r24, r24
    4f3a:	b8 5f       	subi	r27, 0xF8	; 248
    4f3c:	39 f0       	breq	.+14     	; 0x4f4c <__fixunssfsi+0x4c>
    4f3e:	b9 3f       	cpi	r27, 0xF9	; 249
    4f40:	cc f3       	brlt	.-14     	; 0x4f34 <__fixunssfsi+0x34>
    4f42:	86 95       	lsr	r24
    4f44:	77 95       	ror	r23
    4f46:	67 95       	ror	r22
    4f48:	b3 95       	inc	r27
    4f4a:	d9 f7       	brne	.-10     	; 0x4f42 <__fixunssfsi+0x42>
    4f4c:	3e f4       	brtc	.+14     	; 0x4f5c <__fixunssfsi+0x5c>
    4f4e:	90 95       	com	r25
    4f50:	80 95       	com	r24
    4f52:	70 95       	com	r23
    4f54:	61 95       	neg	r22
    4f56:	7f 4f       	sbci	r23, 0xFF	; 255
    4f58:	8f 4f       	sbci	r24, 0xFF	; 255
    4f5a:	9f 4f       	sbci	r25, 0xFF	; 255
    4f5c:	08 95       	ret

00004f5e <__floatunsisf>:
    4f5e:	e8 94       	clt
    4f60:	09 c0       	rjmp	.+18     	; 0x4f74 <__floatsisf+0x12>

00004f62 <__floatsisf>:
    4f62:	97 fb       	bst	r25, 7
    4f64:	3e f4       	brtc	.+14     	; 0x4f74 <__floatsisf+0x12>
    4f66:	90 95       	com	r25
    4f68:	80 95       	com	r24
    4f6a:	70 95       	com	r23
    4f6c:	61 95       	neg	r22
    4f6e:	7f 4f       	sbci	r23, 0xFF	; 255
    4f70:	8f 4f       	sbci	r24, 0xFF	; 255
    4f72:	9f 4f       	sbci	r25, 0xFF	; 255
    4f74:	99 23       	and	r25, r25
    4f76:	a9 f0       	breq	.+42     	; 0x4fa2 <__floatsisf+0x40>
    4f78:	f9 2f       	mov	r31, r25
    4f7a:	96 e9       	ldi	r25, 0x96	; 150
    4f7c:	bb 27       	eor	r27, r27
    4f7e:	93 95       	inc	r25
    4f80:	f6 95       	lsr	r31
    4f82:	87 95       	ror	r24
    4f84:	77 95       	ror	r23
    4f86:	67 95       	ror	r22
    4f88:	b7 95       	ror	r27
    4f8a:	f1 11       	cpse	r31, r1
    4f8c:	f8 cf       	rjmp	.-16     	; 0x4f7e <__floatsisf+0x1c>
    4f8e:	fa f4       	brpl	.+62     	; 0x4fce <__floatsisf+0x6c>
    4f90:	bb 0f       	add	r27, r27
    4f92:	11 f4       	brne	.+4      	; 0x4f98 <__floatsisf+0x36>
    4f94:	60 ff       	sbrs	r22, 0
    4f96:	1b c0       	rjmp	.+54     	; 0x4fce <__floatsisf+0x6c>
    4f98:	6f 5f       	subi	r22, 0xFF	; 255
    4f9a:	7f 4f       	sbci	r23, 0xFF	; 255
    4f9c:	8f 4f       	sbci	r24, 0xFF	; 255
    4f9e:	9f 4f       	sbci	r25, 0xFF	; 255
    4fa0:	16 c0       	rjmp	.+44     	; 0x4fce <__floatsisf+0x6c>
    4fa2:	88 23       	and	r24, r24
    4fa4:	11 f0       	breq	.+4      	; 0x4faa <__floatsisf+0x48>
    4fa6:	96 e9       	ldi	r25, 0x96	; 150
    4fa8:	11 c0       	rjmp	.+34     	; 0x4fcc <__floatsisf+0x6a>
    4faa:	77 23       	and	r23, r23
    4fac:	21 f0       	breq	.+8      	; 0x4fb6 <__floatsisf+0x54>
    4fae:	9e e8       	ldi	r25, 0x8E	; 142
    4fb0:	87 2f       	mov	r24, r23
    4fb2:	76 2f       	mov	r23, r22
    4fb4:	05 c0       	rjmp	.+10     	; 0x4fc0 <__floatsisf+0x5e>
    4fb6:	66 23       	and	r22, r22
    4fb8:	71 f0       	breq	.+28     	; 0x4fd6 <__floatsisf+0x74>
    4fba:	96 e8       	ldi	r25, 0x86	; 134
    4fbc:	86 2f       	mov	r24, r22
    4fbe:	70 e0       	ldi	r23, 0x00	; 0
    4fc0:	60 e0       	ldi	r22, 0x00	; 0
    4fc2:	2a f0       	brmi	.+10     	; 0x4fce <__floatsisf+0x6c>
    4fc4:	9a 95       	dec	r25
    4fc6:	66 0f       	add	r22, r22
    4fc8:	77 1f       	adc	r23, r23
    4fca:	88 1f       	adc	r24, r24
    4fcc:	da f7       	brpl	.-10     	; 0x4fc4 <__floatsisf+0x62>
    4fce:	88 0f       	add	r24, r24
    4fd0:	96 95       	lsr	r25
    4fd2:	87 95       	ror	r24
    4fd4:	97 f9       	bld	r25, 7
    4fd6:	08 95       	ret

00004fd8 <__fp_cmp>:
    4fd8:	99 0f       	add	r25, r25
    4fda:	00 08       	sbc	r0, r0
    4fdc:	55 0f       	add	r21, r21
    4fde:	aa 0b       	sbc	r26, r26
    4fe0:	e0 e8       	ldi	r30, 0x80	; 128
    4fe2:	fe ef       	ldi	r31, 0xFE	; 254
    4fe4:	16 16       	cp	r1, r22
    4fe6:	17 06       	cpc	r1, r23
    4fe8:	e8 07       	cpc	r30, r24
    4fea:	f9 07       	cpc	r31, r25
    4fec:	c0 f0       	brcs	.+48     	; 0x501e <__fp_cmp+0x46>
    4fee:	12 16       	cp	r1, r18
    4ff0:	13 06       	cpc	r1, r19
    4ff2:	e4 07       	cpc	r30, r20
    4ff4:	f5 07       	cpc	r31, r21
    4ff6:	98 f0       	brcs	.+38     	; 0x501e <__fp_cmp+0x46>
    4ff8:	62 1b       	sub	r22, r18
    4ffa:	73 0b       	sbc	r23, r19
    4ffc:	84 0b       	sbc	r24, r20
    4ffe:	95 0b       	sbc	r25, r21
    5000:	39 f4       	brne	.+14     	; 0x5010 <__fp_cmp+0x38>
    5002:	0a 26       	eor	r0, r26
    5004:	61 f0       	breq	.+24     	; 0x501e <__fp_cmp+0x46>
    5006:	23 2b       	or	r18, r19
    5008:	24 2b       	or	r18, r20
    500a:	25 2b       	or	r18, r21
    500c:	21 f4       	brne	.+8      	; 0x5016 <__fp_cmp+0x3e>
    500e:	08 95       	ret
    5010:	0a 26       	eor	r0, r26
    5012:	09 f4       	brne	.+2      	; 0x5016 <__fp_cmp+0x3e>
    5014:	a1 40       	sbci	r26, 0x01	; 1
    5016:	a6 95       	lsr	r26
    5018:	8f ef       	ldi	r24, 0xFF	; 255
    501a:	81 1d       	adc	r24, r1
    501c:	81 1d       	adc	r24, r1
    501e:	08 95       	ret

00005020 <__fp_inf>:
    5020:	97 f9       	bld	r25, 7
    5022:	9f 67       	ori	r25, 0x7F	; 127
    5024:	80 e8       	ldi	r24, 0x80	; 128
    5026:	70 e0       	ldi	r23, 0x00	; 0
    5028:	60 e0       	ldi	r22, 0x00	; 0
    502a:	08 95       	ret

0000502c <__fp_nan>:
    502c:	9f ef       	ldi	r25, 0xFF	; 255
    502e:	80 ec       	ldi	r24, 0xC0	; 192
    5030:	08 95       	ret

00005032 <__fp_pscA>:
    5032:	00 24       	eor	r0, r0
    5034:	0a 94       	dec	r0
    5036:	16 16       	cp	r1, r22
    5038:	17 06       	cpc	r1, r23
    503a:	18 06       	cpc	r1, r24
    503c:	09 06       	cpc	r0, r25
    503e:	08 95       	ret

00005040 <__fp_pscB>:
    5040:	00 24       	eor	r0, r0
    5042:	0a 94       	dec	r0
    5044:	12 16       	cp	r1, r18
    5046:	13 06       	cpc	r1, r19
    5048:	14 06       	cpc	r1, r20
    504a:	05 06       	cpc	r0, r21
    504c:	08 95       	ret

0000504e <__fp_round>:
    504e:	09 2e       	mov	r0, r25
    5050:	03 94       	inc	r0
    5052:	00 0c       	add	r0, r0
    5054:	11 f4       	brne	.+4      	; 0x505a <__fp_round+0xc>
    5056:	88 23       	and	r24, r24
    5058:	52 f0       	brmi	.+20     	; 0x506e <__fp_round+0x20>
    505a:	bb 0f       	add	r27, r27
    505c:	40 f4       	brcc	.+16     	; 0x506e <__fp_round+0x20>
    505e:	bf 2b       	or	r27, r31
    5060:	11 f4       	brne	.+4      	; 0x5066 <__fp_round+0x18>
    5062:	60 ff       	sbrs	r22, 0
    5064:	04 c0       	rjmp	.+8      	; 0x506e <__fp_round+0x20>
    5066:	6f 5f       	subi	r22, 0xFF	; 255
    5068:	7f 4f       	sbci	r23, 0xFF	; 255
    506a:	8f 4f       	sbci	r24, 0xFF	; 255
    506c:	9f 4f       	sbci	r25, 0xFF	; 255
    506e:	08 95       	ret

00005070 <__fp_split3>:
    5070:	57 fd       	sbrc	r21, 7
    5072:	90 58       	subi	r25, 0x80	; 128
    5074:	44 0f       	add	r20, r20
    5076:	55 1f       	adc	r21, r21
    5078:	59 f0       	breq	.+22     	; 0x5090 <__fp_splitA+0x10>
    507a:	5f 3f       	cpi	r21, 0xFF	; 255
    507c:	71 f0       	breq	.+28     	; 0x509a <__fp_splitA+0x1a>
    507e:	47 95       	ror	r20

00005080 <__fp_splitA>:
    5080:	88 0f       	add	r24, r24
    5082:	97 fb       	bst	r25, 7
    5084:	99 1f       	adc	r25, r25
    5086:	61 f0       	breq	.+24     	; 0x50a0 <__fp_splitA+0x20>
    5088:	9f 3f       	cpi	r25, 0xFF	; 255
    508a:	79 f0       	breq	.+30     	; 0x50aa <__fp_splitA+0x2a>
    508c:	87 95       	ror	r24
    508e:	08 95       	ret
    5090:	12 16       	cp	r1, r18
    5092:	13 06       	cpc	r1, r19
    5094:	14 06       	cpc	r1, r20
    5096:	55 1f       	adc	r21, r21
    5098:	f2 cf       	rjmp	.-28     	; 0x507e <__fp_split3+0xe>
    509a:	46 95       	lsr	r20
    509c:	f1 df       	rcall	.-30     	; 0x5080 <__fp_splitA>
    509e:	08 c0       	rjmp	.+16     	; 0x50b0 <__fp_splitA+0x30>
    50a0:	16 16       	cp	r1, r22
    50a2:	17 06       	cpc	r1, r23
    50a4:	18 06       	cpc	r1, r24
    50a6:	99 1f       	adc	r25, r25
    50a8:	f1 cf       	rjmp	.-30     	; 0x508c <__fp_splitA+0xc>
    50aa:	86 95       	lsr	r24
    50ac:	71 05       	cpc	r23, r1
    50ae:	61 05       	cpc	r22, r1
    50b0:	08 94       	sec
    50b2:	08 95       	ret

000050b4 <__fp_zero>:
    50b4:	e8 94       	clt

000050b6 <__fp_szero>:
    50b6:	bb 27       	eor	r27, r27
    50b8:	66 27       	eor	r22, r22
    50ba:	77 27       	eor	r23, r23
    50bc:	cb 01       	movw	r24, r22
    50be:	97 f9       	bld	r25, 7
    50c0:	08 95       	ret

000050c2 <__gesf2>:
    50c2:	0e 94 ec 27 	call	0x4fd8	; 0x4fd8 <__fp_cmp>
    50c6:	08 f4       	brcc	.+2      	; 0x50ca <__gesf2+0x8>
    50c8:	8f ef       	ldi	r24, 0xFF	; 255
    50ca:	08 95       	ret

000050cc <__mulsf3>:
    50cc:	0e 94 79 28 	call	0x50f2	; 0x50f2 <__mulsf3x>
    50d0:	0c 94 27 28 	jmp	0x504e	; 0x504e <__fp_round>
    50d4:	0e 94 19 28 	call	0x5032	; 0x5032 <__fp_pscA>
    50d8:	38 f0       	brcs	.+14     	; 0x50e8 <__mulsf3+0x1c>
    50da:	0e 94 20 28 	call	0x5040	; 0x5040 <__fp_pscB>
    50de:	20 f0       	brcs	.+8      	; 0x50e8 <__mulsf3+0x1c>
    50e0:	95 23       	and	r25, r21
    50e2:	11 f0       	breq	.+4      	; 0x50e8 <__mulsf3+0x1c>
    50e4:	0c 94 10 28 	jmp	0x5020	; 0x5020 <__fp_inf>
    50e8:	0c 94 16 28 	jmp	0x502c	; 0x502c <__fp_nan>
    50ec:	11 24       	eor	r1, r1
    50ee:	0c 94 5b 28 	jmp	0x50b6	; 0x50b6 <__fp_szero>

000050f2 <__mulsf3x>:
    50f2:	0e 94 38 28 	call	0x5070	; 0x5070 <__fp_split3>
    50f6:	70 f3       	brcs	.-36     	; 0x50d4 <__mulsf3+0x8>

000050f8 <__mulsf3_pse>:
    50f8:	95 9f       	mul	r25, r21
    50fa:	c1 f3       	breq	.-16     	; 0x50ec <__mulsf3+0x20>
    50fc:	95 0f       	add	r25, r21
    50fe:	50 e0       	ldi	r21, 0x00	; 0
    5100:	55 1f       	adc	r21, r21
    5102:	62 9f       	mul	r22, r18
    5104:	f0 01       	movw	r30, r0
    5106:	72 9f       	mul	r23, r18
    5108:	bb 27       	eor	r27, r27
    510a:	f0 0d       	add	r31, r0
    510c:	b1 1d       	adc	r27, r1
    510e:	63 9f       	mul	r22, r19
    5110:	aa 27       	eor	r26, r26
    5112:	f0 0d       	add	r31, r0
    5114:	b1 1d       	adc	r27, r1
    5116:	aa 1f       	adc	r26, r26
    5118:	64 9f       	mul	r22, r20
    511a:	66 27       	eor	r22, r22
    511c:	b0 0d       	add	r27, r0
    511e:	a1 1d       	adc	r26, r1
    5120:	66 1f       	adc	r22, r22
    5122:	82 9f       	mul	r24, r18
    5124:	22 27       	eor	r18, r18
    5126:	b0 0d       	add	r27, r0
    5128:	a1 1d       	adc	r26, r1
    512a:	62 1f       	adc	r22, r18
    512c:	73 9f       	mul	r23, r19
    512e:	b0 0d       	add	r27, r0
    5130:	a1 1d       	adc	r26, r1
    5132:	62 1f       	adc	r22, r18
    5134:	83 9f       	mul	r24, r19
    5136:	a0 0d       	add	r26, r0
    5138:	61 1d       	adc	r22, r1
    513a:	22 1f       	adc	r18, r18
    513c:	74 9f       	mul	r23, r20
    513e:	33 27       	eor	r19, r19
    5140:	a0 0d       	add	r26, r0
    5142:	61 1d       	adc	r22, r1
    5144:	23 1f       	adc	r18, r19
    5146:	84 9f       	mul	r24, r20
    5148:	60 0d       	add	r22, r0
    514a:	21 1d       	adc	r18, r1
    514c:	82 2f       	mov	r24, r18
    514e:	76 2f       	mov	r23, r22
    5150:	6a 2f       	mov	r22, r26
    5152:	11 24       	eor	r1, r1
    5154:	9f 57       	subi	r25, 0x7F	; 127
    5156:	50 40       	sbci	r21, 0x00	; 0
    5158:	9a f0       	brmi	.+38     	; 0x5180 <__mulsf3_pse+0x88>
    515a:	f1 f0       	breq	.+60     	; 0x5198 <__mulsf3_pse+0xa0>
    515c:	88 23       	and	r24, r24
    515e:	4a f0       	brmi	.+18     	; 0x5172 <__mulsf3_pse+0x7a>
    5160:	ee 0f       	add	r30, r30
    5162:	ff 1f       	adc	r31, r31
    5164:	bb 1f       	adc	r27, r27
    5166:	66 1f       	adc	r22, r22
    5168:	77 1f       	adc	r23, r23
    516a:	88 1f       	adc	r24, r24
    516c:	91 50       	subi	r25, 0x01	; 1
    516e:	50 40       	sbci	r21, 0x00	; 0
    5170:	a9 f7       	brne	.-22     	; 0x515c <__mulsf3_pse+0x64>
    5172:	9e 3f       	cpi	r25, 0xFE	; 254
    5174:	51 05       	cpc	r21, r1
    5176:	80 f0       	brcs	.+32     	; 0x5198 <__mulsf3_pse+0xa0>
    5178:	0c 94 10 28 	jmp	0x5020	; 0x5020 <__fp_inf>
    517c:	0c 94 5b 28 	jmp	0x50b6	; 0x50b6 <__fp_szero>
    5180:	5f 3f       	cpi	r21, 0xFF	; 255
    5182:	e4 f3       	brlt	.-8      	; 0x517c <__mulsf3_pse+0x84>
    5184:	98 3e       	cpi	r25, 0xE8	; 232
    5186:	d4 f3       	brlt	.-12     	; 0x517c <__mulsf3_pse+0x84>
    5188:	86 95       	lsr	r24
    518a:	77 95       	ror	r23
    518c:	67 95       	ror	r22
    518e:	b7 95       	ror	r27
    5190:	f7 95       	ror	r31
    5192:	e7 95       	ror	r30
    5194:	9f 5f       	subi	r25, 0xFF	; 255
    5196:	c1 f7       	brne	.-16     	; 0x5188 <__mulsf3_pse+0x90>
    5198:	fe 2b       	or	r31, r30
    519a:	88 0f       	add	r24, r24
    519c:	91 1d       	adc	r25, r1
    519e:	96 95       	lsr	r25
    51a0:	87 95       	ror	r24
    51a2:	97 f9       	bld	r25, 7
    51a4:	08 95       	ret

000051a6 <pow>:
    51a6:	fa 01       	movw	r30, r20
    51a8:	ee 0f       	add	r30, r30
    51aa:	ff 1f       	adc	r31, r31
    51ac:	30 96       	adiw	r30, 0x00	; 0
    51ae:	21 05       	cpc	r18, r1
    51b0:	31 05       	cpc	r19, r1
    51b2:	a1 f1       	breq	.+104    	; 0x521c <pow+0x76>
    51b4:	61 15       	cp	r22, r1
    51b6:	71 05       	cpc	r23, r1
    51b8:	61 f4       	brne	.+24     	; 0x51d2 <pow+0x2c>
    51ba:	80 38       	cpi	r24, 0x80	; 128
    51bc:	bf e3       	ldi	r27, 0x3F	; 63
    51be:	9b 07       	cpc	r25, r27
    51c0:	49 f1       	breq	.+82     	; 0x5214 <pow+0x6e>
    51c2:	68 94       	set
    51c4:	90 38       	cpi	r25, 0x80	; 128
    51c6:	81 05       	cpc	r24, r1
    51c8:	61 f0       	breq	.+24     	; 0x51e2 <pow+0x3c>
    51ca:	80 38       	cpi	r24, 0x80	; 128
    51cc:	bf ef       	ldi	r27, 0xFF	; 255
    51ce:	9b 07       	cpc	r25, r27
    51d0:	41 f0       	breq	.+16     	; 0x51e2 <pow+0x3c>
    51d2:	99 23       	and	r25, r25
    51d4:	4a f5       	brpl	.+82     	; 0x5228 <pow+0x82>
    51d6:	ff 3f       	cpi	r31, 0xFF	; 255
    51d8:	e1 05       	cpc	r30, r1
    51da:	31 05       	cpc	r19, r1
    51dc:	21 05       	cpc	r18, r1
    51de:	19 f1       	breq	.+70     	; 0x5226 <pow+0x80>
    51e0:	e8 94       	clt
    51e2:	08 94       	sec
    51e4:	e7 95       	ror	r30
    51e6:	d9 01       	movw	r26, r18
    51e8:	aa 23       	and	r26, r26
    51ea:	29 f4       	brne	.+10     	; 0x51f6 <pow+0x50>
    51ec:	ab 2f       	mov	r26, r27
    51ee:	be 2f       	mov	r27, r30
    51f0:	f8 5f       	subi	r31, 0xF8	; 248
    51f2:	d0 f3       	brcs	.-12     	; 0x51e8 <pow+0x42>
    51f4:	10 c0       	rjmp	.+32     	; 0x5216 <pow+0x70>
    51f6:	ff 5f       	subi	r31, 0xFF	; 255
    51f8:	70 f4       	brcc	.+28     	; 0x5216 <pow+0x70>
    51fa:	a6 95       	lsr	r26
    51fc:	e0 f7       	brcc	.-8      	; 0x51f6 <pow+0x50>
    51fe:	f7 39       	cpi	r31, 0x97	; 151
    5200:	50 f0       	brcs	.+20     	; 0x5216 <pow+0x70>
    5202:	19 f0       	breq	.+6      	; 0x520a <pow+0x64>
    5204:	ff 3a       	cpi	r31, 0xAF	; 175
    5206:	38 f4       	brcc	.+14     	; 0x5216 <pow+0x70>
    5208:	9f 77       	andi	r25, 0x7F	; 127
    520a:	9f 93       	push	r25
    520c:	0d d0       	rcall	.+26     	; 0x5228 <pow+0x82>
    520e:	0f 90       	pop	r0
    5210:	07 fc       	sbrc	r0, 7
    5212:	90 58       	subi	r25, 0x80	; 128
    5214:	08 95       	ret
    5216:	46 f0       	brts	.+16     	; 0x5228 <pow+0x82>
    5218:	0c 94 16 28 	jmp	0x502c	; 0x502c <__fp_nan>
    521c:	60 e0       	ldi	r22, 0x00	; 0
    521e:	70 e0       	ldi	r23, 0x00	; 0
    5220:	80 e8       	ldi	r24, 0x80	; 128
    5222:	9f e3       	ldi	r25, 0x3F	; 63
    5224:	08 95       	ret
    5226:	4f e7       	ldi	r20, 0x7F	; 127
    5228:	9f 77       	andi	r25, 0x7F	; 127
    522a:	5f 93       	push	r21
    522c:	4f 93       	push	r20
    522e:	3f 93       	push	r19
    5230:	2f 93       	push	r18
    5232:	0e 94 ce 29 	call	0x539c	; 0x539c <log>
    5236:	2f 91       	pop	r18
    5238:	3f 91       	pop	r19
    523a:	4f 91       	pop	r20
    523c:	5f 91       	pop	r21
    523e:	0e 94 66 28 	call	0x50cc	; 0x50cc <__mulsf3>
    5242:	0c 94 2b 29 	jmp	0x5256	; 0x5256 <exp>
    5246:	29 f4       	brne	.+10     	; 0x5252 <pow+0xac>
    5248:	16 f0       	brts	.+4      	; 0x524e <pow+0xa8>
    524a:	0c 94 10 28 	jmp	0x5020	; 0x5020 <__fp_inf>
    524e:	0c 94 5a 28 	jmp	0x50b4	; 0x50b4 <__fp_zero>
    5252:	0c 94 16 28 	jmp	0x502c	; 0x502c <__fp_nan>

00005256 <exp>:
    5256:	0e 94 40 28 	call	0x5080	; 0x5080 <__fp_splitA>
    525a:	a8 f3       	brcs	.-22     	; 0x5246 <pow+0xa0>
    525c:	96 38       	cpi	r25, 0x86	; 134
    525e:	a0 f7       	brcc	.-24     	; 0x5248 <pow+0xa2>
    5260:	07 f8       	bld	r0, 7
    5262:	0f 92       	push	r0
    5264:	e8 94       	clt
    5266:	2b e3       	ldi	r18, 0x3B	; 59
    5268:	3a ea       	ldi	r19, 0xAA	; 170
    526a:	48 eb       	ldi	r20, 0xB8	; 184
    526c:	5f e7       	ldi	r21, 0x7F	; 127
    526e:	0e 94 7c 28 	call	0x50f8	; 0x50f8 <__mulsf3_pse>
    5272:	0f 92       	push	r0
    5274:	0f 92       	push	r0
    5276:	0f 92       	push	r0
    5278:	4d b7       	in	r20, 0x3d	; 61
    527a:	5e b7       	in	r21, 0x3e	; 62
    527c:	0f 92       	push	r0
    527e:	0e 94 16 2a 	call	0x542c	; 0x542c <modf>
    5282:	e2 e2       	ldi	r30, 0x22	; 34
    5284:	f1 e0       	ldi	r31, 0x01	; 1
    5286:	0e 94 5d 29 	call	0x52ba	; 0x52ba <__fp_powser>
    528a:	4f 91       	pop	r20
    528c:	5f 91       	pop	r21
    528e:	ef 91       	pop	r30
    5290:	ff 91       	pop	r31
    5292:	e5 95       	asr	r30
    5294:	ee 1f       	adc	r30, r30
    5296:	ff 1f       	adc	r31, r31
    5298:	49 f0       	breq	.+18     	; 0x52ac <exp+0x56>
    529a:	fe 57       	subi	r31, 0x7E	; 126
    529c:	e0 68       	ori	r30, 0x80	; 128
    529e:	44 27       	eor	r20, r20
    52a0:	ee 0f       	add	r30, r30
    52a2:	44 1f       	adc	r20, r20
    52a4:	fa 95       	dec	r31
    52a6:	e1 f7       	brne	.-8      	; 0x52a0 <exp+0x4a>
    52a8:	41 95       	neg	r20
    52aa:	55 0b       	sbc	r21, r21
    52ac:	0e 94 90 29 	call	0x5320	; 0x5320 <ldexp>
    52b0:	0f 90       	pop	r0
    52b2:	07 fe       	sbrs	r0, 7
    52b4:	0c 94 84 29 	jmp	0x5308	; 0x5308 <inverse>
    52b8:	08 95       	ret

000052ba <__fp_powser>:
    52ba:	df 93       	push	r29
    52bc:	cf 93       	push	r28
    52be:	1f 93       	push	r17
    52c0:	0f 93       	push	r16
    52c2:	ff 92       	push	r15
    52c4:	ef 92       	push	r14
    52c6:	df 92       	push	r13
    52c8:	7b 01       	movw	r14, r22
    52ca:	8c 01       	movw	r16, r24
    52cc:	68 94       	set
    52ce:	06 c0       	rjmp	.+12     	; 0x52dc <__fp_powser+0x22>
    52d0:	da 2e       	mov	r13, r26
    52d2:	ef 01       	movw	r28, r30
    52d4:	0e 94 79 28 	call	0x50f2	; 0x50f2 <__mulsf3x>
    52d8:	fe 01       	movw	r30, r28
    52da:	e8 94       	clt
    52dc:	a5 91       	lpm	r26, Z+
    52de:	25 91       	lpm	r18, Z+
    52e0:	35 91       	lpm	r19, Z+
    52e2:	45 91       	lpm	r20, Z+
    52e4:	55 91       	lpm	r21, Z+
    52e6:	a6 f3       	brts	.-24     	; 0x52d0 <__fp_powser+0x16>
    52e8:	ef 01       	movw	r28, r30
    52ea:	0e 94 ad 26 	call	0x4d5a	; 0x4d5a <__addsf3x>
    52ee:	fe 01       	movw	r30, r28
    52f0:	97 01       	movw	r18, r14
    52f2:	a8 01       	movw	r20, r16
    52f4:	da 94       	dec	r13
    52f6:	69 f7       	brne	.-38     	; 0x52d2 <__fp_powser+0x18>
    52f8:	df 90       	pop	r13
    52fa:	ef 90       	pop	r14
    52fc:	ff 90       	pop	r15
    52fe:	0f 91       	pop	r16
    5300:	1f 91       	pop	r17
    5302:	cf 91       	pop	r28
    5304:	df 91       	pop	r29
    5306:	08 95       	ret

00005308 <inverse>:
    5308:	9b 01       	movw	r18, r22
    530a:	ac 01       	movw	r20, r24
    530c:	60 e0       	ldi	r22, 0x00	; 0
    530e:	70 e0       	ldi	r23, 0x00	; 0
    5310:	80 e8       	ldi	r24, 0x80	; 128
    5312:	9f e3       	ldi	r25, 0x3F	; 63
    5314:	0c 94 07 27 	jmp	0x4e0e	; 0x4e0e <__divsf3>
    5318:	0c 94 10 28 	jmp	0x5020	; 0x5020 <__fp_inf>
    531c:	0c 94 4a 2a 	jmp	0x5494	; 0x5494 <__fp_mpack>

00005320 <ldexp>:
    5320:	0e 94 40 28 	call	0x5080	; 0x5080 <__fp_splitA>
    5324:	d8 f3       	brcs	.-10     	; 0x531c <inverse+0x14>
    5326:	99 23       	and	r25, r25
    5328:	c9 f3       	breq	.-14     	; 0x531c <inverse+0x14>
    532a:	94 0f       	add	r25, r20
    532c:	51 1d       	adc	r21, r1
    532e:	a3 f3       	brvs	.-24     	; 0x5318 <inverse+0x10>
    5330:	91 50       	subi	r25, 0x01	; 1
    5332:	50 40       	sbci	r21, 0x00	; 0
    5334:	94 f0       	brlt	.+36     	; 0x535a <ldexp+0x3a>
    5336:	59 f0       	breq	.+22     	; 0x534e <ldexp+0x2e>
    5338:	88 23       	and	r24, r24
    533a:	32 f0       	brmi	.+12     	; 0x5348 <ldexp+0x28>
    533c:	66 0f       	add	r22, r22
    533e:	77 1f       	adc	r23, r23
    5340:	88 1f       	adc	r24, r24
    5342:	91 50       	subi	r25, 0x01	; 1
    5344:	50 40       	sbci	r21, 0x00	; 0
    5346:	c1 f7       	brne	.-16     	; 0x5338 <ldexp+0x18>
    5348:	9e 3f       	cpi	r25, 0xFE	; 254
    534a:	51 05       	cpc	r21, r1
    534c:	2c f7       	brge	.-54     	; 0x5318 <inverse+0x10>
    534e:	88 0f       	add	r24, r24
    5350:	91 1d       	adc	r25, r1
    5352:	96 95       	lsr	r25
    5354:	87 95       	ror	r24
    5356:	97 f9       	bld	r25, 7
    5358:	08 95       	ret
    535a:	5f 3f       	cpi	r21, 0xFF	; 255
    535c:	ac f0       	brlt	.+42     	; 0x5388 <ldexp+0x68>
    535e:	98 3e       	cpi	r25, 0xE8	; 232
    5360:	9c f0       	brlt	.+38     	; 0x5388 <ldexp+0x68>
    5362:	bb 27       	eor	r27, r27
    5364:	86 95       	lsr	r24
    5366:	77 95       	ror	r23
    5368:	67 95       	ror	r22
    536a:	b7 95       	ror	r27
    536c:	08 f4       	brcc	.+2      	; 0x5370 <ldexp+0x50>
    536e:	b1 60       	ori	r27, 0x01	; 1
    5370:	93 95       	inc	r25
    5372:	c1 f7       	brne	.-16     	; 0x5364 <ldexp+0x44>
    5374:	bb 0f       	add	r27, r27
    5376:	58 f7       	brcc	.-42     	; 0x534e <ldexp+0x2e>
    5378:	11 f4       	brne	.+4      	; 0x537e <ldexp+0x5e>
    537a:	60 ff       	sbrs	r22, 0
    537c:	e8 cf       	rjmp	.-48     	; 0x534e <ldexp+0x2e>
    537e:	6f 5f       	subi	r22, 0xFF	; 255
    5380:	7f 4f       	sbci	r23, 0xFF	; 255
    5382:	8f 4f       	sbci	r24, 0xFF	; 255
    5384:	9f 4f       	sbci	r25, 0xFF	; 255
    5386:	e3 cf       	rjmp	.-58     	; 0x534e <ldexp+0x2e>
    5388:	0c 94 5b 28 	jmp	0x50b6	; 0x50b6 <__fp_szero>
    538c:	16 f0       	brts	.+4      	; 0x5392 <ldexp+0x72>
    538e:	0c 94 4a 2a 	jmp	0x5494	; 0x5494 <__fp_mpack>
    5392:	0c 94 16 28 	jmp	0x502c	; 0x502c <__fp_nan>
    5396:	68 94       	set
    5398:	0c 94 10 28 	jmp	0x5020	; 0x5020 <__fp_inf>

0000539c <log>:
    539c:	0e 94 40 28 	call	0x5080	; 0x5080 <__fp_splitA>
    53a0:	a8 f3       	brcs	.-22     	; 0x538c <ldexp+0x6c>
    53a2:	99 23       	and	r25, r25
    53a4:	c1 f3       	breq	.-16     	; 0x5396 <ldexp+0x76>
    53a6:	ae f3       	brts	.-22     	; 0x5392 <ldexp+0x72>
    53a8:	df 93       	push	r29
    53aa:	cf 93       	push	r28
    53ac:	1f 93       	push	r17
    53ae:	0f 93       	push	r16
    53b0:	ff 92       	push	r15
    53b2:	c9 2f       	mov	r28, r25
    53b4:	dd 27       	eor	r29, r29
    53b6:	88 23       	and	r24, r24
    53b8:	2a f0       	brmi	.+10     	; 0x53c4 <log+0x28>
    53ba:	21 97       	sbiw	r28, 0x01	; 1
    53bc:	66 0f       	add	r22, r22
    53be:	77 1f       	adc	r23, r23
    53c0:	88 1f       	adc	r24, r24
    53c2:	da f7       	brpl	.-10     	; 0x53ba <log+0x1e>
    53c4:	20 e0       	ldi	r18, 0x00	; 0
    53c6:	30 e0       	ldi	r19, 0x00	; 0
    53c8:	40 e8       	ldi	r20, 0x80	; 128
    53ca:	5f eb       	ldi	r21, 0xBF	; 191
    53cc:	9f e3       	ldi	r25, 0x3F	; 63
    53ce:	88 39       	cpi	r24, 0x98	; 152
    53d0:	20 f0       	brcs	.+8      	; 0x53da <log+0x3e>
    53d2:	80 3e       	cpi	r24, 0xE0	; 224
    53d4:	38 f0       	brcs	.+14     	; 0x53e4 <log+0x48>
    53d6:	21 96       	adiw	r28, 0x01	; 1
    53d8:	8f 77       	andi	r24, 0x7F	; 127
    53da:	0e 94 96 26 	call	0x4d2c	; 0x4d2c <__addsf3>
    53de:	ea e4       	ldi	r30, 0x4A	; 74
    53e0:	f1 e0       	ldi	r31, 0x01	; 1
    53e2:	04 c0       	rjmp	.+8      	; 0x53ec <log+0x50>
    53e4:	0e 94 96 26 	call	0x4d2c	; 0x4d2c <__addsf3>
    53e8:	e7 e7       	ldi	r30, 0x77	; 119
    53ea:	f1 e0       	ldi	r31, 0x01	; 1
    53ec:	0e 94 5d 29 	call	0x52ba	; 0x52ba <__fp_powser>
    53f0:	8b 01       	movw	r16, r22
    53f2:	be 01       	movw	r22, r28
    53f4:	ec 01       	movw	r28, r24
    53f6:	fb 2e       	mov	r15, r27
    53f8:	6f 57       	subi	r22, 0x7F	; 127
    53fa:	71 09       	sbc	r23, r1
    53fc:	75 95       	asr	r23
    53fe:	77 1f       	adc	r23, r23
    5400:	88 0b       	sbc	r24, r24
    5402:	99 0b       	sbc	r25, r25
    5404:	0e 94 b1 27 	call	0x4f62	; 0x4f62 <__floatsisf>
    5408:	28 e1       	ldi	r18, 0x18	; 24
    540a:	32 e7       	ldi	r19, 0x72	; 114
    540c:	41 e3       	ldi	r20, 0x31	; 49
    540e:	5f e3       	ldi	r21, 0x3F	; 63
    5410:	0e 94 79 28 	call	0x50f2	; 0x50f2 <__mulsf3x>
    5414:	af 2d       	mov	r26, r15
    5416:	98 01       	movw	r18, r16
    5418:	ae 01       	movw	r20, r28
    541a:	ff 90       	pop	r15
    541c:	0f 91       	pop	r16
    541e:	1f 91       	pop	r17
    5420:	cf 91       	pop	r28
    5422:	df 91       	pop	r29
    5424:	0e 94 ad 26 	call	0x4d5a	; 0x4d5a <__addsf3x>
    5428:	0c 94 27 28 	jmp	0x504e	; 0x504e <__fp_round>

0000542c <modf>:
    542c:	fa 01       	movw	r30, r20
    542e:	dc 01       	movw	r26, r24
    5430:	aa 0f       	add	r26, r26
    5432:	bb 1f       	adc	r27, r27
    5434:	9b 01       	movw	r18, r22
    5436:	ac 01       	movw	r20, r24
    5438:	bf 57       	subi	r27, 0x7F	; 127
    543a:	28 f4       	brcc	.+10     	; 0x5446 <modf+0x1a>
    543c:	22 27       	eor	r18, r18
    543e:	33 27       	eor	r19, r19
    5440:	44 27       	eor	r20, r20
    5442:	50 78       	andi	r21, 0x80	; 128
    5444:	20 c0       	rjmp	.+64     	; 0x5486 <modf+0x5a>
    5446:	b7 51       	subi	r27, 0x17	; 23
    5448:	90 f4       	brcc	.+36     	; 0x546e <modf+0x42>
    544a:	ab 2f       	mov	r26, r27
    544c:	00 24       	eor	r0, r0
    544e:	46 95       	lsr	r20
    5450:	37 95       	ror	r19
    5452:	27 95       	ror	r18
    5454:	01 1c       	adc	r0, r1
    5456:	a3 95       	inc	r26
    5458:	d2 f3       	brmi	.-12     	; 0x544e <modf+0x22>
    545a:	00 20       	and	r0, r0
    545c:	71 f0       	breq	.+28     	; 0x547a <modf+0x4e>
    545e:	22 0f       	add	r18, r18
    5460:	33 1f       	adc	r19, r19
    5462:	44 1f       	adc	r20, r20
    5464:	b3 95       	inc	r27
    5466:	da f3       	brmi	.-10     	; 0x545e <modf+0x32>
    5468:	0e d0       	rcall	.+28     	; 0x5486 <modf+0x5a>
    546a:	0c 94 95 26 	jmp	0x4d2a	; 0x4d2a <__subsf3>
    546e:	61 30       	cpi	r22, 0x01	; 1
    5470:	71 05       	cpc	r23, r1
    5472:	a0 e8       	ldi	r26, 0x80	; 128
    5474:	8a 07       	cpc	r24, r26
    5476:	b9 46       	sbci	r27, 0x69	; 105
    5478:	30 f4       	brcc	.+12     	; 0x5486 <modf+0x5a>
    547a:	9b 01       	movw	r18, r22
    547c:	ac 01       	movw	r20, r24
    547e:	66 27       	eor	r22, r22
    5480:	77 27       	eor	r23, r23
    5482:	88 27       	eor	r24, r24
    5484:	90 78       	andi	r25, 0x80	; 128
    5486:	30 96       	adiw	r30, 0x00	; 0
    5488:	21 f0       	breq	.+8      	; 0x5492 <modf+0x66>
    548a:	20 83       	st	Z, r18
    548c:	31 83       	std	Z+1, r19	; 0x01
    548e:	42 83       	std	Z+2, r20	; 0x02
    5490:	53 83       	std	Z+3, r21	; 0x03
    5492:	08 95       	ret

00005494 <__fp_mpack>:
    5494:	9f 3f       	cpi	r25, 0xFF	; 255
    5496:	31 f0       	breq	.+12     	; 0x54a4 <__fp_mpack_finite+0xc>

00005498 <__fp_mpack_finite>:
    5498:	91 50       	subi	r25, 0x01	; 1
    549a:	20 f4       	brcc	.+8      	; 0x54a4 <__fp_mpack_finite+0xc>
    549c:	87 95       	ror	r24
    549e:	77 95       	ror	r23
    54a0:	67 95       	ror	r22
    54a2:	b7 95       	ror	r27
    54a4:	88 0f       	add	r24, r24
    54a6:	91 1d       	adc	r25, r1
    54a8:	96 95       	lsr	r25
    54aa:	87 95       	ror	r24
    54ac:	97 f9       	bld	r25, 7
    54ae:	08 95       	ret

000054b0 <__tablejump2__>:
    54b0:	ee 0f       	add	r30, r30
    54b2:	ff 1f       	adc	r31, r31
    54b4:	05 90       	lpm	r0, Z+
    54b6:	f4 91       	lpm	r31, Z
    54b8:	e0 2d       	mov	r30, r0
    54ba:	09 94       	ijmp

000054bc <memcpy_P>:
    54bc:	fb 01       	movw	r30, r22
    54be:	dc 01       	movw	r26, r24
    54c0:	02 c0       	rjmp	.+4      	; 0x54c6 <memcpy_P+0xa>
    54c2:	05 90       	lpm	r0, Z+
    54c4:	0d 92       	st	X+, r0
    54c6:	41 50       	subi	r20, 0x01	; 1
    54c8:	50 40       	sbci	r21, 0x00	; 0
    54ca:	d8 f7       	brcc	.-10     	; 0x54c2 <memcpy_P+0x6>
    54cc:	08 95       	ret

000054ce <sprintf>:
    54ce:	ae e0       	ldi	r26, 0x0E	; 14
    54d0:	b0 e0       	ldi	r27, 0x00	; 0
    54d2:	ed e6       	ldi	r30, 0x6D	; 109
    54d4:	fa e2       	ldi	r31, 0x2A	; 42
    54d6:	0c 94 16 2d 	jmp	0x5a2c	; 0x5a2c <__prologue_saves__+0x1c>
    54da:	0d 89       	ldd	r16, Y+21	; 0x15
    54dc:	1e 89       	ldd	r17, Y+22	; 0x16
    54de:	86 e0       	ldi	r24, 0x06	; 6
    54e0:	8c 83       	std	Y+4, r24	; 0x04
    54e2:	1a 83       	std	Y+2, r17	; 0x02
    54e4:	09 83       	std	Y+1, r16	; 0x01
    54e6:	8f ef       	ldi	r24, 0xFF	; 255
    54e8:	9f e7       	ldi	r25, 0x7F	; 127
    54ea:	9e 83       	std	Y+6, r25	; 0x06
    54ec:	8d 83       	std	Y+5, r24	; 0x05
    54ee:	ae 01       	movw	r20, r28
    54f0:	47 5e       	subi	r20, 0xE7	; 231
    54f2:	5f 4f       	sbci	r21, 0xFF	; 255
    54f4:	6f 89       	ldd	r22, Y+23	; 0x17
    54f6:	78 8d       	ldd	r23, Y+24	; 0x18
    54f8:	ce 01       	movw	r24, r28
    54fa:	01 96       	adiw	r24, 0x01	; 1
    54fc:	0e 94 8a 2a 	call	0x5514	; 0x5514 <vfprintf>
    5500:	2f 81       	ldd	r18, Y+7	; 0x07
    5502:	38 85       	ldd	r19, Y+8	; 0x08
    5504:	f8 01       	movw	r30, r16
    5506:	e2 0f       	add	r30, r18
    5508:	f3 1f       	adc	r31, r19
    550a:	10 82       	st	Z, r1
    550c:	2e 96       	adiw	r28, 0x0e	; 14
    550e:	e4 e0       	ldi	r30, 0x04	; 4
    5510:	0c 94 32 2d 	jmp	0x5a64	; 0x5a64 <__epilogue_restores__+0x1c>

00005514 <vfprintf>:
    5514:	ac e0       	ldi	r26, 0x0C	; 12
    5516:	b0 e0       	ldi	r27, 0x00	; 0
    5518:	e0 e9       	ldi	r30, 0x90	; 144
    551a:	fa e2       	ldi	r31, 0x2A	; 42
    551c:	0c 94 08 2d 	jmp	0x5a10	; 0x5a10 <__prologue_saves__>
    5520:	7c 01       	movw	r14, r24
    5522:	6b 01       	movw	r12, r22
    5524:	8a 01       	movw	r16, r20
    5526:	fc 01       	movw	r30, r24
    5528:	17 82       	std	Z+7, r1	; 0x07
    552a:	16 82       	std	Z+6, r1	; 0x06
    552c:	83 81       	ldd	r24, Z+3	; 0x03
    552e:	81 ff       	sbrs	r24, 1
    5530:	bd c1       	rjmp	.+890    	; 0x58ac <vfprintf+0x398>
    5532:	ce 01       	movw	r24, r28
    5534:	01 96       	adiw	r24, 0x01	; 1
    5536:	4c 01       	movw	r8, r24
    5538:	f7 01       	movw	r30, r14
    553a:	93 81       	ldd	r25, Z+3	; 0x03
    553c:	f6 01       	movw	r30, r12
    553e:	93 fd       	sbrc	r25, 3
    5540:	85 91       	lpm	r24, Z+
    5542:	93 ff       	sbrs	r25, 3
    5544:	81 91       	ld	r24, Z+
    5546:	6f 01       	movw	r12, r30
    5548:	88 23       	and	r24, r24
    554a:	09 f4       	brne	.+2      	; 0x554e <vfprintf+0x3a>
    554c:	ab c1       	rjmp	.+854    	; 0x58a4 <vfprintf+0x390>
    554e:	85 32       	cpi	r24, 0x25	; 37
    5550:	39 f4       	brne	.+14     	; 0x5560 <vfprintf+0x4c>
    5552:	93 fd       	sbrc	r25, 3
    5554:	85 91       	lpm	r24, Z+
    5556:	93 ff       	sbrs	r25, 3
    5558:	81 91       	ld	r24, Z+
    555a:	6f 01       	movw	r12, r30
    555c:	85 32       	cpi	r24, 0x25	; 37
    555e:	29 f4       	brne	.+10     	; 0x556a <vfprintf+0x56>
    5560:	b7 01       	movw	r22, r14
    5562:	90 e0       	ldi	r25, 0x00	; 0
    5564:	0e 94 72 2c 	call	0x58e4	; 0x58e4 <fputc>
    5568:	e7 cf       	rjmp	.-50     	; 0x5538 <vfprintf+0x24>
    556a:	51 2c       	mov	r5, r1
    556c:	31 2c       	mov	r3, r1
    556e:	20 e0       	ldi	r18, 0x00	; 0
    5570:	20 32       	cpi	r18, 0x20	; 32
    5572:	a0 f4       	brcc	.+40     	; 0x559c <vfprintf+0x88>
    5574:	8b 32       	cpi	r24, 0x2B	; 43
    5576:	69 f0       	breq	.+26     	; 0x5592 <vfprintf+0x7e>
    5578:	30 f4       	brcc	.+12     	; 0x5586 <vfprintf+0x72>
    557a:	80 32       	cpi	r24, 0x20	; 32
    557c:	59 f0       	breq	.+22     	; 0x5594 <vfprintf+0x80>
    557e:	83 32       	cpi	r24, 0x23	; 35
    5580:	69 f4       	brne	.+26     	; 0x559c <vfprintf+0x88>
    5582:	20 61       	ori	r18, 0x10	; 16
    5584:	2c c0       	rjmp	.+88     	; 0x55de <vfprintf+0xca>
    5586:	8d 32       	cpi	r24, 0x2D	; 45
    5588:	39 f0       	breq	.+14     	; 0x5598 <vfprintf+0x84>
    558a:	80 33       	cpi	r24, 0x30	; 48
    558c:	39 f4       	brne	.+14     	; 0x559c <vfprintf+0x88>
    558e:	21 60       	ori	r18, 0x01	; 1
    5590:	26 c0       	rjmp	.+76     	; 0x55de <vfprintf+0xca>
    5592:	22 60       	ori	r18, 0x02	; 2
    5594:	24 60       	ori	r18, 0x04	; 4
    5596:	23 c0       	rjmp	.+70     	; 0x55de <vfprintf+0xca>
    5598:	28 60       	ori	r18, 0x08	; 8
    559a:	21 c0       	rjmp	.+66     	; 0x55de <vfprintf+0xca>
    559c:	27 fd       	sbrc	r18, 7
    559e:	27 c0       	rjmp	.+78     	; 0x55ee <vfprintf+0xda>
    55a0:	30 ed       	ldi	r19, 0xD0	; 208
    55a2:	38 0f       	add	r19, r24
    55a4:	3a 30       	cpi	r19, 0x0A	; 10
    55a6:	78 f4       	brcc	.+30     	; 0x55c6 <vfprintf+0xb2>
    55a8:	26 ff       	sbrs	r18, 6
    55aa:	06 c0       	rjmp	.+12     	; 0x55b8 <vfprintf+0xa4>
    55ac:	fa e0       	ldi	r31, 0x0A	; 10
    55ae:	5f 9e       	mul	r5, r31
    55b0:	30 0d       	add	r19, r0
    55b2:	11 24       	eor	r1, r1
    55b4:	53 2e       	mov	r5, r19
    55b6:	13 c0       	rjmp	.+38     	; 0x55de <vfprintf+0xca>
    55b8:	8a e0       	ldi	r24, 0x0A	; 10
    55ba:	38 9e       	mul	r3, r24
    55bc:	30 0d       	add	r19, r0
    55be:	11 24       	eor	r1, r1
    55c0:	33 2e       	mov	r3, r19
    55c2:	20 62       	ori	r18, 0x20	; 32
    55c4:	0c c0       	rjmp	.+24     	; 0x55de <vfprintf+0xca>
    55c6:	8e 32       	cpi	r24, 0x2E	; 46
    55c8:	21 f4       	brne	.+8      	; 0x55d2 <vfprintf+0xbe>
    55ca:	26 fd       	sbrc	r18, 6
    55cc:	6b c1       	rjmp	.+726    	; 0x58a4 <vfprintf+0x390>
    55ce:	20 64       	ori	r18, 0x40	; 64
    55d0:	06 c0       	rjmp	.+12     	; 0x55de <vfprintf+0xca>
    55d2:	8c 36       	cpi	r24, 0x6C	; 108
    55d4:	11 f4       	brne	.+4      	; 0x55da <vfprintf+0xc6>
    55d6:	20 68       	ori	r18, 0x80	; 128
    55d8:	02 c0       	rjmp	.+4      	; 0x55de <vfprintf+0xca>
    55da:	88 36       	cpi	r24, 0x68	; 104
    55dc:	41 f4       	brne	.+16     	; 0x55ee <vfprintf+0xda>
    55de:	f6 01       	movw	r30, r12
    55e0:	93 fd       	sbrc	r25, 3
    55e2:	85 91       	lpm	r24, Z+
    55e4:	93 ff       	sbrs	r25, 3
    55e6:	81 91       	ld	r24, Z+
    55e8:	6f 01       	movw	r12, r30
    55ea:	81 11       	cpse	r24, r1
    55ec:	c1 cf       	rjmp	.-126    	; 0x5570 <vfprintf+0x5c>
    55ee:	98 2f       	mov	r25, r24
    55f0:	9f 7d       	andi	r25, 0xDF	; 223
    55f2:	95 54       	subi	r25, 0x45	; 69
    55f4:	93 30       	cpi	r25, 0x03	; 3
    55f6:	28 f4       	brcc	.+10     	; 0x5602 <vfprintf+0xee>
    55f8:	0c 5f       	subi	r16, 0xFC	; 252
    55fa:	1f 4f       	sbci	r17, 0xFF	; 255
    55fc:	ff e3       	ldi	r31, 0x3F	; 63
    55fe:	f9 83       	std	Y+1, r31	; 0x01
    5600:	0d c0       	rjmp	.+26     	; 0x561c <vfprintf+0x108>
    5602:	83 36       	cpi	r24, 0x63	; 99
    5604:	31 f0       	breq	.+12     	; 0x5612 <vfprintf+0xfe>
    5606:	83 37       	cpi	r24, 0x73	; 115
    5608:	71 f0       	breq	.+28     	; 0x5626 <vfprintf+0x112>
    560a:	83 35       	cpi	r24, 0x53	; 83
    560c:	09 f0       	breq	.+2      	; 0x5610 <vfprintf+0xfc>
    560e:	5b c0       	rjmp	.+182    	; 0x56c6 <vfprintf+0x1b2>
    5610:	22 c0       	rjmp	.+68     	; 0x5656 <vfprintf+0x142>
    5612:	f8 01       	movw	r30, r16
    5614:	80 81       	ld	r24, Z
    5616:	89 83       	std	Y+1, r24	; 0x01
    5618:	0e 5f       	subi	r16, 0xFE	; 254
    561a:	1f 4f       	sbci	r17, 0xFF	; 255
    561c:	44 24       	eor	r4, r4
    561e:	43 94       	inc	r4
    5620:	51 2c       	mov	r5, r1
    5622:	54 01       	movw	r10, r8
    5624:	15 c0       	rjmp	.+42     	; 0x5650 <vfprintf+0x13c>
    5626:	38 01       	movw	r6, r16
    5628:	f2 e0       	ldi	r31, 0x02	; 2
    562a:	6f 0e       	add	r6, r31
    562c:	71 1c       	adc	r7, r1
    562e:	f8 01       	movw	r30, r16
    5630:	a0 80       	ld	r10, Z
    5632:	b1 80       	ldd	r11, Z+1	; 0x01
    5634:	26 ff       	sbrs	r18, 6
    5636:	03 c0       	rjmp	.+6      	; 0x563e <vfprintf+0x12a>
    5638:	65 2d       	mov	r22, r5
    563a:	70 e0       	ldi	r23, 0x00	; 0
    563c:	02 c0       	rjmp	.+4      	; 0x5642 <vfprintf+0x12e>
    563e:	6f ef       	ldi	r22, 0xFF	; 255
    5640:	7f ef       	ldi	r23, 0xFF	; 255
    5642:	c5 01       	movw	r24, r10
    5644:	2c 87       	std	Y+12, r18	; 0x0c
    5646:	0e 94 67 2c 	call	0x58ce	; 0x58ce <strnlen>
    564a:	2c 01       	movw	r4, r24
    564c:	83 01       	movw	r16, r6
    564e:	2c 85       	ldd	r18, Y+12	; 0x0c
    5650:	2f 77       	andi	r18, 0x7F	; 127
    5652:	22 2e       	mov	r2, r18
    5654:	17 c0       	rjmp	.+46     	; 0x5684 <vfprintf+0x170>
    5656:	38 01       	movw	r6, r16
    5658:	f2 e0       	ldi	r31, 0x02	; 2
    565a:	6f 0e       	add	r6, r31
    565c:	71 1c       	adc	r7, r1
    565e:	f8 01       	movw	r30, r16
    5660:	a0 80       	ld	r10, Z
    5662:	b1 80       	ldd	r11, Z+1	; 0x01
    5664:	26 ff       	sbrs	r18, 6
    5666:	03 c0       	rjmp	.+6      	; 0x566e <vfprintf+0x15a>
    5668:	65 2d       	mov	r22, r5
    566a:	70 e0       	ldi	r23, 0x00	; 0
    566c:	02 c0       	rjmp	.+4      	; 0x5672 <vfprintf+0x15e>
    566e:	6f ef       	ldi	r22, 0xFF	; 255
    5670:	7f ef       	ldi	r23, 0xFF	; 255
    5672:	c5 01       	movw	r24, r10
    5674:	2c 87       	std	Y+12, r18	; 0x0c
    5676:	0e 94 5c 2c 	call	0x58b8	; 0x58b8 <strnlen_P>
    567a:	2c 01       	movw	r4, r24
    567c:	2c 85       	ldd	r18, Y+12	; 0x0c
    567e:	20 68       	ori	r18, 0x80	; 128
    5680:	22 2e       	mov	r2, r18
    5682:	83 01       	movw	r16, r6
    5684:	23 fc       	sbrc	r2, 3
    5686:	1b c0       	rjmp	.+54     	; 0x56be <vfprintf+0x1aa>
    5688:	83 2d       	mov	r24, r3
    568a:	90 e0       	ldi	r25, 0x00	; 0
    568c:	48 16       	cp	r4, r24
    568e:	59 06       	cpc	r5, r25
    5690:	b0 f4       	brcc	.+44     	; 0x56be <vfprintf+0x1aa>
    5692:	b7 01       	movw	r22, r14
    5694:	80 e2       	ldi	r24, 0x20	; 32
    5696:	90 e0       	ldi	r25, 0x00	; 0
    5698:	0e 94 72 2c 	call	0x58e4	; 0x58e4 <fputc>
    569c:	3a 94       	dec	r3
    569e:	f4 cf       	rjmp	.-24     	; 0x5688 <vfprintf+0x174>
    56a0:	f5 01       	movw	r30, r10
    56a2:	27 fc       	sbrc	r2, 7
    56a4:	85 91       	lpm	r24, Z+
    56a6:	27 fe       	sbrs	r2, 7
    56a8:	81 91       	ld	r24, Z+
    56aa:	5f 01       	movw	r10, r30
    56ac:	b7 01       	movw	r22, r14
    56ae:	90 e0       	ldi	r25, 0x00	; 0
    56b0:	0e 94 72 2c 	call	0x58e4	; 0x58e4 <fputc>
    56b4:	31 10       	cpse	r3, r1
    56b6:	3a 94       	dec	r3
    56b8:	f1 e0       	ldi	r31, 0x01	; 1
    56ba:	4f 1a       	sub	r4, r31
    56bc:	51 08       	sbc	r5, r1
    56be:	41 14       	cp	r4, r1
    56c0:	51 04       	cpc	r5, r1
    56c2:	71 f7       	brne	.-36     	; 0x56a0 <vfprintf+0x18c>
    56c4:	e5 c0       	rjmp	.+458    	; 0x5890 <vfprintf+0x37c>
    56c6:	84 36       	cpi	r24, 0x64	; 100
    56c8:	11 f0       	breq	.+4      	; 0x56ce <vfprintf+0x1ba>
    56ca:	89 36       	cpi	r24, 0x69	; 105
    56cc:	39 f5       	brne	.+78     	; 0x571c <vfprintf+0x208>
    56ce:	f8 01       	movw	r30, r16
    56d0:	27 ff       	sbrs	r18, 7
    56d2:	07 c0       	rjmp	.+14     	; 0x56e2 <vfprintf+0x1ce>
    56d4:	60 81       	ld	r22, Z
    56d6:	71 81       	ldd	r23, Z+1	; 0x01
    56d8:	82 81       	ldd	r24, Z+2	; 0x02
    56da:	93 81       	ldd	r25, Z+3	; 0x03
    56dc:	0c 5f       	subi	r16, 0xFC	; 252
    56de:	1f 4f       	sbci	r17, 0xFF	; 255
    56e0:	08 c0       	rjmp	.+16     	; 0x56f2 <vfprintf+0x1de>
    56e2:	60 81       	ld	r22, Z
    56e4:	71 81       	ldd	r23, Z+1	; 0x01
    56e6:	07 2e       	mov	r0, r23
    56e8:	00 0c       	add	r0, r0
    56ea:	88 0b       	sbc	r24, r24
    56ec:	99 0b       	sbc	r25, r25
    56ee:	0e 5f       	subi	r16, 0xFE	; 254
    56f0:	1f 4f       	sbci	r17, 0xFF	; 255
    56f2:	2f 76       	andi	r18, 0x6F	; 111
    56f4:	72 2e       	mov	r7, r18
    56f6:	97 ff       	sbrs	r25, 7
    56f8:	09 c0       	rjmp	.+18     	; 0x570c <vfprintf+0x1f8>
    56fa:	90 95       	com	r25
    56fc:	80 95       	com	r24
    56fe:	70 95       	com	r23
    5700:	61 95       	neg	r22
    5702:	7f 4f       	sbci	r23, 0xFF	; 255
    5704:	8f 4f       	sbci	r24, 0xFF	; 255
    5706:	9f 4f       	sbci	r25, 0xFF	; 255
    5708:	20 68       	ori	r18, 0x80	; 128
    570a:	72 2e       	mov	r7, r18
    570c:	2a e0       	ldi	r18, 0x0A	; 10
    570e:	30 e0       	ldi	r19, 0x00	; 0
    5710:	a4 01       	movw	r20, r8
    5712:	0e 94 aa 2c 	call	0x5954	; 0x5954 <__ultoa_invert>
    5716:	a8 2e       	mov	r10, r24
    5718:	a8 18       	sub	r10, r8
    571a:	44 c0       	rjmp	.+136    	; 0x57a4 <vfprintf+0x290>
    571c:	85 37       	cpi	r24, 0x75	; 117
    571e:	29 f4       	brne	.+10     	; 0x572a <vfprintf+0x216>
    5720:	2f 7e       	andi	r18, 0xEF	; 239
    5722:	b2 2e       	mov	r11, r18
    5724:	2a e0       	ldi	r18, 0x0A	; 10
    5726:	30 e0       	ldi	r19, 0x00	; 0
    5728:	25 c0       	rjmp	.+74     	; 0x5774 <vfprintf+0x260>
    572a:	f2 2f       	mov	r31, r18
    572c:	f9 7f       	andi	r31, 0xF9	; 249
    572e:	bf 2e       	mov	r11, r31
    5730:	8f 36       	cpi	r24, 0x6F	; 111
    5732:	c1 f0       	breq	.+48     	; 0x5764 <vfprintf+0x250>
    5734:	18 f4       	brcc	.+6      	; 0x573c <vfprintf+0x228>
    5736:	88 35       	cpi	r24, 0x58	; 88
    5738:	79 f0       	breq	.+30     	; 0x5758 <vfprintf+0x244>
    573a:	b4 c0       	rjmp	.+360    	; 0x58a4 <vfprintf+0x390>
    573c:	80 37       	cpi	r24, 0x70	; 112
    573e:	19 f0       	breq	.+6      	; 0x5746 <vfprintf+0x232>
    5740:	88 37       	cpi	r24, 0x78	; 120
    5742:	21 f0       	breq	.+8      	; 0x574c <vfprintf+0x238>
    5744:	af c0       	rjmp	.+350    	; 0x58a4 <vfprintf+0x390>
    5746:	2f 2f       	mov	r18, r31
    5748:	20 61       	ori	r18, 0x10	; 16
    574a:	b2 2e       	mov	r11, r18
    574c:	b4 fe       	sbrs	r11, 4
    574e:	0d c0       	rjmp	.+26     	; 0x576a <vfprintf+0x256>
    5750:	8b 2d       	mov	r24, r11
    5752:	84 60       	ori	r24, 0x04	; 4
    5754:	b8 2e       	mov	r11, r24
    5756:	09 c0       	rjmp	.+18     	; 0x576a <vfprintf+0x256>
    5758:	24 ff       	sbrs	r18, 4
    575a:	0a c0       	rjmp	.+20     	; 0x5770 <vfprintf+0x25c>
    575c:	9f 2f       	mov	r25, r31
    575e:	96 60       	ori	r25, 0x06	; 6
    5760:	b9 2e       	mov	r11, r25
    5762:	06 c0       	rjmp	.+12     	; 0x5770 <vfprintf+0x25c>
    5764:	28 e0       	ldi	r18, 0x08	; 8
    5766:	30 e0       	ldi	r19, 0x00	; 0
    5768:	05 c0       	rjmp	.+10     	; 0x5774 <vfprintf+0x260>
    576a:	20 e1       	ldi	r18, 0x10	; 16
    576c:	30 e0       	ldi	r19, 0x00	; 0
    576e:	02 c0       	rjmp	.+4      	; 0x5774 <vfprintf+0x260>
    5770:	20 e1       	ldi	r18, 0x10	; 16
    5772:	32 e0       	ldi	r19, 0x02	; 2
    5774:	f8 01       	movw	r30, r16
    5776:	b7 fe       	sbrs	r11, 7
    5778:	07 c0       	rjmp	.+14     	; 0x5788 <vfprintf+0x274>
    577a:	60 81       	ld	r22, Z
    577c:	71 81       	ldd	r23, Z+1	; 0x01
    577e:	82 81       	ldd	r24, Z+2	; 0x02
    5780:	93 81       	ldd	r25, Z+3	; 0x03
    5782:	0c 5f       	subi	r16, 0xFC	; 252
    5784:	1f 4f       	sbci	r17, 0xFF	; 255
    5786:	06 c0       	rjmp	.+12     	; 0x5794 <vfprintf+0x280>
    5788:	60 81       	ld	r22, Z
    578a:	71 81       	ldd	r23, Z+1	; 0x01
    578c:	80 e0       	ldi	r24, 0x00	; 0
    578e:	90 e0       	ldi	r25, 0x00	; 0
    5790:	0e 5f       	subi	r16, 0xFE	; 254
    5792:	1f 4f       	sbci	r17, 0xFF	; 255
    5794:	a4 01       	movw	r20, r8
    5796:	0e 94 aa 2c 	call	0x5954	; 0x5954 <__ultoa_invert>
    579a:	a8 2e       	mov	r10, r24
    579c:	a8 18       	sub	r10, r8
    579e:	fb 2d       	mov	r31, r11
    57a0:	ff 77       	andi	r31, 0x7F	; 127
    57a2:	7f 2e       	mov	r7, r31
    57a4:	76 fe       	sbrs	r7, 6
    57a6:	0b c0       	rjmp	.+22     	; 0x57be <vfprintf+0x2aa>
    57a8:	37 2d       	mov	r19, r7
    57aa:	3e 7f       	andi	r19, 0xFE	; 254
    57ac:	a5 14       	cp	r10, r5
    57ae:	50 f4       	brcc	.+20     	; 0x57c4 <vfprintf+0x2b0>
    57b0:	74 fe       	sbrs	r7, 4
    57b2:	0a c0       	rjmp	.+20     	; 0x57c8 <vfprintf+0x2b4>
    57b4:	72 fc       	sbrc	r7, 2
    57b6:	08 c0       	rjmp	.+16     	; 0x57c8 <vfprintf+0x2b4>
    57b8:	37 2d       	mov	r19, r7
    57ba:	3e 7e       	andi	r19, 0xEE	; 238
    57bc:	05 c0       	rjmp	.+10     	; 0x57c8 <vfprintf+0x2b4>
    57be:	ba 2c       	mov	r11, r10
    57c0:	37 2d       	mov	r19, r7
    57c2:	03 c0       	rjmp	.+6      	; 0x57ca <vfprintf+0x2b6>
    57c4:	ba 2c       	mov	r11, r10
    57c6:	01 c0       	rjmp	.+2      	; 0x57ca <vfprintf+0x2b6>
    57c8:	b5 2c       	mov	r11, r5
    57ca:	34 ff       	sbrs	r19, 4
    57cc:	0d c0       	rjmp	.+26     	; 0x57e8 <vfprintf+0x2d4>
    57ce:	fe 01       	movw	r30, r28
    57d0:	ea 0d       	add	r30, r10
    57d2:	f1 1d       	adc	r31, r1
    57d4:	80 81       	ld	r24, Z
    57d6:	80 33       	cpi	r24, 0x30	; 48
    57d8:	11 f4       	brne	.+4      	; 0x57de <vfprintf+0x2ca>
    57da:	39 7e       	andi	r19, 0xE9	; 233
    57dc:	09 c0       	rjmp	.+18     	; 0x57f0 <vfprintf+0x2dc>
    57de:	32 ff       	sbrs	r19, 2
    57e0:	06 c0       	rjmp	.+12     	; 0x57ee <vfprintf+0x2da>
    57e2:	b3 94       	inc	r11
    57e4:	b3 94       	inc	r11
    57e6:	04 c0       	rjmp	.+8      	; 0x57f0 <vfprintf+0x2dc>
    57e8:	83 2f       	mov	r24, r19
    57ea:	86 78       	andi	r24, 0x86	; 134
    57ec:	09 f0       	breq	.+2      	; 0x57f0 <vfprintf+0x2dc>
    57ee:	b3 94       	inc	r11
    57f0:	33 fd       	sbrc	r19, 3
    57f2:	13 c0       	rjmp	.+38     	; 0x581a <vfprintf+0x306>
    57f4:	30 ff       	sbrs	r19, 0
    57f6:	06 c0       	rjmp	.+12     	; 0x5804 <vfprintf+0x2f0>
    57f8:	5a 2c       	mov	r5, r10
    57fa:	b3 14       	cp	r11, r3
    57fc:	18 f4       	brcc	.+6      	; 0x5804 <vfprintf+0x2f0>
    57fe:	53 0c       	add	r5, r3
    5800:	5b 18       	sub	r5, r11
    5802:	b3 2c       	mov	r11, r3
    5804:	b3 14       	cp	r11, r3
    5806:	68 f4       	brcc	.+26     	; 0x5822 <vfprintf+0x30e>
    5808:	b7 01       	movw	r22, r14
    580a:	80 e2       	ldi	r24, 0x20	; 32
    580c:	90 e0       	ldi	r25, 0x00	; 0
    580e:	3c 87       	std	Y+12, r19	; 0x0c
    5810:	0e 94 72 2c 	call	0x58e4	; 0x58e4 <fputc>
    5814:	b3 94       	inc	r11
    5816:	3c 85       	ldd	r19, Y+12	; 0x0c
    5818:	f5 cf       	rjmp	.-22     	; 0x5804 <vfprintf+0x2f0>
    581a:	b3 14       	cp	r11, r3
    581c:	10 f4       	brcc	.+4      	; 0x5822 <vfprintf+0x30e>
    581e:	3b 18       	sub	r3, r11
    5820:	01 c0       	rjmp	.+2      	; 0x5824 <vfprintf+0x310>
    5822:	31 2c       	mov	r3, r1
    5824:	34 ff       	sbrs	r19, 4
    5826:	12 c0       	rjmp	.+36     	; 0x584c <vfprintf+0x338>
    5828:	b7 01       	movw	r22, r14
    582a:	80 e3       	ldi	r24, 0x30	; 48
    582c:	90 e0       	ldi	r25, 0x00	; 0
    582e:	3c 87       	std	Y+12, r19	; 0x0c
    5830:	0e 94 72 2c 	call	0x58e4	; 0x58e4 <fputc>
    5834:	3c 85       	ldd	r19, Y+12	; 0x0c
    5836:	32 ff       	sbrs	r19, 2
    5838:	17 c0       	rjmp	.+46     	; 0x5868 <vfprintf+0x354>
    583a:	31 fd       	sbrc	r19, 1
    583c:	03 c0       	rjmp	.+6      	; 0x5844 <vfprintf+0x330>
    583e:	88 e7       	ldi	r24, 0x78	; 120
    5840:	90 e0       	ldi	r25, 0x00	; 0
    5842:	02 c0       	rjmp	.+4      	; 0x5848 <vfprintf+0x334>
    5844:	88 e5       	ldi	r24, 0x58	; 88
    5846:	90 e0       	ldi	r25, 0x00	; 0
    5848:	b7 01       	movw	r22, r14
    584a:	0c c0       	rjmp	.+24     	; 0x5864 <vfprintf+0x350>
    584c:	83 2f       	mov	r24, r19
    584e:	86 78       	andi	r24, 0x86	; 134
    5850:	59 f0       	breq	.+22     	; 0x5868 <vfprintf+0x354>
    5852:	31 ff       	sbrs	r19, 1
    5854:	02 c0       	rjmp	.+4      	; 0x585a <vfprintf+0x346>
    5856:	8b e2       	ldi	r24, 0x2B	; 43
    5858:	01 c0       	rjmp	.+2      	; 0x585c <vfprintf+0x348>
    585a:	80 e2       	ldi	r24, 0x20	; 32
    585c:	37 fd       	sbrc	r19, 7
    585e:	8d e2       	ldi	r24, 0x2D	; 45
    5860:	b7 01       	movw	r22, r14
    5862:	90 e0       	ldi	r25, 0x00	; 0
    5864:	0e 94 72 2c 	call	0x58e4	; 0x58e4 <fputc>
    5868:	a5 14       	cp	r10, r5
    586a:	38 f4       	brcc	.+14     	; 0x587a <vfprintf+0x366>
    586c:	b7 01       	movw	r22, r14
    586e:	80 e3       	ldi	r24, 0x30	; 48
    5870:	90 e0       	ldi	r25, 0x00	; 0
    5872:	0e 94 72 2c 	call	0x58e4	; 0x58e4 <fputc>
    5876:	5a 94       	dec	r5
    5878:	f7 cf       	rjmp	.-18     	; 0x5868 <vfprintf+0x354>
    587a:	aa 94       	dec	r10
    587c:	f4 01       	movw	r30, r8
    587e:	ea 0d       	add	r30, r10
    5880:	f1 1d       	adc	r31, r1
    5882:	80 81       	ld	r24, Z
    5884:	b7 01       	movw	r22, r14
    5886:	90 e0       	ldi	r25, 0x00	; 0
    5888:	0e 94 72 2c 	call	0x58e4	; 0x58e4 <fputc>
    588c:	a1 10       	cpse	r10, r1
    588e:	f5 cf       	rjmp	.-22     	; 0x587a <vfprintf+0x366>
    5890:	33 20       	and	r3, r3
    5892:	09 f4       	brne	.+2      	; 0x5896 <vfprintf+0x382>
    5894:	51 ce       	rjmp	.-862    	; 0x5538 <vfprintf+0x24>
    5896:	b7 01       	movw	r22, r14
    5898:	80 e2       	ldi	r24, 0x20	; 32
    589a:	90 e0       	ldi	r25, 0x00	; 0
    589c:	0e 94 72 2c 	call	0x58e4	; 0x58e4 <fputc>
    58a0:	3a 94       	dec	r3
    58a2:	f6 cf       	rjmp	.-20     	; 0x5890 <vfprintf+0x37c>
    58a4:	f7 01       	movw	r30, r14
    58a6:	86 81       	ldd	r24, Z+6	; 0x06
    58a8:	97 81       	ldd	r25, Z+7	; 0x07
    58aa:	02 c0       	rjmp	.+4      	; 0x58b0 <vfprintf+0x39c>
    58ac:	8f ef       	ldi	r24, 0xFF	; 255
    58ae:	9f ef       	ldi	r25, 0xFF	; 255
    58b0:	2c 96       	adiw	r28, 0x0c	; 12
    58b2:	e2 e1       	ldi	r30, 0x12	; 18
    58b4:	0c 94 24 2d 	jmp	0x5a48	; 0x5a48 <__epilogue_restores__>

000058b8 <strnlen_P>:
    58b8:	fc 01       	movw	r30, r24
    58ba:	05 90       	lpm	r0, Z+
    58bc:	61 50       	subi	r22, 0x01	; 1
    58be:	70 40       	sbci	r23, 0x00	; 0
    58c0:	01 10       	cpse	r0, r1
    58c2:	d8 f7       	brcc	.-10     	; 0x58ba <strnlen_P+0x2>
    58c4:	80 95       	com	r24
    58c6:	90 95       	com	r25
    58c8:	8e 0f       	add	r24, r30
    58ca:	9f 1f       	adc	r25, r31
    58cc:	08 95       	ret

000058ce <strnlen>:
    58ce:	fc 01       	movw	r30, r24
    58d0:	61 50       	subi	r22, 0x01	; 1
    58d2:	70 40       	sbci	r23, 0x00	; 0
    58d4:	01 90       	ld	r0, Z+
    58d6:	01 10       	cpse	r0, r1
    58d8:	d8 f7       	brcc	.-10     	; 0x58d0 <strnlen+0x2>
    58da:	80 95       	com	r24
    58dc:	90 95       	com	r25
    58de:	8e 0f       	add	r24, r30
    58e0:	9f 1f       	adc	r25, r31
    58e2:	08 95       	ret

000058e4 <fputc>:
    58e4:	0f 93       	push	r16
    58e6:	1f 93       	push	r17
    58e8:	cf 93       	push	r28
    58ea:	df 93       	push	r29
    58ec:	fb 01       	movw	r30, r22
    58ee:	23 81       	ldd	r18, Z+3	; 0x03
    58f0:	21 fd       	sbrc	r18, 1
    58f2:	03 c0       	rjmp	.+6      	; 0x58fa <fputc+0x16>
    58f4:	8f ef       	ldi	r24, 0xFF	; 255
    58f6:	9f ef       	ldi	r25, 0xFF	; 255
    58f8:	28 c0       	rjmp	.+80     	; 0x594a <fputc+0x66>
    58fa:	22 ff       	sbrs	r18, 2
    58fc:	16 c0       	rjmp	.+44     	; 0x592a <fputc+0x46>
    58fe:	46 81       	ldd	r20, Z+6	; 0x06
    5900:	57 81       	ldd	r21, Z+7	; 0x07
    5902:	24 81       	ldd	r18, Z+4	; 0x04
    5904:	35 81       	ldd	r19, Z+5	; 0x05
    5906:	42 17       	cp	r20, r18
    5908:	53 07       	cpc	r21, r19
    590a:	44 f4       	brge	.+16     	; 0x591c <fputc+0x38>
    590c:	a0 81       	ld	r26, Z
    590e:	b1 81       	ldd	r27, Z+1	; 0x01
    5910:	9d 01       	movw	r18, r26
    5912:	2f 5f       	subi	r18, 0xFF	; 255
    5914:	3f 4f       	sbci	r19, 0xFF	; 255
    5916:	31 83       	std	Z+1, r19	; 0x01
    5918:	20 83       	st	Z, r18
    591a:	8c 93       	st	X, r24
    591c:	26 81       	ldd	r18, Z+6	; 0x06
    591e:	37 81       	ldd	r19, Z+7	; 0x07
    5920:	2f 5f       	subi	r18, 0xFF	; 255
    5922:	3f 4f       	sbci	r19, 0xFF	; 255
    5924:	37 83       	std	Z+7, r19	; 0x07
    5926:	26 83       	std	Z+6, r18	; 0x06
    5928:	10 c0       	rjmp	.+32     	; 0x594a <fputc+0x66>
    592a:	eb 01       	movw	r28, r22
    592c:	09 2f       	mov	r16, r25
    592e:	18 2f       	mov	r17, r24
    5930:	00 84       	ldd	r0, Z+8	; 0x08
    5932:	f1 85       	ldd	r31, Z+9	; 0x09
    5934:	e0 2d       	mov	r30, r0
    5936:	09 95       	icall
    5938:	89 2b       	or	r24, r25
    593a:	e1 f6       	brne	.-72     	; 0x58f4 <fputc+0x10>
    593c:	8e 81       	ldd	r24, Y+6	; 0x06
    593e:	9f 81       	ldd	r25, Y+7	; 0x07
    5940:	01 96       	adiw	r24, 0x01	; 1
    5942:	9f 83       	std	Y+7, r25	; 0x07
    5944:	8e 83       	std	Y+6, r24	; 0x06
    5946:	81 2f       	mov	r24, r17
    5948:	90 2f       	mov	r25, r16
    594a:	df 91       	pop	r29
    594c:	cf 91       	pop	r28
    594e:	1f 91       	pop	r17
    5950:	0f 91       	pop	r16
    5952:	08 95       	ret

00005954 <__ultoa_invert>:
    5954:	fa 01       	movw	r30, r20
    5956:	aa 27       	eor	r26, r26
    5958:	28 30       	cpi	r18, 0x08	; 8
    595a:	51 f1       	breq	.+84     	; 0x59b0 <__ultoa_invert+0x5c>
    595c:	20 31       	cpi	r18, 0x10	; 16
    595e:	81 f1       	breq	.+96     	; 0x59c0 <__ultoa_invert+0x6c>
    5960:	e8 94       	clt
    5962:	6f 93       	push	r22
    5964:	6e 7f       	andi	r22, 0xFE	; 254
    5966:	6e 5f       	subi	r22, 0xFE	; 254
    5968:	7f 4f       	sbci	r23, 0xFF	; 255
    596a:	8f 4f       	sbci	r24, 0xFF	; 255
    596c:	9f 4f       	sbci	r25, 0xFF	; 255
    596e:	af 4f       	sbci	r26, 0xFF	; 255
    5970:	b1 e0       	ldi	r27, 0x01	; 1
    5972:	3e d0       	rcall	.+124    	; 0x59f0 <__ultoa_invert+0x9c>
    5974:	b4 e0       	ldi	r27, 0x04	; 4
    5976:	3c d0       	rcall	.+120    	; 0x59f0 <__ultoa_invert+0x9c>
    5978:	67 0f       	add	r22, r23
    597a:	78 1f       	adc	r23, r24
    597c:	89 1f       	adc	r24, r25
    597e:	9a 1f       	adc	r25, r26
    5980:	a1 1d       	adc	r26, r1
    5982:	68 0f       	add	r22, r24
    5984:	79 1f       	adc	r23, r25
    5986:	8a 1f       	adc	r24, r26
    5988:	91 1d       	adc	r25, r1
    598a:	a1 1d       	adc	r26, r1
    598c:	6a 0f       	add	r22, r26
    598e:	71 1d       	adc	r23, r1
    5990:	81 1d       	adc	r24, r1
    5992:	91 1d       	adc	r25, r1
    5994:	a1 1d       	adc	r26, r1
    5996:	20 d0       	rcall	.+64     	; 0x59d8 <__ultoa_invert+0x84>
    5998:	09 f4       	brne	.+2      	; 0x599c <__ultoa_invert+0x48>
    599a:	68 94       	set
    599c:	3f 91       	pop	r19
    599e:	2a e0       	ldi	r18, 0x0A	; 10
    59a0:	26 9f       	mul	r18, r22
    59a2:	11 24       	eor	r1, r1
    59a4:	30 19       	sub	r19, r0
    59a6:	30 5d       	subi	r19, 0xD0	; 208
    59a8:	31 93       	st	Z+, r19
    59aa:	de f6       	brtc	.-74     	; 0x5962 <__ultoa_invert+0xe>
    59ac:	cf 01       	movw	r24, r30
    59ae:	08 95       	ret
    59b0:	46 2f       	mov	r20, r22
    59b2:	47 70       	andi	r20, 0x07	; 7
    59b4:	40 5d       	subi	r20, 0xD0	; 208
    59b6:	41 93       	st	Z+, r20
    59b8:	b3 e0       	ldi	r27, 0x03	; 3
    59ba:	0f d0       	rcall	.+30     	; 0x59da <__ultoa_invert+0x86>
    59bc:	c9 f7       	brne	.-14     	; 0x59b0 <__ultoa_invert+0x5c>
    59be:	f6 cf       	rjmp	.-20     	; 0x59ac <__ultoa_invert+0x58>
    59c0:	46 2f       	mov	r20, r22
    59c2:	4f 70       	andi	r20, 0x0F	; 15
    59c4:	40 5d       	subi	r20, 0xD0	; 208
    59c6:	4a 33       	cpi	r20, 0x3A	; 58
    59c8:	18 f0       	brcs	.+6      	; 0x59d0 <__ultoa_invert+0x7c>
    59ca:	49 5d       	subi	r20, 0xD9	; 217
    59cc:	31 fd       	sbrc	r19, 1
    59ce:	40 52       	subi	r20, 0x20	; 32
    59d0:	41 93       	st	Z+, r20
    59d2:	02 d0       	rcall	.+4      	; 0x59d8 <__ultoa_invert+0x84>
    59d4:	a9 f7       	brne	.-22     	; 0x59c0 <__ultoa_invert+0x6c>
    59d6:	ea cf       	rjmp	.-44     	; 0x59ac <__ultoa_invert+0x58>
    59d8:	b4 e0       	ldi	r27, 0x04	; 4
    59da:	a6 95       	lsr	r26
    59dc:	97 95       	ror	r25
    59de:	87 95       	ror	r24
    59e0:	77 95       	ror	r23
    59e2:	67 95       	ror	r22
    59e4:	ba 95       	dec	r27
    59e6:	c9 f7       	brne	.-14     	; 0x59da <__ultoa_invert+0x86>
    59e8:	00 97       	sbiw	r24, 0x00	; 0
    59ea:	61 05       	cpc	r22, r1
    59ec:	71 05       	cpc	r23, r1
    59ee:	08 95       	ret
    59f0:	9b 01       	movw	r18, r22
    59f2:	ac 01       	movw	r20, r24
    59f4:	0a 2e       	mov	r0, r26
    59f6:	06 94       	lsr	r0
    59f8:	57 95       	ror	r21
    59fa:	47 95       	ror	r20
    59fc:	37 95       	ror	r19
    59fe:	27 95       	ror	r18
    5a00:	ba 95       	dec	r27
    5a02:	c9 f7       	brne	.-14     	; 0x59f6 <__ultoa_invert+0xa2>
    5a04:	62 0f       	add	r22, r18
    5a06:	73 1f       	adc	r23, r19
    5a08:	84 1f       	adc	r24, r20
    5a0a:	95 1f       	adc	r25, r21
    5a0c:	a0 1d       	adc	r26, r0
    5a0e:	08 95       	ret

00005a10 <__prologue_saves__>:
    5a10:	2f 92       	push	r2
    5a12:	3f 92       	push	r3
    5a14:	4f 92       	push	r4
    5a16:	5f 92       	push	r5
    5a18:	6f 92       	push	r6
    5a1a:	7f 92       	push	r7
    5a1c:	8f 92       	push	r8
    5a1e:	9f 92       	push	r9
    5a20:	af 92       	push	r10
    5a22:	bf 92       	push	r11
    5a24:	cf 92       	push	r12
    5a26:	df 92       	push	r13
    5a28:	ef 92       	push	r14
    5a2a:	ff 92       	push	r15
    5a2c:	0f 93       	push	r16
    5a2e:	1f 93       	push	r17
    5a30:	cf 93       	push	r28
    5a32:	df 93       	push	r29
    5a34:	cd b7       	in	r28, 0x3d	; 61
    5a36:	de b7       	in	r29, 0x3e	; 62
    5a38:	ca 1b       	sub	r28, r26
    5a3a:	db 0b       	sbc	r29, r27
    5a3c:	0f b6       	in	r0, 0x3f	; 63
    5a3e:	f8 94       	cli
    5a40:	de bf       	out	0x3e, r29	; 62
    5a42:	0f be       	out	0x3f, r0	; 63
    5a44:	cd bf       	out	0x3d, r28	; 61
    5a46:	09 94       	ijmp

00005a48 <__epilogue_restores__>:
    5a48:	2a 88       	ldd	r2, Y+18	; 0x12
    5a4a:	39 88       	ldd	r3, Y+17	; 0x11
    5a4c:	48 88       	ldd	r4, Y+16	; 0x10
    5a4e:	5f 84       	ldd	r5, Y+15	; 0x0f
    5a50:	6e 84       	ldd	r6, Y+14	; 0x0e
    5a52:	7d 84       	ldd	r7, Y+13	; 0x0d
    5a54:	8c 84       	ldd	r8, Y+12	; 0x0c
    5a56:	9b 84       	ldd	r9, Y+11	; 0x0b
    5a58:	aa 84       	ldd	r10, Y+10	; 0x0a
    5a5a:	b9 84       	ldd	r11, Y+9	; 0x09
    5a5c:	c8 84       	ldd	r12, Y+8	; 0x08
    5a5e:	df 80       	ldd	r13, Y+7	; 0x07
    5a60:	ee 80       	ldd	r14, Y+6	; 0x06
    5a62:	fd 80       	ldd	r15, Y+5	; 0x05
    5a64:	0c 81       	ldd	r16, Y+4	; 0x04
    5a66:	1b 81       	ldd	r17, Y+3	; 0x03
    5a68:	aa 81       	ldd	r26, Y+2	; 0x02
    5a6a:	b9 81       	ldd	r27, Y+1	; 0x01
    5a6c:	ce 0f       	add	r28, r30
    5a6e:	d1 1d       	adc	r29, r1
    5a70:	0f b6       	in	r0, 0x3f	; 63
    5a72:	f8 94       	cli
    5a74:	de bf       	out	0x3e, r29	; 62
    5a76:	0f be       	out	0x3f, r0	; 63
    5a78:	cd bf       	out	0x3d, r28	; 61
    5a7a:	ed 01       	movw	r28, r26
    5a7c:	08 95       	ret

00005a7e <_exit>:
    5a7e:	f8 94       	cli

00005a80 <__stop_program>:
    5a80:	ff cf       	rjmp	.-2      	; 0x5a80 <__stop_program>
