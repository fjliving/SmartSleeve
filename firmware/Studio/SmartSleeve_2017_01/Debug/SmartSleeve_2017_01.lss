
SmartSleeve_2017_01.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000050  00800100  00005ad6  00005b6a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00005ad6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000111  00800150  00800150  00005bba  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00005bba  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00005c18  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000728  00000000  00000000  00005c58  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000b2e9  00000000  00000000  00006380  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000025e0  00000000  00000000  00011669  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000038de  00000000  00000000  00013c49  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00001668  00000000  00000000  00017528  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001b4b  00000000  00000000  00018b90  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000096aa  00000000  00000000  0001a6db  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000007f8  00000000  00000000  00023d85  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 dc 1a 	jmp	0x35b8	; 0x35b8 <__ctors_end>
       4:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
       8:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
       c:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      10:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      14:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      18:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      1c:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      20:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      24:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      28:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      2c:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      30:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      34:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      38:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      3c:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      40:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      44:	0c 94 54 1f 	jmp	0x3ea8	; 0x3ea8 <__vector_17>
      48:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      4c:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      50:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      54:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      58:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      5c:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      60:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      64:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      68:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      6c:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      70:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      74:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      78:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      7c:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      80:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      84:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      88:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      8c:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      90:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      94:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      98:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      9c:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      a0:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      a4:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      a8:	0c 94 f9 1a 	jmp	0x35f2	; 0x35f2 <__bad_interrupt>
      ac:	a3 20       	and	r10, r3
      ae:	cb 20       	and	r12, r11
      b0:	cf 20       	and	r12, r15
      b2:	e0 20       	and	r14, r0
      b4:	e4 20       	and	r14, r4
      b6:	9d 20       	and	r9, r13
      b8:	a0 20       	and	r10, r0
      ba:	94 26       	eor	r9, r20
      bc:	9c 26       	eor	r9, r28
      be:	b6 26       	eor	r11, r22
      c0:	a6 26       	eor	r10, r22
      c2:	b6 26       	eor	r11, r22
      c4:	b6 26       	eor	r11, r22
      c6:	b6 26       	eor	r11, r22
      c8:	b6 26       	eor	r11, r22
      ca:	b6 26       	eor	r11, r22
      cc:	b6 26       	eor	r11, r22
      ce:	b6 26       	eor	r11, r22
      d0:	b6 26       	eor	r11, r22
      d2:	b6 26       	eor	r11, r22
      d4:	b6 26       	eor	r11, r22
      d6:	b6 26       	eor	r11, r22
      d8:	b6 26       	eor	r11, r22
      da:	b6 26       	eor	r11, r22
      dc:	b6 26       	eor	r11, r22
      de:	b6 26       	eor	r11, r22
      e0:	b6 26       	eor	r11, r22
      e2:	b6 26       	eor	r11, r22
      e4:	b6 26       	eor	r11, r22
      e6:	b6 26       	eor	r11, r22
      e8:	b6 26       	eor	r11, r22
      ea:	b6 26       	eor	r11, r22
      ec:	b6 26       	eor	r11, r22
      ee:	b6 26       	eor	r11, r22
      f0:	b6 26       	eor	r11, r22
      f2:	b6 26       	eor	r11, r22
      f4:	b6 26       	eor	r11, r22
      f6:	8e 26       	eor	r8, r30
      f8:	b6 26       	eor	r11, r22
      fa:	b6 26       	eor	r11, r22
      fc:	b6 26       	eor	r11, r22
      fe:	b6 26       	eor	r11, r22
     100:	b6 26       	eor	r11, r22
     102:	b6 26       	eor	r11, r22
     104:	b6 26       	eor	r11, r22
     106:	b6 26       	eor	r11, r22
     108:	82 26       	eor	r8, r18
     10a:	b6 26       	eor	r11, r22
     10c:	b6 26       	eor	r11, r22
     10e:	b6 26       	eor	r11, r22
     110:	b6 26       	eor	r11, r22
     112:	b6 26       	eor	r11, r22
     114:	b6 26       	eor	r11, r22
     116:	b6 26       	eor	r11, r22
     118:	b6 26       	eor	r11, r22
     11a:	b6 26       	eor	r11, r22
     11c:	b6 26       	eor	r11, r22
     11e:	ac 26       	eor	r10, r28
     120:	b1 26       	eor	r11, r17
     122:	07 63       	ori	r16, 0x37	; 55
     124:	42 36       	cpi	r20, 0x62	; 98
     126:	b7 9b       	sbis	0x16, 7	; 22
     128:	d8 a7       	std	Y+40, r29	; 0x28
     12a:	1a 39       	cpi	r17, 0x9A	; 154
     12c:	68 56       	subi	r22, 0x68	; 104
     12e:	18 ae       	std	Y+56, r1	; 0x38
     130:	ba ab       	std	Y+50, r27	; 0x32
     132:	55 8c       	ldd	r5, Z+29	; 0x1d
     134:	1d 3c       	cpi	r17, 0xCD	; 205
     136:	b7 cc       	rjmp	.-1682   	; 0xfffffaa6 <__eeprom_end+0xff7efaa6>
     138:	57 63       	ori	r21, 0x37	; 55
     13a:	bd 6d       	ori	r27, 0xDD	; 221
     13c:	ed fd       	.word	0xfded	; ????
     13e:	75 3e       	cpi	r23, 0xE5	; 229
     140:	f6 17       	cp	r31, r22
     142:	72 31       	cpi	r23, 0x12	; 18
     144:	bf 00       	.word	0x00bf	; ????
     146:	00 00       	nop
     148:	80 3f       	cpi	r24, 0xF0	; 240
     14a:	08 00       	.word	0x0008	; ????
     14c:	00 00       	nop
     14e:	be 92       	st	-X, r11
     150:	24 49       	sbci	r18, 0x94	; 148
     152:	12 3e       	cpi	r17, 0xE2	; 226
     154:	ab aa       	std	Y+51, r10	; 0x33
     156:	aa 2a       	or	r10, r26
     158:	be cd       	rjmp	.-1156   	; 0xfffffcd6 <__eeprom_end+0xff7efcd6>
     15a:	cc cc       	rjmp	.-1640   	; 0xfffffaf4 <__eeprom_end+0xff7efaf4>
     15c:	4c 3e       	cpi	r20, 0xEC	; 236
     15e:	00 00       	nop
     160:	00 80       	ld	r0, Z
     162:	be ab       	std	Y+54, r27	; 0x36
     164:	aa aa       	std	Y+50, r10	; 0x32
     166:	aa 3e       	cpi	r26, 0xEA	; 234
     168:	00 00       	nop
     16a:	00 00       	nop
     16c:	bf 00       	.word	0x00bf	; ????
     16e:	00 00       	nop
     170:	80 3f       	cpi	r24, 0xF0	; 240
     172:	00 00       	nop
     174:	00 00       	nop
     176:	00 08       	sbc	r0, r0
     178:	41 78       	andi	r20, 0x81	; 129
     17a:	d3 bb       	out	0x13, r29	; 19
     17c:	43 87       	std	Z+11, r20	; 0x0b
     17e:	d1 13       	cpse	r29, r17
     180:	3d 19       	sub	r19, r13
     182:	0e 3c       	cpi	r16, 0xCE	; 206
     184:	c3 bd       	out	0x23, r28	; 35
     186:	42 82       	std	Z+2, r4	; 0x02
     188:	ad 2b       	or	r26, r29
     18a:	3e 68       	ori	r19, 0x8E	; 142
     18c:	ec 82       	std	Y+4, r14	; 0x04
     18e:	76 be       	out	0x36, r7	; 54
     190:	d9 8f       	std	Y+25, r29	; 0x19
     192:	e1 a9       	ldd	r30, Z+49	; 0x31
     194:	3e 4c       	sbci	r19, 0xCE	; 206
     196:	80 ef       	ldi	r24, 0xF0	; 240
     198:	ff be       	out	0x3f, r15	; 63
     19a:	01 c4       	rjmp	.+2050   	; 0x99e <__LOCK_REGION_LENGTH__+0x59e>
     19c:	ff 7f       	andi	r31, 0xFF	; 255
     19e:	3f 00       	.word	0x003f	; ????
     1a0:	00 00       	nop
	...

000001a4 <__trampolines_end>:
     1a4:	00 00       	nop
     1a6:	25 00       	.word	0x0025	; ????
     1a8:	28 00       	.word	0x0028	; ????
     1aa:	2b 00       	.word	0x002b	; ????
     1ac:	2e 00       	.word	0x002e	; ????
     1ae:	31 00       	.word	0x0031	; ????

000001b0 <u8g_avr_ddr_P>:
     1b0:	00 00 24 00 27 00 2a 00 2d 00 30 00                 ..$.'.*.-.0.

000001bc <u8g_dev_st7565_lm6059_sleep_off>:
     1bc:	ff e0 ff d1 a4 af ff 32 ff d0 ff fe                 .......2....

000001c8 <u8g_dev_st7565_lm6059_sleep_on>:
     1c8:	ff e0 ff d1 ac 00 ae a5 ff d0 ff fe                 ............

000001d4 <u8g_dev_st7565_lm6059_data_start>:
     1d4:	ff e0 ff d1 10 01 ff fe                             ........

000001dc <u8g_dev_st7565_lm6059_init_seq>:
     1dc:	ff d0 ff e0 ff d1 ff cf a3 a0 c8 60 2c ff 32 2e     ...........`,.2.
     1ec:	ff 32 2f ff 32 26 a6 81 18 af ff 64 a5 ff 64 ff     .2/.2&.....d..d.
     1fc:	64 a4 ff d0 ff fe                                   d.....

00000202 <u8g_font_fub30r>:
     202:	00 3b 36 fd f5 1e 09 a3 15 b6 20 7f f9 21 f5 1f     .;6....... ..!..
     212:	f8 00 00 00 0c 00 00 05 1e 1e 10 05 00 f8 f8 f8     ................
     222:	f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8     ................
     232:	f8 f8 f8 00 00 00 f8 f8 f8 f8 f8 0f 0c 18 15 03     ................
     242:	12 fc 7e fc 7e fc 7e fc 7e f8 7e f8 7e f8 3c f8     ..~.~.~.~.~.~.<.
     252:	3c 78 3c 78 3c 78 3c 78 3c 19 1e 78 1d 02 00 00     <x<x<x<x<..x....
     262:	3c 1e 00 00 3c 1e 00 00 78 3c 00 00 78 3c 00 00     <...<...x<..x<..
     272:	78 3c 00 00 78 78 00 00 f0 78 00 00 f0 78 00 0f     x<..xx...x...x..
     282:	ff ff 80 1f ff ff 00 1f ff ff 00 1f ff ff 00 01     ................
     292:	e0 e0 00 03 c1 e0 00 03 c1 e0 00 03 c1 e0 00 07     ................
     2a2:	83 c0 00 07 83 c0 00 7f ff fc 00 ff ff f8 00 ff     ................
     2b2:	ff f8 00 ff ff f8 00 0f 07 80 00 1e 0f 00 00 1e     ................
     2c2:	0f 00 00 1e 0f 00 00 3e 1e 00 00 3c 1e 00 00 3c     .......>...<...<
     2d2:	1e 00 00 3c 1e 00 00 15 25 6f 17 01 fc 00 60 00     ...<....%o....`.
     2e2:	00 60 00 00 60 00 03 fe 00 0f ff 80 1f ff c0 3f     .`..`..........?
     2f2:	ff e0 7f 6f e0 7e 63 f0 7c 63 f0 7c 61 f0 7c 60     ...o.~c.|c.|a.|`
     302:	00 7c 60 00 7e 60 00 7f e0 00 7f f0 00 3f fe 00     .|`.~`.......?..
     312:	1f ff 80 07 ff e0 00 ff f0 00 7f f0 00 67 f8 00     .............g..
     322:	61 f8 f8 61 f8 f8 60 f8 fc 61 f8 fc 61 f8 7e 63     a..a..`..a..a.~c
     332:	f0 7f ff f0 3f ff e0 1f ff c0 0f ff 80 03 fe 00     ....?...........
     342:	00 60 00 00 60 00 00 60 00 00 60 00 25 1e 96 29     .`..`..`..`.%..)
     352:	02 00 07 e0 00 78 00 1f f8 00 f0 00 3f fc 00 f0     .....x......?...
     362:	00 7c 3e 01 e0 00 78 1e 03 e0 00 f0 0f 03 c0 00     .|>...x.........
     372:	f0 0f 07 c0 00 f0 0f 07 80 00 f0 0f 0f 00 00 f0     ................
     382:	0f 0f 00 00 f0 0f 1e 00 00 f0 0f 1e 00 00 78 1e     ..............x.
     392:	3c 00 00 7c 3e 7c 00 00 3f fc 78 3f 00 1f f8 f8     <..|>|..?.x?....
     3a2:	ff c0 07 e0 f1 ff e0 00 01 e3 e1 f0 00 01 e3 c0     ................
     3b2:	f0 00 03 c7 80 78 00 03 c7 80 78 00 07 87 80 78     .....x....x....x
     3c2:	00 07 87 80 78 00 0f 07 80 78 00 1f 07 80 78 00     ....x....x....x.
     3d2:	1e 03 c0 f0 00 3e 03 c0 f0 00 3c 01 f3 e0 00 78     .....>....<....x
     3e2:	01 ff c0 00 78 00 7f 80 1c 1e 78 1f 02 01 03 ff     ....x.....x.....
     3f2:	00 00 0f ff 80 00 1f ff c0 00 3f 8f e0 00 3f 07     ..........?...?.
     402:	e0 00 3e 03 e0 00 3f 07 e0 00 3f 07 e0 00 1f 0f     ..>...?...?.....
     412:	c0 00 1f 9f c0 00 0f ff 80 00 0f ff 00 00 07 fc     ................
     422:	00 00 0f f8 00 00 1f f8 0f 80 3f fc 0f 80 3f 7e     ..........?...?~
     432:	0f 80 7e 7f 0f 80 7e 3f 8f 80 fc 1f cf 80 fc 0f     ..~...~?........
     442:	ff 00 f8 07 ff 00 f8 03 ff 00 fc 01 fe 00 fc 00     ................
     452:	fe 00 7e 00 fe 00 7f 83 ff 00 3f ff ff 80 1f ff     ..~.......?.....
     462:	ff e0 07 ff 87 f0 06 0c 0c 10 05 12 fc fc fc 7c     ...............|
     472:	7c 7c 7c 7c 78 78 78 78 09 24 48 10 04 fb 0f 80     ||||xxxx.$H.....
     482:	1f 00 1f 00 1f 00 3e 00 3e 00 3e 00 7e 00 7c 00     ......>.>.>.~.|.
     492:	7c 00 7c 00 7c 00 fc 00 fc 00 fc 00 fc 00 f8 00     |.|.|...........
     4a2:	f8 00 f8 00 f8 00 f8 00 fc 00 fc 00 fc 00 7c 00     ..............|.
     4b2:	7c 00 7c 00 7c 00 7e 00 3e 00 3e 00 3e 00 1f 00     |.|.|.~.>.>.>...
     4c2:	1f 00 1f 00 0f 80 08 24 24 10 04 fb f0 f8 78 7c     .......$$.....x|
     4d2:	7c 7c 3e 3e 3e 3f 3f 1f 1f 1f 1f 1f 1f 1f 1f 1f     ||>>>??.........
     4e2:	1f 1f 1f 1f 3f 3f 3f 3e 3e 3e 7c 7c 7c f8 f8 f0     ....???>>>|||...
     4f2:	10 10 20 1a 05 0e 04 20 1c 38 1e 78 1e 78 0f f0     .. .... .8.x.x..
     502:	07 e0 e3 c7 ff ff ff ff f3 cf 07 e0 0f f0 1e 78     ...............x
     512:	1e 78 1c 38 04 20 18 19 4b 28 08 00 00 38 00 00     .x.8. ..K(...8..
     522:	38 00 00 38 00 00 38 00 00 38 00 00 38 00 00 38     8..8..8..8..8..8
     532:	00 00 38 00 00 38 00 00 38 00 00 38 00 ff ff ff     ..8..8..8..8....
     542:	ff ff ff ff ff ff 00 38 00 00 38 00 00 38 00 00     .......8..8..8..
     552:	38 00 00 38 00 00 38 00 00 38 00 00 38 00 00 38     8..8..8..8..8..8
     562:	00 00 38 00 00 38 00 08 0a 0a 0c 02 fb 1f 1f 3e     ..8..8.........>
     572:	3e 3c 7c 78 78 f0 f0 0a 05 0a 0e 02 08 ff c0 ff     ><|xx...........
     582:	c0 ff c0 ff c0 ff c0 05 05 05 0c 04 00 f8 f8 f8     ................
     592:	f8 f8 0d 20 40 11 02 fe 00 78 00 78 00 78 00 f0     ... @....x.x.x..
     5a2:	00 f0 00 f0 01 e0 01 e0 01 e0 03 c0 03 c0 03 c0     ................
     5b2:	03 c0 07 80 07 80 07 80 0f 00 0f 00 0f 00 0e 00     ................
     5c2:	1e 00 1e 00 1e 00 3c 00 3c 00 3c 00 78 00 78 00     ......<.<.<.x.x.
     5d2:	78 00 78 00 f0 00 f0 00 14 1e 5a 17 01 01 03 fc     x.x.......Z.....
     5e2:	00 0f ff 00 1f ff 80 3f 0f 80 3e 07 c0 7c 03 c0     .......?..>..|..
     5f2:	7c 03 e0 7c 03 e0 7c 03 e0 f8 01 f0 f8 01 f0 f8     |..|..|.........
     602:	01 f0 f8 01 f0 f8 01 f0 f8 01 f0 f8 01 f0 f8 01     ................
     612:	f0 f8 01 f0 f8 01 f0 f8 01 f0 f8 01 f0 7c 03 e0     .............|..
     622:	7c 03 e0 7c 03 e0 7c 03 e0 3e 07 c0 3f 0f 80 1f     |..|..|..>..?...
     632:	ff 80 0f ff 00 03 fc 00 0c 1e 3c 17 04 00 01 f0     ..........<.....
     642:	03 f0 0f f0 3f f0 ff f0 ff f0 fd f0 f9 f0 e1 f0     ....?...........
     652:	81 f0 01 f0 01 f0 01 f0 01 f0 01 f0 01 f0 01 f0     ................
     662:	01 f0 01 f0 01 f0 01 f0 01 f0 01 f0 01 f0 01 f0     ................
     672:	01 f0 01 f0 01 f0 01 f0 01 f0 14 1e 5a 17 01 01     ............Z...
     682:	03 ff 00 07 ff 80 1f ff c0 1f ff e0 3f ff f0 3f     ............?..?
     692:	03 f0 7e 01 f0 7e 01 f0 7c 01 f0 00 01 f0 00 03     ..~..~..|.......
     6a2:	f0 00 03 f0 00 07 e0 00 0f e0 00 0f c0 00 1f 80     ................
     6b2:	00 3f 00 00 fe 00 01 fc 00 03 f8 00 07 f0 00 0f     .?..............
     6c2:	e0 00 3f 80 00 7f 00 00 fc 00 00 ff ff f0 ff ff     ..?.............
     6d2:	f0 ff ff f0 ff ff f0 ff ff f0 13 1e 5a 17 02 01     ............Z...
     6e2:	07 fc 00 1f ff 00 3f ff 80 7f ff 80 7f ff c0 fc     ......?.........
     6f2:	0f c0 fc 07 c0 f8 07 c0 00 07 c0 00 07 c0 00 0f     ................
     702:	c0 00 3f c0 03 ff 80 03 fe 00 03 fc 00 03 ff 00     ..?.............
     712:	03 ff 80 00 1f c0 00 07 e0 00 07 e0 00 07 e0 00     ................
     722:	03 e0 f8 07 e0 fc 07 e0 fc 07 c0 7e 0f c0 7f ff     ...........~....
     732:	80 3f ff 80 1f ff 00 0f fc 00 15 1e 5a 17 01 00     .?..........Z...
     742:	00 3f 80 00 3f 80 00 7f 80 00 ff 80 00 ff 80 01     .?..?...........
     752:	ff 80 01 ff 80 03 ef 80 03 cf 80 07 cf 80 0f 8f     ................
     762:	80 0f 8f 80 1f 0f 80 1f 0f 80 3e 0f 80 3e 0f 80     ..........>..>..
     772:	7c 0f 80 fc 0f 80 f8 0f 80 ff ff f8 ff ff f8 ff     |...............
     782:	ff f8 ff ff f8 ff ff f8 00 0f 80 00 0f 80 00 0f     ................
     792:	80 00 0f 80 00 0f 80 00 0f 80 13 1e 5a 17 02 00     ............Z...
     7a2:	7f ff c0 7f ff c0 7f ff c0 7f ff c0 7f ff c0 7c     ...............|
     7b2:	00 00 7c 00 00 7c 00 00 7c 00 00 7c 00 00 7c 00     ..|..|..|..|..|.
     7c2:	00 7c fc 00 7d ff 00 7f ff 80 7f ff c0 7f 0f e0     .|..}...........
     7d2:	7e 07 e0 7c 03 e0 00 03 e0 00 03 e0 00 03 e0 00     ~..|............
     7e2:	03 e0 00 03 e0 f8 07 e0 fc 07 e0 fc 0f c0 7f ff     ................
     7f2:	80 7f ff 80 3f fe 00 0f fc 00 14 1e 5a 17 01 01     ....?.......Z...
     802:	03 fe 00 07 ff 00 0f ff 80 1f ff c0 3f ff c0 3f     ............?..?
     812:	07 e0 7e 03 e0 7e 03 e0 7c 00 00 7c 00 00 fc 00     ..~..~..|..|....
     822:	00 f8 00 00 f9 ff 00 fb ff 80 ff ff c0 ff 0f e0     ................
     832:	fe 07 e0 fe 03 f0 fc 03 f0 fc 03 f0 fc 01 f0 fc     ................
     842:	01 f0 7c 03 f0 7c 03 f0 7e 03 e0 3f 07 e0 3f ff     ..|..|..~..?..?.
     852:	c0 1f ff 80 0f ff 00 03 fe 00 13 1e 5a 17 02 00     ............Z...
     862:	ff ff e0 ff ff e0 ff ff e0 ff ff e0 ff ff e0 00     ................
     872:	07 e0 00 07 e0 00 07 c0 00 0f c0 00 0f c0 00 1f     ................
     882:	80 00 1f 80 00 3f 00 00 3f 00 00 3f 00 00 7e 00     .....?..?..?..~.
     892:	00 7e 00 00 fc 00 00 fc 00 01 fc 00 01 f8 00 01     .~..............
     8a2:	f8 00 03 f0 00 03 f0 00 07 f0 00 07 e0 00 0f e0     ................
     8b2:	00 0f c0 00 0f c0 00 1f c0 00 14 1e 5a 17 01 01     ............Z...
     8c2:	07 fe 00 1f ff 80 3f ff c0 7f ff e0 7f ff e0 7e     ......?........~
     8d2:	07 e0 7c 03 e0 7c 03 e0 7c 03 e0 7c 03 e0 7e 07     ..|..|..|..|..~.
     8e2:	e0 7f 0f c0 3f ff 80 0f ff 00 07 fc 00 1f ff 00     ....?...........
     8f2:	3f ff c0 7f 0f e0 7c 07 e0 fc 03 f0 fc 03 f0 f8     ?.....|.........
     902:	01 f0 f8 03 f0 fc 03 f0 fc 03 f0 fe 07 f0 7f ff     ................
     912:	e0 3f ff c0 1f ff 80 0f ff 00 14 1e 5a 17 01 01     .?..........Z...
     922:	03 fc 00 0f ff 00 1f ff 80 3f ff c0 7f ff c0 7e     .........?.....~
     932:	07 e0 fc 07 e0 fc 03 e0 fc 03 f0 f8 03 f0 f8 03     ................
     942:	f0 fc 03 f0 fc 07 f0 7c 07 f0 7f 0f f0 3f ff f0     .......|.....?..
     952:	3f fd f0 1f f9 f0 07 e1 f0 00 03 f0 00 03 e0 00     ?...............
     962:	03 e0 00 03 e0 7c 07 e0 7c 07 c0 7e 0f c0 3f ff     .....|..|..~..?.
     972:	80 1f ff 00 0f fe 00 07 fc 00 05 14 14 0c 05 00     ................
     982:	f8 f8 f8 f8 f8 00 00 00 00 00 00 00 00 00 00 f8     ................
     992:	f8 f8 f8 f8 09 19 32 0d 02 fb 1f 00 1f 00 1f 00     ......2.........
     9a2:	1f 00 1f 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     9ba:	1f 80 1f 00 3f 00 3e 00 3e 00 7c 00 7c 00 78 00     ....?.>.>.|.|.x.
     9ca:	f8 00 f0 00 18 15 3f 28 08 02 00 00 01 00 00 0f     ......?(........
     9da:	00 00 3f 00 01 fc 00 07 e0 00 3f 00 00 fc 00 07     ..?.......?.....
     9ea:	e0 00 3f 00 00 fc 00 00 e0 00 00 f8 00 00 7e 00     ..?...........~.
     9fa:	00 0f c0 00 03 f0 00 00 7e 00 00 1f c0 00 03 f0     ........~.......
     a0a:	00 00 7e 00 00 1f 00 00 03 18 0a 1e 28 08 07 ff     ..~.........(...
     a1a:	ff ff ff ff ff ff ff ff 00 00 00 00 00 00 00 00     ................
     a2a:	00 00 00 00 ff ff ff ff ff ff ff ff ff 18 15 3f     ...............?
     a3a:	28 08 02 80 00 00 f0 00 00 fc 00 00 3f 80 00 07     (...........?...
     a4a:	e0 00 00 fc 00 00 3f 00 00 07 e0 00 00 fc 00 00     ......?.........
     a5a:	3f 00 00 07 00 00 1f 00 00 7e 00 03 f0 00 0f c0     ?........~......
     a6a:	00 7e 00 03 f8 00 0f c0 00 7e 00 00 f8 00 00 c0     .~.......~......
     a7a:	00 00 12 1e 5a 16 01 01 07 fc 00 1f fe 00 3f ff     ....Z.........?.
     a8a:	80 7f ff 80 fc 0f c0 78 07 c0 38 07 c0 00 07 c0     .......x..8.....
     a9a:	00 07 c0 00 0f c0 00 0f 80 00 1f 80 00 3f 00 00     .............?..
     aaa:	7e 00 00 f8 00 01 f0 00 03 e0 00 03 c0 00 03 c0     ~...............
     aba:	00 03 c0 00 03 c0 00 03 c0 00 00 00 00 00 00 00     ................
     aca:	00 00 00 03 e0 00 03 e0 00 03 e0 00 03 e0 00 03     ................
     ada:	e0 00 26 27 c3 2a 02 f8 00 03 ff e0 00 00 1f ff     ..&'.*..........
     aea:	f8 00 00 7f ff fe 00 00 ff ff ff 00 03 ff ff ff     ................
     afa:	80 07 fe 00 7f c0 07 f8 00 1f e0 0f e0 00 0f f0     ................
     b0a:	1f c0 00 07 f0 3f 80 00 03 f8 3f 01 f1 f1 f8 3f     .....?....?....?
     b1a:	07 fd f1 fc 7e 0f ff f0 fc 7e 1f ff f0 fc 7c 1f     ....~....~....|.
     b2a:	87 f0 fc fc 3f 03 f0 7c fc 3f 03 f0 7c fc 3e 01     ....?..|.?..|.>.
     b3a:	f0 7c fc 3e 01 f0 7c f8 3e 01 f0 7c f8 3e 01 f0     .|.>..|.>..|.>..
     b4a:	7c f8 3e 01 f0 7c fc 3e 01 f0 7c fc 3f 03 f0 fc     |.>..|.>..|.?...
     b5a:	7c 3f 03 f8 f8 7c 1f 87 f9 f8 7e 1f ff ff f0 3f     |?...|....~....?
     b6a:	0f fe ff e0 3f 07 fc 7f c0 1f 81 f8 1f 00 1f c0     ....?...........
     b7a:	00 00 00 0f e0 00 00 00 07 f8 00 00 00 03 fe 00     ................
     b8a:	38 00 01 ff ff f8 00 00 ff ff f8 00 00 3f ff f8     8............?..
     b9a:	00 00 0f ff f8 00 00 01 ff e0 00 1b 1e 78 1c 01     .............x..
     baa:	00 00 3f 00 00 00 3f 80 00 00 7f 80 00 00 7f 80     ..?...?.........
     bba:	00 00 7f c0 00 00 ff c0 00 00 ff e0 00 00 ff e0     ................
     bca:	00 01 fb e0 00 01 f3 f0 00 03 f3 f0 00 03 f1 f0     ................
     bda:	00 03 e1 f8 00 07 e1 f8 00 07 e0 f8 00 07 c0 fc     ................
     bea:	00 0f c0 fc 00 0f c0 7e 00 0f 80 7e 00 1f ff fe     .......~...~....
     bfa:	00 1f ff ff 00 3f ff ff 00 3f ff ff 00 3f ff ff     .....?...?...?..
     c0a:	80 7e 00 1f 80 7e 00 1f 80 7e 00 0f c0 fc 00 0f     .~...~...~......
     c1a:	c0 fc 00 07 c0 f8 00 07 e0 16 1e 5a 1b 03 00 ff     ...........Z....
     c2a:	fe 00 ff ff 80 ff ff e0 ff ff e0 ff ff f0 f8 07     ................
     c3a:	f0 f8 03 f0 f8 01 f0 f8 01 f0 f8 01 f0 f8 03 f0     ................
     c4a:	f8 07 e0 ff ff c0 ff ff 80 ff fe 00 ff ff c0 ff     ................
     c5a:	ff f0 f8 03 f8 f8 01 f8 f8 00 fc f8 00 fc f8 00     ................
     c6a:	fc f8 00 fc f8 01 fc f8 03 fc ff ff f8 ff ff f0     ................
     c7a:	ff ff e0 ff ff c0 ff ff 00 18 1e 5a 1d 02 01 01     ...........Z....
     c8a:	ff c0 03 ff f0 0f ff f8 0f ff fc 1f ff fe 3f 80     ..............?.
     c9a:	fe 3e 00 7f 7e 00 3f 7c 00 3f 7c 00 3f fc 00 00     .>..~.?|.?|.?...
     caa:	fc 00 00 fc 00 00 f8 00 00 f8 00 00 f8 00 00 f8     ................
     cba:	00 00 f8 00 00 fc 00 00 fc 00 00 7c 00 3f 7c 00     ...........|.?|.
     cca:	3f 7e 00 7f 3e 00 7f 3f 80 fe 1f ff fe 1f ff fc     ?~..>..?........
     cda:	0f ff f8 07 ff e0 01 ff c0 18 1e 5a 1d 03 00 ff     ...........Z....
     cea:	f8 00 ff ff 00 ff ff c0 ff ff e0 ff ff f0 f8 0f     ................
     cfa:	f8 f8 01 fc f8 00 fc f8 00 7e f8 00 7e f8 00 3e     .........~..~..>
     d0a:	f8 00 3f f8 00 3f f8 00 3f f8 00 1f f8 00 1f f8     ..?..?..?.......
     d1a:	00 3f f8 00 3f f8 00 3f f8 00 3f f8 00 7e f8 00     .?..?..?..?..~..
     d2a:	7e f8 00 fc f8 01 fc f8 0f f8 ff ff f0 ff ff e0     ~...............
     d3a:	ff ff c0 ff ff 00 ff f8 00 14 1e 5a 19 03 00 ff     ...........Z....
     d4a:	ff e0 ff ff e0 ff ff e0 ff ff e0 ff ff e0 f8 00     ................
     d5a:	00 f8 00 00 f8 00 00 f8 00 00 f8 00 00 f8 00 00     ................
     d6a:	f8 00 00 f8 00 00 ff ff e0 ff ff e0 ff ff e0 ff     ................
     d7a:	ff e0 f8 00 00 f8 00 00 f8 00 00 f8 00 00 f8 00     ................
     d8a:	00 f8 00 00 f8 00 00 f8 00 00 ff ff f0 ff ff f0     ................
     d9a:	ff ff f0 ff ff f0 ff ff f0 13 1e 5a 18 03 00 ff     ...........Z....
     daa:	ff e0 ff ff e0 ff ff e0 ff ff e0 ff ff e0 f8 00     ................
     dba:	00 f8 00 00 f8 00 00 f8 00 00 f8 00 00 f8 00 00     ................
     dca:	f8 00 00 ff ff c0 ff ff c0 ff ff c0 ff ff c0 ff     ................
     dda:	ff c0 f8 00 00 f8 00 00 f8 00 00 f8 00 00 f8 00     ................
     dea:	00 f8 00 00 f8 00 00 f8 00 00 f8 00 00 f8 00 00     ................
     dfa:	f8 00 00 f8 00 00 f8 00 00 1a 1e 78 1e 02 01 00     ...........x....
     e0a:	7f f0 00 01 ff fc 00 03 ff fe 00 0f ff ff 00 0f     ................
     e1a:	ff ff 80 1f c0 3f 80 3f 80 0f c0 3f 00 0f c0 7e     .....?.?...?...~
     e2a:	00 0f c0 7e 00 07 c0 7c 00 00 00 fc 00 00 00 fc     ...~...|........
     e3a:	00 00 00 fc 00 00 00 f8 01 ff c0 f8 01 ff c0 f8     ................
     e4a:	01 ff c0 fc 01 ff c0 fc 01 ff c0 fc 00 07 c0 7c     ...............|
     e5a:	00 07 c0 7e 00 07 c0 7f 00 07 c0 3f 80 07 c0 3f     ...~.......?...?
     e6a:	e0 07 c0 1f ff ff c0 0f ff ff c0 07 ff ff c0 01     ................
     e7a:	ff ff c0 00 7f fe 00 17 1e 5a 1d 03 00 f8 00 3e     .........Z.....>
     e8a:	f8 00 3e f8 00 3e f8 00 3e f8 00 3e f8 00 3e f8     ..>..>..>..>..>.
     e9a:	00 3e f8 00 3e f8 00 3e f8 00 3e f8 00 3e f8 00     .>..>..>..>..>..
     eaa:	3e ff ff fe ff ff fe ff ff fe ff ff fe ff ff fe     >...............
     eba:	f8 00 3e f8 00 3e f8 00 3e f8 00 3e f8 00 3e f8     ..>..>..>..>..>.
     eca:	00 3e f8 00 3e f8 00 3e f8 00 3e f8 00 3e f8 00     .>..>..>..>..>..
     eda:	3e f8 00 3e f8 00 3e 05 1e 1e 0b 03 00 f8 f8 f8     >..>..>.........
     eea:	f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8     ................
     efa:	f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 14 1e 5a 19 02     .............Z..
     f0a:	00 00 01 f0 00 01 f0 00 01 f0 00 01 f0 00 01 f0     ................
     f1a:	00 01 f0 00 01 f0 00 01 f0 00 01 f0 00 01 f0 00     ................
     f2a:	01 f0 00 01 f0 00 01 f0 00 01 f0 00 01 f0 00 01     ................
     f3a:	f0 00 01 f0 00 01 f0 00 01 f0 00 01 f0 f8 01 f0     ................
     f4a:	f8 03 f0 fc 03 f0 fc 03 f0 fe 07 e0 7f ff e0 7f     ................
     f5a:	ff c0 3f ff 80 1f ff 00 0f fe 00 17 1e 5a 1b 03     ..?..........Z..
     f6a:	00 f8 01 f8 f8 03 f8 f8 07 f0 f8 0f e0 f8 0f c0     ................
     f7a:	f8 1f c0 f8 3f 80 f8 7f 00 f8 7e 00 f8 fe 00 f9     ....?.....~.....
     f8a:	fc 00 fb f8 00 fb f0 00 ff f0 00 ff f0 00 fb f8     ................
     f9a:	00 f9 fc 00 f9 fe 00 f8 fe 00 f8 7f 00 f8 7f 80     ................
     faa:	f8 3f 80 f8 1f c0 f8 1f e0 f8 0f e0 f8 07 f0 f8     .?..............
     fba:	07 f8 f8 03 f8 f8 01 fc f8 00 fe 13 1e 5a 17 03     .............Z..
     fca:	00 f8 00 00 f8 00 00 f8 00 00 f8 00 00 f8 00 00     ................
     fda:	f8 00 00 f8 00 00 f8 00 00 f8 00 00 f8 00 00 f8     ................
     fea:	00 00 f8 00 00 f8 00 00 f8 00 00 f8 00 00 f8 00     ................
     ffa:	00 f8 00 00 f8 00 00 f8 00 00 f8 00 00 f8 00 00     ................
    100a:	f8 00 00 f8 00 00 f8 00 00 f8 00 00 ff ff e0 ff     ................
    101a:	ff e0 ff ff e0 ff ff e0 ff ff e0 1f 1e 78 25 03     .............x%.
    102a:	00 ff c0 03 fe ff c0 03 fe ff c0 07 fe ff c0 07     ................
    103a:	fe ff e0 07 fe fb e0 0f fe fb e0 0f fe fb f0 0f     ................
    104a:	be fb f0 0f be f9 f0 1f be f9 f0 1f 3e f9 f8 1f     ............>...
    105a:	3e f8 f8 3f 3e f8 f8 3f 3e f8 fc 3e 3e f8 7c 7e     >..?>..?>..>>.|~
    106a:	3e f8 7c 7e 3e f8 7e 7c 3e f8 7e 7c 3e f8 3e fc     >.|~>.~|>.~|>.>.
    107a:	3e f8 3e f8 3e f8 3f f8 3e f8 1f f8 3e f8 1f f8     >.>.>.?.>...>...
    108a:	3e f8 1f f0 3e f8 1f f0 3e f8 0f f0 3e f8 0f e0     >...>...>...>...
    109a:	3e f8 0f e0 3e f8 07 e0 3e 19 1e 78 1f 03 00 ff     >...>...>..x....
    10aa:	80 0f 80 ff 80 0f 80 ff 80 0f 80 ff c0 0f 80 ff     ................
    10ba:	c0 0f 80 ff e0 0f 80 fb e0 0f 80 fb f0 0f 80 f9     ................
    10ca:	f0 0f 80 f9 f8 0f 80 f8 f8 0f 80 f8 fc 0f 80 f8     ................
    10da:	fc 0f 80 f8 7e 0f 80 f8 7e 0f 80 f8 3f 0f 80 f8     ....~...~...?...
    10ea:	3f 0f 80 f8 1f 8f 80 f8 1f 8f 80 f8 0f 8f 80 f8     ?...............
    10fa:	0f cf 80 f8 07 cf 80 f8 07 ef 80 f8 03 ef 80 f8     ................
    110a:	03 ff 80 f8 01 ff 80 f8 01 ff 80 f8 00 ff 80 f8     ................
    111a:	00 ff 80 f8 00 7f 80 1b 1e 78 1f 02 01 00 ff e0     .........x......
    112a:	00 03 ff f8 00 07 ff fc 00 0f ff fe 00 1f ff ff     ................
    113a:	00 3f c0 7f 80 3f 00 1f 80 7f 00 1f c0 7e 00 0f     .?...?.......~..
    114a:	c0 7e 00 0f c0 fc 00 0f e0 fc 00 07 e0 fc 00 07     .~..............
    115a:	e0 fc 00 07 e0 fc 00 07 e0 fc 00 07 e0 fc 00 07     ................
    116a:	e0 fc 00 07 e0 fc 00 07 e0 fc 00 0f e0 7e 00 0f     .............~..
    117a:	c0 7e 00 0f c0 7f 00 1f c0 3f 00 1f 80 3f c0 7f     .~.......?...?..
    118a:	80 1f ff ff 00 0f ff fe 00 07 ff fc 00 03 ff f8     ................
    119a:	00 00 ff e0 00 15 1e 5a 1a 03 00 ff fc 00 ff ff     .......Z........
    11aa:	80 ff ff c0 ff ff e0 ff ff f0 f8 07 f0 f8 03 f8     ................
    11ba:	f8 01 f8 f8 01 f8 f8 00 f8 f8 01 f8 f8 01 f8 f8     ................
    11ca:	01 f8 f8 07 f0 ff ff f0 ff ff e0 ff ff c0 ff ff     ................
    11da:	80 ff fc 00 f8 00 00 f8 00 00 f8 00 00 f8 00 00     ................
    11ea:	f8 00 00 f8 00 00 f8 00 00 f8 00 00 f8 00 00 f8     ................
    11fa:	00 00 f8 00 00 1e 1e 78 21 02 01 00 ff e0 00 03     .......x!.......
    120a:	ff f8 00 07 ff fc 00 0f ff fe 00 1f ff ff 00 3f     ...............?
    121a:	c0 7f 80 3f 00 1f 80 7f 00 1f c0 7e 00 0f c0 7e     ...?.......~...~
    122a:	00 0f c0 fc 00 0f e0 fc 00 07 e0 fc 00 07 e0 fc     ................
    123a:	00 07 e0 fc 00 07 e0 fc 00 07 e0 fc 00 07 e0 fc     ................
    124a:	00 07 e0 fc 00 07 e0 fc 00 0f c0 7e 00 0f c0 7e     ...........~...~
    125a:	00 0f c0 7f 00 1f 80 3f 00 1f 80 3f c0 7f 00 1f     .......?...?....
    126a:	ff fe fc 0f ff ff fc 07 ff ff fc 03 ff ff fc 00     ................
    127a:	ff ff fc 17 1e 5a 1b 03 00 ff ff 00 ff ff e0 ff     .....Z..........
    128a:	ff f0 ff ff f8 ff ff f8 f8 03 fc f8 01 fc f8 00     ................
    129a:	fc f8 00 7c f8 00 7c f8 00 fc f8 01 f8 f8 07 f0     ...|..|.........
    12aa:	ff ff e0 ff ff c0 ff ff 80 ff ff e0 ff ff f0 f8     ................
    12ba:	03 f8 f8 01 f8 f8 01 f8 f8 00 f8 f8 00 f8 f8 00     ................
    12ca:	f8 f8 00 fc f8 00 fc f8 00 fc f8 00 fc f8 00 7c     ...............|
    12da:	f8 00 7e 17 1e 5a 1b 02 01 01 ff 80 07 ff e0 0f     ..~..Z..........
    12ea:	ff f0 1f ff f0 3f ff f8 3f 01 f8 7e 00 fc 7e 00     .....?..?..~..~.
    12fa:	fc 7c 00 7c 7e 00 00 7e 00 00 3f 80 00 3f f0 00     .|.|~..~..?..?..
    130a:	1f fe 00 0f ff c0 03 ff f0 00 7f f8 00 07 fc 00     ................
    131a:	01 fc 00 00 7e f8 00 7e f8 00 3e fc 00 7e fc 00     ....~..~..>..~..
    132a:	7e 7e 00 fc 7f ff fc 3f ff f8 1f ff f0 0f ff e0     ~~.....?........
    133a:	03 ff 80 17 1e 5a 19 01 00 ff ff fe ff ff fe ff     .....Z..........
    134a:	ff fe ff ff fe ff ff fe 00 7c 00 00 7c 00 00 7c     .........|..|..|
    135a:	00 00 7c 00 00 7c 00 00 7c 00 00 7c 00 00 7c 00     ..|..|..|..|..|.
    136a:	00 7c 00 00 7c 00 00 7c 00 00 7c 00 00 7c 00 00     .|..|..|..|..|..
    137a:	7c 00 00 7c 00 00 7c 00 00 7c 00 00 7c 00 00 7c     |..|..|..|..|..|
    138a:	00 00 7c 00 00 7c 00 00 7c 00 00 7c 00 00 7c 00     ..|..|..|..|..|.
    139a:	00 7c 00 18 1e 5a 1e 03 00 f8 00 1f f8 00 1f f8     .|...Z..........
    13aa:	00 1f f8 00 1f f8 00 1f f8 00 1f f8 00 1f f8 00     ................
    13ba:	1f f8 00 1f f8 00 1f f8 00 1f f8 00 1f f8 00 1f     ................
    13ca:	f8 00 1f f8 00 1f f8 00 1f f8 00 1f f8 00 1f f8     ................
    13da:	00 1f fc 00 1f fc 00 1f fc 00 3f 7c 00 3f 7e 00     ..........?|.?~.
    13ea:	7e 7f 00 fe 3f ff fc 1f ff fc 1f ff f8 07 ff e0     ~...?...........
    13fa:	01 ff c0 1c 1e 78 1e 01 00 fc 00 03 f0 fc 00 07     .....x..........
    140a:	f0 fe 00 07 e0 7e 00 07 e0 7e 00 0f c0 7f 00 0f     .....~...~......
    141a:	c0 3f 00 1f c0 3f 00 1f 80 3f 80 1f 80 1f 80 3f     .?...?...?.....?
    142a:	80 1f 80 3f 00 1f c0 3f 00 0f c0 7f 00 0f c0 7e     ...?...?.......~
    143a:	00 07 e0 7e 00 07 e0 fc 00 07 e0 fc 00 03 f0 fc     ...~............
    144a:	00 03 f1 f8 00 03 f9 f8 00 01 f9 f8 00 01 fb f0     ................
    145a:	00 01 ff f0 00 00 ff f0 00 00 ff e0 00 00 ff e0     ................
    146a:	00 00 7f c0 00 00 7f c0 00 00 7f c0 00 00 3f 80     ..............?.
    147a:	00 26 1e 96 28 01 00 fc 00 fc 00 fc fc 01 fe 00     .&..(...........
    148a:	fc fc 01 fe 00 fc fc 01 fe 01 fc fe 01 fe 01 fc     ................
    149a:	7e 03 ff 01 f8 7e 03 ff 01 f8 7e 03 ff 01 f8 7e     ~....~....~....~
    14aa:	03 ff 01 f8 3f 07 ff 83 f0 3f 07 cf 83 f0 3f 07     ....?....?....?.
    14ba:	cf 83 f0 3f 07 cf 83 f0 1f 0f cf c3 e0 1f 8f 87     ...?............
    14ca:	c7 e0 1f 8f 87 c7 e0 1f 8f 87 c7 e0 0f 9f 87 e7     ................
    14da:	c0 0f 9f 03 e7 c0 0f df 03 ef c0 0f df 03 ef c0     ................
    14ea:	07 ff 03 ff 80 07 fe 01 ff 80 07 fe 01 ff 80 07     ................
    14fa:	fe 01 ff 80 03 fe 01 ff 00 03 fc 00 ff 00 03 fc     ................
    150a:	00 ff 00 03 fc 00 ff 00 03 fc 00 ff 00 1a 1e 78     ...............x
    151a:	1c 01 00 7e 00 1f 80 7f 00 3f 80 3f 80 3f 00 3f     ...~.....?.?.?.?
    152a:	80 7e 00 1f c0 7e 00 0f c0 fc 00 0f e1 f8 00 07     .~...~..........
    153a:	f1 f8 00 03 f3 f0 00 03 fb e0 00 01 ff e0 00 00     ................
    154a:	ff c0 00 00 ff 80 00 00 7f 80 00 00 7f 00 00 00     ................
    155a:	7f 80 00 00 ff 80 00 01 ff c0 00 01 ff e0 00 03     ................
    156a:	f7 e0 00 03 e3 f0 00 07 e3 f8 00 0f c1 f8 00 0f     ................
    157a:	81 fc 00 1f 80 fe 00 3f 00 7e 00 3f 00 7f 00 7e     .......?.~.?...~
    158a:	00 3f 80 fc 00 1f 80 fc 00 1f c0 18 1e 5a 19 01     .?...........Z..
    159a:	00 fc 00 7f fe 00 7e 7e 00 fe 7f 00 fc 3f 01 fc     ......~~.....?..
    15aa:	3f 01 f8 1f 83 f8 1f 83 f0 0f c3 f0 0f c7 e0 07     ?...............
    15ba:	e7 e0 07 ef c0 03 ff c0 03 ff 80 01 ff 80 01 ff     ................
    15ca:	00 00 ff 00 00 fe 00 00 7e 00 00 7c 00 00 7c 00     ........~..|..|.
    15da:	00 7c 00 00 7c 00 00 7c 00 00 7c 00 00 7c 00 00     .|..|..|..|..|..
    15ea:	7c 00 00 7c 00 00 7c 00 00 7c 00 16 1e 5a 1a 02     |..|..|..|...Z..
    15fa:	00 7f ff fc 7f ff fc 7f ff fc 7f ff fc 7f ff fc     ................
    160a:	00 01 fc 00 03 f8 00 07 f0 00 0f f0 00 1f e0 00     ................
    161a:	1f c0 00 3f 80 00 7f 80 00 ff 00 00 fe 00 01 fc     ...?............
    162a:	00 03 fc 00 07 f8 00 07 f0 00 0f e0 00 1f e0 00     ................
    163a:	3f c0 00 3f 80 00 7f 00 00 ff 00 00 ff ff fc ff     ?..?............
    164a:	ff fc ff ff fc ff ff fc ff ff fc 09 26 4c 0f 03     ............&L..
    165a:	f8 ff 80 ff 80 ff 80 ff 80 f8 00 f8 00 f8 00 f8     ................
    166a:	00 f8 00 f8 00 f8 00 f8 00 f8 00 f8 00 f8 00 f8     ................
    167a:	00 f8 00 f8 00 f8 00 f8 00 f8 00 f8 00 f8 00 f8     ................
    168a:	00 f8 00 f8 00 f8 00 f8 00 f8 00 f8 00 f8 00 f8     ................
    169a:	00 f8 00 f8 00 ff 80 ff 80 ff 80 ff 80 0d 20 40     .............. @
    16aa:	11 02 fe f0 00 f0 00 78 00 78 00 78 00 78 00 3c     .......x.x.x.x.<
    16ba:	00 3c 00 3c 00 1e 00 1e 00 1e 00 0e 00 0f 00 0f     .<.<............
    16ca:	00 0f 00 07 80 07 80 07 80 03 c0 03 c0 03 c0 03     ................
    16da:	c0 01 e0 01 e0 01 e0 00 f0 00 f0 00 f0 00 70 00     ..............p.
    16ea:	78 00 78 09 26 4c 0f 03 f8 ff 80 ff 80 ff 80 ff     x.x.&L..........
    16fa:	80 0f 80 0f 80 0f 80 0f 80 0f 80 0f 80 0f 80 0f     ................
    170a:	80 0f 80 0f 80 0f 80 0f 80 0f 80 0f 80 0f 80 0f     ................
    171a:	80 0f 80 0f 80 0f 80 0f 80 0f 80 0f 80 0f 80 0f     ................
    172a:	80 0f 80 0f 80 0f 80 0f 80 0f 80 0f 80 ff 80 ff     ................
    173a:	80 ff 80 ff 80 14 19 4b 28 0a 00 00 60 00 00 f0     .......K(...`...
    174a:	00 00 f0 00 00 f0 00 01 f8 00 01 98 00 03 9c 00     ................
    175a:	03 0c 00 03 0c 00 07 0e 00 06 06 00 06 06 00 0e     ................
    176a:	07 00 0c 03 00 1c 03 80 1c 01 80 18 01 80 38 01     ..............8.
    177a:	c0 30 00 c0 30 00 c0 70 00 e0 60 00 60 e0 00 70     .0..0..p..`.`..p
    178a:	e0 00 70 c0 00 30 14 04 0c 14 00 fa ff ff f0 ff     ..p..0..........
    179a:	ff f0 ff ff f0 ff ff f0 09 08 10 0a ff 19 f8 00     ................
    17aa:	7c 00 3c 00 3e 00 1e 00 0f 00 07 00 03 80 13 14     |.<.>...........
    17ba:	3c 16 02 01 0f fe 00 1f ff 00 3f ff 80 7e 0f 80     <.........?..~..
    17ca:	7c 0f c0 00 07 c0 00 7f c0 0f ff c0 3f ff c0 7f     |...........?...
    17da:	ff c0 7f 07 c0 fc 07 c0 fc 07 c0 f8 0f c0 f8 0f     ................
    17ea:	c0 fc 0f c0 fe 1f c0 7f ff c0 3f f7 c0 1f e3 e0     ..........?.....
    17fa:	14 1e 5a 19 03 00 f8 00 00 f8 00 00 f8 00 00 f8     ..Z.............
    180a:	00 00 f8 00 00 f8 00 00 f8 00 00 f8 00 00 f8 00     ................
    181a:	00 f8 00 00 f9 fe 00 fb ff 80 ff ff c0 ff 0f c0     ................
    182a:	fe 07 e0 fc 03 e0 fc 03 f0 fc 03 f0 fc 03 f0 f8     ................
    183a:	01 f0 f8 01 f0 f8 03 f0 fc 03 f0 fc 03 f0 fc 03     ................
    184a:	e0 fe 07 e0 ff 0f c0 fb ff c0 fb ff 80 f8 fe 00     ................
    185a:	11 14 3c 15 02 01 0f fc 00 1f fe 00 3f ff 00 7e     ..<.........?..~
    186a:	3f 00 7c 1f 80 7c 1f 80 fc 0f 80 f8 00 00 f8 00     ?.|..|..........
    187a:	00 f8 00 00 f8 00 00 f8 00 00 f8 00 00 fc 0f 80     ................
    188a:	fc 1f 80 7c 1f 80 7e 3f 00 3f ff 00 1f fe 00 0f     ...|..~?.?......
    189a:	fc 00 14 1e 5a 19 02 00 00 01 f0 00 01 f0 00 01     ....Z...........
    18aa:	f0 00 01 f0 00 01 f0 00 01 f0 00 01 f0 00 01 f0     ................
    18ba:	00 01 f0 00 01 f0 07 f9 f0 1f fd f0 3f ff f0 3f     ............?..?
    18ca:	0f f0 7e 07 f0 7c 03 f0 fc 03 f0 fc 03 f0 fc 03     ..~..|..........
    18da:	f0 f8 01 f0 f8 01 f0 f8 03 f0 fc 03 f0 fc 03 f0     ................
    18ea:	7c 03 f0 7e 07 f0 3f 0f f0 3f fd f0 1f f9 f0 07     |..~..?..?......
    18fa:	f1 f0 13 14 3c 16 02 01 07 fc 00 1f ff 00 3f ff     ....<.........?.
    190a:	00 3e 1f 80 7c 0f c0 7c 07 c0 fc 07 c0 ff ff c0     .>..|..|........
    191a:	ff ff c0 ff ff e0 ff ff e0 f8 00 00 f8 00 00 fc     ................
    192a:	00 00 7c 07 c0 7c 0f c0 7e 1f 80 3f ff 80 1f ff     ..|..|..~..?....
    193a:	00 07 fc 00 0e 1e 3c 0f 01 01 03 fc 07 fc 0f fc     ......<.........
    194a:	0f c0 0f 80 0f 80 0f 80 0f 80 0f 80 0f 80 ff f8     ................
    195a:	ff f8 ff f8 ff f8 0f 80 0f 80 0f 80 0f 80 0f 80     ................
    196a:	0f 80 0f 80 0f 80 0f 80 0f 80 0f 80 0f 80 0f 80     ................
    197a:	0f 80 0f 80 0f 80 14 1c 54 19 02 f9 07 f9 f0 1f     ........T.......
    198a:	fd f0 3f ff f0 3f 0f f0 7e 07 f0 7c 03 f0 fc 03     ..?..?..~..|....
    199a:	f0 fc 03 f0 fc 03 f0 f8 01 f0 f8 01 f0 f8 03 f0     ................
    19aa:	fc 03 f0 fc 03 f0 7c 07 f0 7e 07 f0 3f ff f0 3f     ......|..~..?..?
    19ba:	fd f0 0f f9 f0 03 e1 f0 00 03 f0 00 03 f0 7c 03     ..............|.
    19ca:	f0 7e 07 e0 3f ff e0 3f ff c0 1f ff 80 03 fc 00     .~..?..?........
    19da:	12 1e 5a 18 03 00 f8 00 00 f8 00 00 f8 00 00 f8     ..Z.............
    19ea:	00 00 f8 00 00 f8 00 00 f8 00 00 f8 00 00 f8 00     ................
    19fa:	00 f8 00 00 f9 ff 00 fb ff 80 ff ff c0 ff 1f c0     ................
    1a0a:	fe 0f c0 fc 07 c0 fc 07 c0 fc 07 c0 f8 07 c0 f8     ................
    1a1a:	07 c0 f8 07 c0 f8 07 c0 f8 07 c0 f8 07 c0 f8 07     ................
    1a2a:	c0 f8 07 c0 f8 07 c0 f8 07 c0 f8 07 c0 f8 07 c0     ................
    1a3a:	06 1e 1e 0a 02 00 fc fc fc fc fc 00 00 00 00 00     ................
    1a4a:	7c 7c 7c 7c 7c 7c 7c 7c 7c 7c 7c 7c 7c 7c 7c 7c     ||||||||||||||||
    1a5a:	7c 7c 7c 7c 07 27 27 0d 04 f7 7e 7e 7e 7e 7e 00     ||||.''...~~~~~.
    1a6a:	00 00 00 00 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e     ....>>>>>>>>>>>>
    1a7a:	3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 7e fe fe fe fc     >>>>>>>>>>>~....
    1a8a:	f8 12 1e 5a 16 03 00 f8 00 00 f8 00 00 f8 00 00     ...Z............
    1a9a:	f8 00 00 f8 00 00 f8 00 00 f8 00 00 f8 00 00 f8     ................
    1aaa:	00 00 f8 00 00 f8 1f c0 f8 1f 80 f8 3f 00 f8 7e     ............?..~
    1aba:	00 f8 fc 00 f9 fc 00 f9 f8 00 fb f0 00 ff e0 00     ................
    1aca:	ff f0 00 fb f0 00 f9 f8 00 f9 fc 00 f8 fc 00 f8     ................
    1ada:	7e 00 f8 7f 00 f8 3f 00 f8 1f 80 f8 1f c0 f8 0f     ~.....?.........
    1aea:	c0 05 1e 1e 0b 03 00 f8 f8 f8 f8 f8 f8 f8 f8 f8     ................
    1afa:	f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8 f8     ................
    1b0a:	f8 f8 f8 f8 f8 1f 14 50 25 03 01 f8 ff 0f f0 f9     .......P%.......
    1b1a:	ff 9f fc fb ff bf fc ff 1f f8 fe fe 0f f0 7e fc     ..............~.
    1b2a:	07 e0 3e fc 07 e0 3e f8 07 c0 3e f8 07 c0 3e f8     ..>...>...>...>.
    1b3a:	07 c0 3e f8 07 c0 3e f8 07 c0 3e f8 07 c0 3e f8     ..>...>...>...>.
    1b4a:	07 c0 3e f8 07 c0 3e f8 07 c0 3e f8 07 c0 3e f8     ..>...>...>...>.
    1b5a:	07 c0 3e f8 07 c0 3e f8 07 c0 3e 12 14 3c 18 03     ..>...>...>..<..
    1b6a:	01 f9 ff 00 fb ff 80 fb ff c0 ff 1f c0 fe 0f c0     ................
    1b7a:	fc 07 c0 fc 07 c0 fc 07 c0 f8 07 c0 f8 07 c0 f8     ................
    1b8a:	07 c0 f8 07 c0 f8 07 c0 f8 07 c0 f8 07 c0 f8 07     ................
    1b9a:	c0 f8 07 c0 f8 07 c0 f8 07 c0 f8 07 c0 14 14 3c     ...............<
    1baa:	18 02 01 03 fe 00 0f ff 00 1f ff c0 3f 0f c0 7e     ............?..~
    1bba:	03 e0 7c 03 f0 fc 01 f0 fc 01 f0 fc 01 f0 f8 01     ..|.............
    1bca:	f0 f8 01 f0 f8 01 f0 fc 01 f0 fc 01 f0 7c 03 f0     .............|..
    1bda:	7e 03 e0 3f 0f c0 1f ff c0 0f ff 00 03 fe 00 14     ~..?............
    1bea:	1c 54 19 03 f9 f8 fe 00 f9 ff 80 fb ff c0 ff 0f     .T..............
    1bfa:	c0 fe 07 e0 fc 03 e0 fc 03 f0 fc 03 f0 fc 03 f0     ................
    1c0a:	f8 01 f0 f8 01 f0 fc 03 f0 fc 03 f0 fc 03 f0 fc     ................
    1c1a:	03 e0 fe 07 e0 ff 0f c0 ff ff c0 fb ff 80 f9 fe     ................
    1c2a:	00 f8 00 00 f8 00 00 f8 00 00 f8 00 00 f8 00 00     ................
    1c3a:	f8 00 00 f8 00 00 f8 00 00 14 1c 54 19 02 f9 07     ...........T....
    1c4a:	f1 f0 1f fd f0 3f fd f0 3f 0f f0 7e 07 f0 7c 03     .....?..?..~..|.
    1c5a:	f0 fc 03 f0 fc 03 f0 f8 03 f0 f8 01 f0 f8 01 f0     ................
    1c6a:	fc 03 f0 fc 03 f0 fc 03 f0 7c 03 f0 7e 07 f0 3f     .........|..~..?
    1c7a:	0f f0 3f ff f0 1f fd f0 07 f9 f0 00 01 f0 00 01     ..?.............
    1c8a:	f0 00 01 f0 00 01 f0 00 01 f0 00 01 f0 00 01 f0     ................
    1c9a:	00 01 f0 0c 14 28 10 03 01 f8 f0 f9 f0 fb f0 ff     .....(..........
    1caa:	f0 ff f0 ff 00 fe 00 fc 00 fc 00 f8 00 f8 00 f8     ................
    1cba:	00 f8 00 f8 00 f8 00 f8 00 f8 00 f8 00 f8 00 f8     ................
    1cca:	00 11 14 3c 15 02 01 0f fc 00 3f fe 00 7f ff 00     ...<......?.....
    1cda:	7e 1f 80 7c 1f 80 7c 0f 80 7e 00 00 7f 80 00 3f     ~..|..|..~.....?
    1cea:	f8 00 3f fe 00 07 ff 00 00 ff 80 00 1f 80 00 0f     ..?.............
    1cfa:	80 f8 0f 80 fc 0f 80 7e 1f 80 7f ff 00 3f fe 00     .......~.....?..
    1d0a:	1f fc 00 0f 1a 34 11 01 00 00 80 01 80 07 80 0f     .....4..........
    1d1a:	80 0f 80 0f 80 ff fc ff fc ff fc ff fc 0f 80 0f     ................
    1d2a:	80 0f 80 0f 80 0f 80 0f 80 0f 80 0f 80 0f 80 0f     ................
    1d3a:	80 0f 80 0f c0 0f e0 07 fe 07 fe 01 fe 12 14 3c     ...............<
    1d4a:	18 03 00 f8 07 c0 f8 07 c0 f8 07 c0 f8 07 c0 f8     ................
    1d5a:	07 c0 f8 07 c0 f8 07 c0 f8 07 c0 f8 07 c0 f8 07     ................
    1d6a:	c0 f8 07 c0 f8 07 c0 f8 07 c0 fc 07 c0 fc 0f c0     ................
    1d7a:	fc 0f c0 fe 1f c0 7f ff c0 3f f7 c0 1f e7 c0 14     .........?......
    1d8a:	14 3c 16 01 00 f8 03 f0 fc 03 f0 fc 03 e0 7c 07     .<............|.
    1d9a:	e0 7e 07 e0 7e 07 c0 3e 0f c0 3f 0f c0 1f 0f 80     .~..~..>..?.....
    1daa:	1f 1f 80 1f 9f 00 0f 9f 00 0f bf 00 0f fe 00 07     ................
    1dba:	fe 00 07 fe 00 03 fc 00 03 fc 00 03 f8 00 01 f8     ................
    1dca:	00 21 14 64 22 01 00 f8 07 e0 1f 80 f8 0f f0 1f     .!.d"...........
    1dda:	00 fc 0f f0 1f 00 fc 0f f0 3f 00 7c 0f f8 3e 00     .........?.|..>.
    1dea:	7e 1f f8 3e 00 7e 1f f8 7e 00 3e 1f 7c 7e 00 3e     ~..>.~..~.>.|~.>
    1dfa:	3e 7c 7c 00 3f 3e 7c 7c 00 1f 3e 7e fc 00 1f 7c     >||.?>||..>~...|
    1e0a:	3e f8 00 1f fc 3e f8 00 0f fc 3f f8 00 0f fc 1f     >....>....?.....
    1e1a:	f0 00 0f f8 1f f0 00 0f f8 1f f0 00 07 f8 0f f0     ................
    1e2a:	00 07 f0 0f e0 00 07 f0 0f e0 00 14 14 3c 16 01     .............<..
    1e3a:	00 fe 03 e0 7e 07 e0 3f 0f c0 1f 8f 80 1f 9f 80     ....~..?........
    1e4a:	0f df 00 07 fe 00 07 fe 00 03 fc 00 03 fc 00 03     ................
    1e5a:	fc 00 07 fe 00 0f ff 00 0f bf 00 1f 9f 80 3f 1f     ..............?.
    1e6a:	c0 3e 0f c0 7e 07 e0 fc 07 e0 fc 03 f0 14 1c 54     .>..~..........T
    1e7a:	16 01 f8 fc 03 f0 fc 03 f0 fc 03 e0 7e 07 e0 7e     ............~..~
    1e8a:	07 e0 3f 07 c0 3f 0f c0 3f 0f c0 1f 8f 80 1f 9f     ..?..?..?.......
    1e9a:	80 0f 9f 80 0f df 00 0f ff 00 07 ff 00 07 fe 00     ................
    1eaa:	03 fe 00 03 fc 00 03 fc 00 01 fc 00 01 f8 00 01     ................
    1eba:	f8 00 01 f8 00 01 f0 00 03 f0 00 03 f0 00 07 e0     ................
    1eca:	00 07 e0 00 07 e0 00 11 14 3c 15 02 00 ff ff 00     .........<......
    1eda:	ff ff 00 ff ff 00 ff ff 00 00 3f 00 00 7e 00 00     ..........?..~..
    1eea:	fc 00 01 f8 00 03 f0 00 07 f0 00 0f e0 00 0f c0     ................
    1efa:	00 1f 80 00 3f 00 00 7e 00 00 fc 00 00 ff ff 80     ....?..~........
    1f0a:	ff ff 80 ff ff 80 ff ff 80 0f 29 52 14 03 f6 00     ..........)R....
    1f1a:	02 00 fe 01 fe 03 fe 07 f0 07 e0 07 c0 07 c0 07     ................
    1f2a:	c0 07 c0 07 c0 07 c0 07 c0 07 c0 07 c0 07 c0 0f     ................
    1f3a:	c0 0f 80 3f 80 fe 00 fc 00 fe 00 ff 00 3f 80 0f     ...?.........?..
    1f4a:	80 0f c0 07 c0 07 c0 07 c0 07 c0 07 c0 07 c0 07     ................
    1f5a:	c0 07 c0 07 c0 07 e0 07 e0 03 fe 03 fe 01 fe 00     ................
    1f6a:	3e 03 2b 2b 0d 05 f5 e0 e0 e0 e0 e0 e0 e0 e0 e0     >.++............
    1f7a:	e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0     ................
    1f8a:	e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0 e0     ................
    1f9a:	e0 e0 0f 28 50 14 03 f7 fc 00 ff 00 ff 00 1f 80     ...(P...........
    1faa:	0f 80 0f 80 0f 80 0f 80 0f 80 0f 80 0f 80 0f 80     ................
    1fba:	0f 80 0f c0 0f c0 07 e0 07 e0 03 f8 01 fe 00 7e     ...............~
    1fca:	00 fe 03 fc 07 e0 07 c0 07 c0 0f c0 0f 80 0f 80     ................
    1fda:	0f 80 0f 80 0f 80 0f 80 0f 80 0f 80 0f 80 1f 80     ................
    1fea:	ff 80 ff 00 fe 00 f8 00 15 05 0f 15 00 08 0f c0     ................
    1ffa:	78 3f ff f8 7f ff f0 7f ff e0 f0 1f 80 ff           x?............

00002008 <u8g_font_unifont>:
    2008:	00 10 10 00 fe 0a 06 a7 08 95 00 ff fe 0e fe 0b     ................
    2018:	fe 10 10 20 10 00 fe aa aa 00 01 80 00 00 01 80     ... ............
    2028:	00 4a 51 ea 50 5a 51 c9 9e 00 01 80 00 00 01 80     .JQ.PZQ.........
    2038:	00 00 01 80 00 55 55 10 10 20 10 00 fe aa aa 00     .....UU.. ......
    2048:	01 80 00 00 01 80 00 39 93 c2 52 32 5f 8a 52 71     .......9..R2_.Rq
    2058:	93 80 00 00 01 80 00 00 01 80 00 55 55 10 10 20     ...........UU.. 
    2068:	10 00 fe aa aa 00 01 80 00 00 01 80 00 3b a5 c1     .............;..
    2078:	24 31 19 89 24 71 25 80 00 00 01 80 00 00 01 80     $1..$q%.........
    2088:	00 55 55 10 10 20 10 00 fe aa aa 00 01 80 00 00     .UU.. ..........
    2098:	01 80 00 7b a5 c1 24 79 19 c1 24 79 25 80 00 00     ...{..$y..$y%...
    20a8:	01 80 00 00 01 80 00 55 55 10 10 20 10 00 fe aa     .......UU.. ....
    20b8:	aa 00 01 80 00 00 01 80 00 79 bf c2 48 7a 49 c2     .........y..HzI.
    20c8:	48 79 89 80 00 00 01 80 00 00 01 80 00 55 55 10     Hy...........UU.
    20d8:	10 20 10 00 fe aa aa 00 01 80 00 00 01 80 00 7a     . .............z
    20e8:	4d c2 52 7b 53 c2 d6 7a 4f 80 00 00 01 80 00 00     M.R{S..zO.......
    20f8:	01 80 00 55 55 10 10 20 10 00 fe aa aa 00 01 80     ...UU.. ........
    2108:	00 00 01 80 00 31 a5 ca 28 7a 31 ca 28 49 a5 80     .....1..(z1.(I..
    2118:	00 00 01 80 00 00 01 80 00 55 55 10 10 20 10 00     .........UU.. ..
    2128:	fe aa aa 00 01 80 00 00 01 80 00 73 d1 ca 10 73     ...........s...s
    2138:	d1 ca 10 73 df 80 00 00 01 80 00 00 01 80 00 55     ...s...........U
    2148:	55 10 10 20 10 00 fe aa aa 00 01 80 00 00 01 80     U.. ............
    2158:	00 1e 39 91 40 1e 31 91 08 1e 71 80 00 00 01 80     ..9.@.1...q.....
    2168:	00 00 01 80 00 55 55 10 10 20 10 00 fe aa aa 00     .....UU.. ......
    2178:	01 80 00 00 01 80 00 22 f9 a2 20 3e 21 a2 20 22     .......".. >!. "
    2188:	21 80 00 00 01 80 00 00 01 80 00 55 55 10 10 20     !..........UU.. 
    2198:	10 00 fe aa aa 00 01 80 00 00 01 80 00 20 f9 a0     ............. ..
    21a8:	80 20 f9 a0 80 3e 81 80 00 00 01 80 00 00 01 80     . ...>..........
    21b8:	00 55 55 10 10 20 10 00 fe aa aa 00 01 80 00 00     .UU.. ..........
    21c8:	01 80 00 22 f9 a2 20 22 21 94 20 08 21 80 00 00     ...".. "!. .!...
    21d8:	01 80 00 00 01 80 00 55 55 10 10 20 10 00 fe aa     .......UU.. ....
    21e8:	aa 00 01 80 00 00 01 80 00 3e f9 a0 80 3e f9 a0     .........>...>..
    21f8:	80 20 81 80 00 00 01 80 00 00 01 80 00 55 55 10     . ...........UU.
    2208:	10 20 10 00 fe aa aa 00 01 80 00 00 01 80 00 1e     . ..............
    2218:	f1 a0 88 20 f1 a0 90 1e 89 80 00 00 01 80 00 00     ... ............
    2228:	01 80 00 55 55 10 10 20 10 00 fe aa aa 00 01 80     ...UU.. ........
    2238:	00 00 01 80 00 1e 71 a0 88 1c 89 82 88 3c 71 80     ......q......<q.
    2248:	00 00 01 80 00 00 01 80 00 55 55 10 10 20 10 00     .........UU.. ..
    2258:	fe aa aa 00 01 80 00 00 01 80 00 1e f9 a0 20 1c     .............. .
    2268:	21 82 20 3c f9 80 00 00 01 80 00 00 01 80 00 55     !. <...........U
    2278:	55 10 10 20 10 00 fe aa aa 00 01 80 00 00 01 80     U.. ............
    2288:	00 39 1d a5 10 25 1d a5 10 39 dd 80 00 00 01 80     .9...%...9......
    2298:	00 00 01 80 00 55 55 10 10 20 10 00 fe aa aa 00     .....UU.. ......
    22a8:	01 80 00 00 01 80 00 71 89 ca 18 4a 09 ca 08 71     .......q...J...q
    22b8:	9d 80 00 00 01 80 00 00 01 80 00 55 55 10 10 20     ...........UU.. 
    22c8:	10 00 fe aa aa 00 01 80 00 00 01 80 00 71 99 ca     .............q..
    22d8:	04 4a 09 ca 10 71 9d 80 00 00 01 80 00 00 01 80     .J...q..........
    22e8:	00 55 55 10 10 20 10 00 fe aa aa 00 01 80 00 00     .UU.. ..........
    22f8:	01 80 00 71 99 ca 04 4a 19 ca 04 71 99 80 00 00     ...q...J...q....
    2308:	01 80 00 00 01 80 00 55 55 10 10 20 10 00 fe aa     .......UU.. ....
    2318:	aa 00 01 80 00 00 01 80 00 71 85 ca 0c 4a 15 ca     .........q...J..
    2328:	1c 71 85 80 00 00 01 80 00 00 01 80 00 55 55 10     .q...........UU.
    2338:	10 20 10 00 fe aa aa 00 01 80 00 00 01 80 00 49     . .............I
    2348:	93 ea 54 6a 59 db d4 4a 53 80 00 00 01 80 00 00     ..TjY..JS.......
    2358:	01 80 00 55 55 10 10 20 10 00 fe aa aa 00 01 80     ...UU.. ........
    2368:	00 00 01 80 00 34 53 c2 9a 31 17 89 12 71 13 80     .....4S..1...q..
    2378:	00 00 01 80 00 00 01 80 00 55 55 10 10 20 10 00     .........UU.. ..
    2388:	fe aa aa 00 01 80 00 00 01 80 00 7b b9 c1 24 79     ...........{..$y
    2398:	39 c1 24 79 39 80 00 00 01 80 00 00 01 80 00 55     9.$y9..........U
    23a8:	55 10 10 20 10 00 fe aa aa 00 01 80 00 00 01 80     U.. ............
    23b8:	00 33 25 c4 b4 47 ad c4 a4 34 a5 80 00 00 01 80     .3%..G...4......
    23c8:	00 00 01 80 00 55 55 10 10 20 10 00 fe aa aa 00     .....UU.. ......
    23d8:	01 80 00 00 01 80 00 3e 89 a0 d8 3e a9 a0 88 3e     .......>...>...>
    23e8:	89 80 00 00 01 80 00 00 01 80 00 55 55 10 10 20     ...........UU.. 
    23f8:	10 00 fe aa aa 00 01 80 00 00 01 80 00 3a 5d c2     .............:].
    2408:	52 32 5d 8a 52 71 9d 80 00 00 01 80 00 00 01 80     R2].Rq..........
    2418:	00 55 55 10 10 20 10 00 fe aa aa 00 01 80 00 00     .UU.. ..........
    2428:	01 80 00 79 cf c2 10 79 91 c0 50 7b 8f 80 00 00     ...y...y..P{....
    2438:	01 80 00 00 01 80 00 55 55 10 10 20 10 00 fe aa     .......UU.. ....
    2448:	aa 00 01 80 00 00 01 80 00 1e 71 90 80 1e 61 90     ..........q...a.
    2458:	10 10 e1 80 00 00 01 80 00 00 01 80 00 55 55 10     .............UU.
    2468:	10 20 10 00 fe aa aa 00 01 80 00 00 01 80 00 0e     . ..............
    2478:	71 90 80 16 61 92 10 0e e1 80 00 00 01 80 00 00     q...a...........
    2488:	01 80 00 55 55 10 10 20 10 00 fe aa aa 00 01 80     ...UU.. ........
    2498:	00 00 01 80 00 1c 71 92 80 1c 61 94 10 12 e1 80     ......q...a.....
    24a8:	00 00 01 80 00 00 01 80 00 55 55 10 10 20 10 00     .........UU.. ..
    24b8:	fe aa aa 00 01 80 00 00 01 80 00 12 71 92 80 12     ............q...
    24c8:	61 92 10 0c e1 80 00 00 01 80 00 00 01 80 00 55     a..............U
    24d8:	55 00 00 00 08 00 0e 01 0a 0a 08 04 00 80 80 80     U...............
    24e8:	80 80 80 80 00 80 80 05 04 04 08 02 08 88 88 88     ................
    24f8:	88 06 0a 0a 08 01 00 24 24 24 fc 48 48 fc 90 90     .......$$$.HH...
    2508:	90 07 0a 0a 08 01 00 10 7c 92 90 70 1c 12 92 7c     ........|..p...|
    2518:	10 07 0a 0a 08 01 00 62 94 94 68 10 10 2c 52 52     .......b..h..,RR
    2528:	8c 07 0a 0a 08 01 00 38 44 44 28 30 52 8a 84 8c     .......8DD(0R...
    2538:	72 01 04 04 08 04 08 80 80 80 80 03 0c 0c 08 03     r...............
    2548:	ff 20 40 40 80 80 80 80 80 80 40 40 20 03 0c 0c     . @@......@@ ...
    2558:	08 02 ff 80 40 40 20 20 20 20 20 20 40 40 80 07     ....@@      @@..
    2568:	07 07 08 01 01 10 92 54 38 54 92 10 07 07 07 08     .......T8T......
    2578:	01 01 10 10 10 fe 10 10 10 02 04 04 08 03 fe c0     ................
    2588:	40 40 80 04 01 01 08 02 04 f0 02 02 02 08 03 00     @@..............
    2598:	c0 c0 06 0a 0a 08 01 00 04 04 08 10 10 20 20 40     .............  @
    25a8:	80 80 06 0a 0a 08 01 00 30 48 84 84 84 84 84 84     ........0H......
    25b8:	48 30 05 0a 0a 08 02 00 20 60 a0 20 20 20 20 20     H0...... `.     
    25c8:	20 f8 06 0a 0a 08 01 00 78 84 84 04 18 20 40 80      .......x.... @.
    25d8:	80 fc 06 0a 0a 08 01 00 78 84 84 04 38 04 04 84     ........x...8...
    25e8:	84 78 06 0a 0a 08 01 00 08 18 28 48 88 88 fc 08     .x........(H....
    25f8:	08 08 06 0a 0a 08 01 00 fc 80 80 80 f8 04 04 04     ................
    2608:	84 78 06 0a 0a 08 01 00 38 40 80 80 f8 84 84 84     .x......8@......
    2618:	84 78 06 0a 0a 08 01 00 fc 04 04 08 08 08 10 10     .x..............
    2628:	10 10 06 0a 0a 08 01 00 78 84 84 84 78 84 84 84     ........x...x...
    2638:	84 78 06 0a 0a 08 01 00 78 84 84 84 7c 04 04 04     .x......x...|...
    2648:	08 70 02 07 07 08 03 01 c0 c0 00 00 00 c0 c0 02     .p..............
    2658:	09 09 08 03 ff c0 c0 00 00 00 c0 40 40 80 05 09     ...........@@...
    2668:	09 08 02 00 08 10 20 40 80 40 20 10 08 06 05 05     ...... @.@ .....
    2678:	08 01 02 fc 00 00 00 fc 05 09 09 08 01 00 80 40     ...............@
    2688:	20 10 08 10 20 40 80 06 0a 0a 08 01 00 78 84 84      ... @.......x..
    2698:	04 08 10 10 00 10 10 06 0a 0a 08 01 00 38 44 94     .............8D.
    26a8:	ac a4 a4 a4 9c 40 3c 06 0a 0a 08 01 00 30 48 48     .....@<......0HH
    26b8:	84 84 fc 84 84 84 84 06 0a 0a 08 01 00 f8 84 84     ................
    26c8:	84 f8 84 84 84 84 f8 06 0a 0a 08 01 00 78 84 84     .............x..
    26d8:	80 80 80 80 84 84 78 06 0a 0a 08 01 00 f0 88 84     ......x.........
    26e8:	84 84 84 84 84 88 f0 06 0a 0a 08 01 00 fc 80 80     ................
    26f8:	80 f8 80 80 80 80 fc 06 0a 0a 08 01 00 fc 80 80     ................
    2708:	80 f8 80 80 80 80 80 06 0a 0a 08 01 00 78 84 84     .............x..
    2718:	80 80 9c 84 84 8c 74 06 0a 0a 08 01 00 84 84 84     ......t.........
    2728:	84 fc 84 84 84 84 84 05 0a 0a 08 02 00 f8 20 20     ..............  
    2738:	20 20 20 20 20 20 f8 07 0a 0a 08 01 00 3e 08 08           .......>..
    2748:	08 08 08 08 88 88 70 06 0a 0a 08 01 00 84 88 90     ......p.........
    2758:	a0 c0 c0 a0 90 88 84 06 0a 0a 08 01 00 80 80 80     ................
    2768:	80 80 80 80 80 80 fc 06 0a 0a 08 01 00 84 84 cc     ................
    2778:	cc b4 b4 84 84 84 84 06 0a 0a 08 01 00 84 c4 c4     ................
    2788:	a4 a4 94 94 8c 8c 84 06 0a 0a 08 01 00 78 84 84     .............x..
    2798:	84 84 84 84 84 84 78 06 0a 0a 08 01 00 f8 84 84     ......x.........
    27a8:	84 f8 80 80 80 80 80 07 0b 0b 08 01 ff 78 84 84     .............x..
    27b8:	84 84 84 84 b4 cc 78 06 06 0a 0a 08 01 00 f8 84     ......x.........
    27c8:	84 84 f8 90 88 88 84 84 06 0a 0a 08 01 00 78 84     ..............x.
    27d8:	84 80 60 18 04 84 84 78 07 0a 0a 08 01 00 fe 10     ..`....x........
    27e8:	10 10 10 10 10 10 10 10 06 0a 0a 08 01 00 84 84     ................
    27f8:	84 84 84 84 84 84 84 78 07 0a 0a 08 01 00 82 82     .......x........
    2808:	82 44 44 44 28 28 10 10 06 0a 0a 08 01 00 84 84     .DDD((..........
    2818:	84 84 b4 b4 cc cc 84 84 06 0a 0a 08 01 00 84 84     ................
    2828:	48 48 30 30 48 48 84 84 07 0a 0a 08 01 00 82 82     HH00HH..........
    2838:	44 44 28 10 10 10 10 10 06 0a 0a 08 01 00 fc 04     DD(.............
    2848:	04 08 10 20 40 80 80 fc 03 0c 0c 08 04 ff e0 80     ... @...........
    2858:	80 80 80 80 80 80 80 80 80 e0 06 0a 0a 08 01 00     ................
    2868:	80 80 40 20 20 10 10 08 04 04 03 0c 0c 08 01 ff     ..@  ...........
    2878:	e0 20 20 20 20 20 20 20 20 20 20 e0 06 03 03 08     .          .....
    2888:	01 09 30 48 84 07 01 01 08 01 ff fe 03 03 03 08     ..0H............
    2898:	02 0a 80 40 20 06 08 08 08 01 00 78 84 04 7c 84     ...@ ......x..|.
    28a8:	84 8c 74 06 0b 0b 08 01 00 80 80 80 b8 c4 84 84     ..t.............
    28b8:	84 84 c4 b8 06 08 08 08 01 00 78 84 80 80 80 80     ..........x.....
    28c8:	84 78 06 0b 0b 08 01 00 04 04 04 74 8c 84 84 84     .x.........t....
    28d8:	84 8c 74 06 08 08 08 01 00 78 84 84 fc 80 80 84     ..t......x......
    28e8:	78 05 0b 0b 08 01 00 18 20 20 20 f8 20 20 20 20     x.......   .    
    28f8:	20 20 06 0b 0b 08 01 fe 04 74 88 88 88 70 40 78       .......t...p@x
    2908:	84 84 78 06 0b 0b 08 01 00 80 80 80 b8 c4 84 84     ..x.............
    2918:	84 84 84 84 05 0b 0b 08 02 00 20 20 00 60 20 20     ..........  .`  
    2928:	20 20 20 20 f8 05 0d 0d 08 01 fe 08 08 00 18 08         ............
    2938:	08 08 08 08 08 08 90 60 06 0b 0b 08 01 00 80 80     .......`........
    2948:	80 88 90 a0 c0 a0 90 88 84 05 0b 0b 08 02 00 60     ...............`
    2958:	20 20 20 20 20 20 20 20 20 f8 07 08 08 08 01 00              .......
    2968:	ec 92 92 92 92 92 92 92 06 08 08 08 01 00 b8 c4     ................
    2978:	84 84 84 84 84 84 06 08 08 08 01 00 78 84 84 84     ............x...
    2988:	84 84 84 78 06 0a 0a 08 01 fe b8 c4 84 84 84 84     ...x............
    2998:	c4 b8 80 80 06 0a 0a 08 01 fe 74 8c 84 84 84 84     ..........t.....
    29a8:	8c 74 04 04 06 08 08 08 01 00 b8 c4 84 80 80 80     .t..............
    29b8:	80 80 06 08 08 08 01 00 78 84 80 60 18 04 84 78     ........x..`...x
    29c8:	05 0a 0a 08 01 00 20 20 20 f8 20 20 20 20 20 18     ......   .     .
    29d8:	06 08 08 08 01 00 84 84 84 84 84 84 8c 74 06 08     .............t..
    29e8:	08 08 01 00 84 84 84 48 48 48 30 30 07 08 08 08     .......HHH00....
    29f8:	01 00 82 92 92 92 92 92 92 6c 06 08 08 08 01 00     .........l......
    2a08:	84 84 48 30 30 48 84 84 06 0a 0a 08 01 fe 84 84     ..H00H..........
    2a18:	84 84 84 4c 34 04 04 78 06 08 08 08 01 00 fc 04     ...L4..x........
    2a28:	08 10 20 40 80 fc 03 0c 0c 08 03 ff 60 80 80 40     .. @........`..@
    2a38:	40 80 80 40 40 80 80 60 01 0e 0e 08 04 fe 80 80     @..@@..`........
    2a48:	80 80 80 80 80 80 80 80 80 80 80 80 03 0c 0c 08     ................
    2a58:	02 ff c0 20 20 40 40 20 20 40 40 20 20 c0 07 03     ...  @@  @@  ...
    2a68:	03 08 01 08 62 92 8c 10 10 20 10 00 fe aa aa 00     ....b.... ......
    2a78:	01 80 00 00 01 80 00 73 d1 ca 10 4b d1 ca 10 73     .......s...K...s
    2a88:	df 80 00 00 01 80 00 00 01 80 00 55 55 10 10 20     ...........UU.. 
    2a98:	10 00 fe aa aa 00 01 80 00 00 01 80 00 71 9d ca     .............q..
    2aa8:	52 73 d3 c2 52 42 5d 80 00 00 01 80 00 00 01 80     Rs..RB].........
    2ab8:	00 55 55 10 10 20 10 00 fe aa aa 00 01 80 00 00     .UU.. ..........
    2ac8:	01 80 00 49 9d ca 52 7a 5d ca 50 49 91 80 00 00     ...I..Rz].PI....
    2ad8:	01 80 00 00 01 80 00 55 55 10 10 20 10 00 fe aa     .......UU.. ....
    2ae8:	aa 00 01 80 00 00 01 80 00 73 93 ca 52 73 9f ca     .........s..Rs..
    2af8:	12 72 13 80 00 00 01 80 00 00 01 80 00 55 55 10     .r...........UU.
    2b08:	10 20 10 00 fe aa aa 00 01 80 00 00 01 80 00 4b     . .............K
    2b18:	93 ea 52 5b 9f ca 52 4b 93 80 00 00 01 80 00 00     ..R[..RK........
    2b28:	01 80 00 55 55 10 10 20 10 00 fe aa aa 00 01 80     ...UU.. ........
    2b38:	00 00 01 80 00 74 b9 a6 a4 25 a5 a4 a4 74 b9 80     .....t...%...t..
    2b48:	00 00 01 80 00 00 01 80 00 55 55 10 10 20 10 00     .........UU.. ..
    2b58:	fe aa aa 00 01 80 00 00 01 80 00 4b d1 ea 10 5b     ...........K...[
    2b68:	d1 ca 10 4b df 80 00 00 01 80 00 00 01 80 00 55     ...K...........U
    2b78:	55 10 10 20 10 00 fe aa aa 00 01 80 00 00 01 80     U.. ............
    2b88:	00 39 cd c2 12 31 9f 88 52 73 93 80 00 00 01 80     .9...1..Rs......
    2b98:	00 00 01 80 00 55 55 10 10 20 10 00 fe aa aa 00     .....UU.. ......
    2ba8:	01 80 00 00 01 80 00 79 cd c2 12 79 9f c0 52 7b     .......y...y..R{
    2bb8:	93 80 00 00 01 80 00 00 01 80 00 55 55 10 10 20     ...........UU.. 
    2bc8:	10 00 fe aa aa 00 01 80 00 00 01 80 00 4b 9d c9     .............K..
    2bd8:	20 79 19 c9 04 49 39 80 00 00 01 80 00 00 01 80      y...I9.........
    2be8:	00 55 55 10 10 20 10 00 fe aa aa 00 01 80 00 00     .UU.. ..........
    2bf8:	01 80 00 25 dd a4 84 3c 85 a4 84 24 99 80 00 00     ...%...<...$....
    2c08:	01 80 00 00 01 80 00 55 55 10 10 20 10 00 fe aa     .......UU.. ....
    2c18:	aa 00 01 80 00 00 01 80 00 45 cd c4 90 44 89 a8     .........E...D..
    2c28:	84 10 99 80 00 00 01 80 00 00 01 80 00 55 55 10     .............UU.
    2c38:	10 20 10 00 fe aa aa 00 01 80 00 00 01 80 00 72     . .............r
    2c48:	1d ca 12 72 13 c2 12 43 dd 80 00 00 01 80 00 00     ...r...C........
    2c58:	01 80 00 55 55 10 10 20 10 00 fe aa aa 00 01 80     ...UU.. ........
    2c68:	00 00 01 80 00 72 13 ca 12 72 13 c2 12 43 cd 80     .....r...r...C..
    2c78:	00 00 01 80 00 00 01 80 00 55 55 10 10 20 10 00     .........UU.. ..
    2c88:	fe aa aa 00 01 80 00 00 01 80 00 0e 21 89 20 0e     ............!. .
    2c98:	21 8a 20 09 21 80 00 00 01 80 00 00 01 80 00 55     !. .!..........U
    2ca8:	55 10 10 20 10 00 fe aa aa 00 01 80 00 00 01 80     U.. ............
    2cb8:	00 39 dd c2 02 31 8d 88 50 73 9f 80 00 00 01 80     .9...1..Ps......
    2cc8:	00 00 01 80 00 55 55 10 10 20 10 00 fe aa aa 00     .....UU.. ......
    2cd8:	01 80 00 00 01 80 00 39 dd c2 02 31 8d 88 42 73     .......9...1..Bs
    2ce8:	9d 80 00 00 01 80 00 00 01 80 00 55 55 10 10 20     ...........UU.. 
    2cf8:	10 00 fe aa aa 00 01 80 00 00 01 80 00 71 cf ca     .............q..
    2d08:	10 4a 0d ca 02 71 dd 80 00 00 01 80 00 00 01 80     .J...q..........
    2d18:	00 55 55 10 10 20 10 00 fe aa aa 00 01 80 00 00     .UU.. ..........
    2d28:	01 80 00 72 45 ca 4c 72 45 c2 44 41 8f 80 00 00     ...rE.LrE.DA....
    2d38:	01 80 00 00 01 80 00 55 55 10 10 20 10 00 fe aa     .......UU.. ....
    2d48:	aa 00 01 80 00 00 01 80 00 72 5d ca 42 72 4d c2     .........r].BrM.
    2d58:	50 41 9f 80 00 00 01 80 00 00 01 80 00 55 55 10     PA...........UU.
    2d68:	10 20 10 00 fe aa aa 00 01 80 00 00 01 80 00 3b     . .............;
    2d78:	9d c1 20 31 19 89 04 71 39 80 00 00 01 80 00 00     .. 1...q9.......
    2d88:	01 80 00 55 55 10 10 20 10 00 fe aa aa 00 01 80     ...UU.. ........
    2d98:	00 00 01 80 00 39 d3 c2 12 42 1f c2 12 39 d3 80     .....9...B...9..
    2da8:	00 00 01 80 00 00 01 80 00 55 55 10 10 20 10 00     .........UU.. ..
    2db8:	fe aa aa 00 01 80 00 00 01 80 00 22 89 b6 88 2a     ..........."...*
    2dc8:	a9 a2 d8 22 89 80 00 00 01 80 00 00 01 80 00 55     ..."...........U
    2dd8:	55 10 10 20 10 00 fe aa aa 00 01 80 00 00 01 80     U.. ............
    2de8:	00 3b 8d c2 52 33 9f 8a 12 72 13 80 00 00 01 80     .;..R3...r......
    2df8:	00 00 01 80 00 55 55 10 10 20 10 00 fe aa aa 00     .....UU.. ......
    2e08:	01 80 00 00 01 80 00 7b 8d c2 52 7b 9f c2 12 7a     .......{..R{...z
    2e18:	13 80 00 00 01 80 00 00 01 80 00 55 55 10 10 20     ...........UU.. 
    2e28:	10 00 fe aa aa 00 01 80 00 00 01 80 00 39 8f c2     .............9..
    2e38:	50 32 4d 8a 42 71 9d 80 00 00 01 80 00 00 01 80     P2M.Bq..........
    2e48:	00 55 55 10 10 20 10 00 fe aa aa 00 01 80 00 00     .UU.. ..........
    2e58:	01 80 00 33 9b c4 22 25 a3 94 a2 63 9b 80 00 00     ...3.."%...c....
    2e68:	01 80 00 00 01 80 00 55 55 10 10 20 10 00 fe aa     .......UU.. ....
    2e78:	aa 00 01 80 00 00 01 80 00 39 dd c2 08 32 09 8a     .........9...2..
    2e88:	08 71 dd 80 00 00 01 80 00 00 01 80 00 55 55 10     .q...........UU.
    2e98:	10 20 10 00 fe aa aa 00 01 80 00 00 01 80 00 39     . .............9
    2ea8:	dd c2 08 41 89 c0 48 3b 9d 80 00 00 01 80 00 00     ...A..H;........
    2eb8:	01 80 00 55 55 10 10 20 10 00 fe aa aa 00 01 80     ...UU.. ........
    2ec8:	00 00 01 80 00 0e f9 90 20 0c 21 82 20 1c 21 80     ........ .!. .!.
    2ed8:	00 00 01 80 00 00 01 80 00 55 55 10 10 20 10 00     .........UU.. ..
    2ee8:	fe aa aa 00 01 80 00 00 01 80 00 31 cf ca 10 49     ...........1...I
    2ef8:	91 c8 50 33 8f 80 00 00 01 80 00 00 01 80 00 55     ..P3...........U
    2f08:	55 10 10 20 10 00 fe aa aa 00 01 80 00 00 01 80     U.. ............
    2f18:	00 1c 89 92 d8 1c a9 90 88 10 89 80 00 00 01 80     ................
    2f28:	00 00 01 80 00 55 55 10 10 20 10 00 fe aa aa 00     .....UU.. ......
    2f38:	01 80 00 00 01 80 00 33 8f ca 50 7b 91 ca 10 4a     .......3..P{...J
    2f48:	0f 80 00 00 01 80 00 00 01 80 00 55 55 00 00 00     ...........UU...
    2f58:	08 00 0e 01 0a 0a 08 04 00 80 80 00 80 80 80 80     ................
    2f68:	80 80 80 07 0a 0a 08 01 00 10 10 7c 92 90 90 92     ...........|....
    2f78:	7c 10 10 07 0a 0a 08 01 00 1c 20 20 20 f8 20 20     |.........   .  
    2f88:	20 7c c2 06 08 08 08 01 01 84 48 78 48 48 78 48      |........HxHHxH
    2f98:	84 07 0a 0a 08 01 00 82 44 28 10 fe 10 fe 10 10     ........D(......
    2fa8:	10 01 0a 0a 08 04 00 80 80 80 80 00 00 80 80 80     ................
    2fb8:	80 06 0a 0a 08 01 00 78 84 80 78 84 84 78 04 84     .......x..x..x..
    2fc8:	78 04 02 02 08 02 0c 90 90 08 0a 0a 08 00 00 3c     x..............<
    2fd8:	42 99 a5 a1 a1 a5 99 42 3c 05 07 07 08 02 05 70     B......B<......p
    2fe8:	08 78 88 78 00 f8 06 09 09 08 01 00 24 24 48 48     .x.x........$$HH
    2ff8:	90 48 48 24 24 06 04 04 08 01 00 fc 04 04 04 10     .HH$$...........
    3008:	10 20 10 00 fe aa aa 00 01 80 00 3a 63 c2 54 33     . .........:c.T3
    3018:	c9 8a 48 72 49 80 00 00 01 80 00 03 c1 80 00 00     ..HrI...........
    3028:	01 80 00 55 55 08 0a 0a 08 00 00 3c 42 b9 a5 a5     ...UU......<B...
    3038:	b9 a9 a5 42 3c 06 01 01 08 01 0b fc 03 04 04 08     ...B<...........
    3048:	02 0a 40 a0 a0 40 07 09 09 08 01 01 10 10 10 fe     ..@..@..........
    3058:	10 10 10 00 fe 05 07 07 08 02 05 70 88 08 70 80     ...........p..p.
    3068:	80 f8 05 07 07 08 02 05 70 88 08 70 08 88 70 03     ........p..p..p.
    3078:	03 03 08 03 0a 20 40 80 08 0a 0a 08 00 fe 42 42     ..... @.......BB
    3088:	42 42 42 42 66 59 40 80 06 0c 0c 08 01 ff 7c f4     BBBBfY@.......|.
    3098:	f4 f4 f4 74 14 14 14 14 14 1c 02 02 02 08 03 04     ...t............
    30a8:	c0 c0 03 02 02 08 02 fe 20 c0 03 07 07 08 02 05     ........ .......
    30b8:	20 60 a0 20 20 20 20 05 07 07 08 02 05 70 88 88      `.    ......p..
    30c8:	88 70 00 f8 06 09 09 08 01 00 90 90 48 48 24 48     .p..........HH$H
    30d8:	48 90 90 06 0a 0a 08 01 00 44 c4 48 50 50 24 2c     H........D.HPP$,
    30e8:	54 9c 84 06 0a 0a 08 01 00 44 c4 48 50 50 28 34     T........D.HPP(4
    30f8:	44 88 9c 06 0a 0a 08 01 00 c4 24 48 30 d0 24 2c     D.........$H0.$,
    3108:	54 9c 84 06 0a 0a 08 01 00 10 10 00 10 10 60 84     T.............`.
    3118:	84 84 78 06 0e 0e 08 01 00 60 18 00 00 30 48 48     ..x......`...0HH
    3128:	84 84 fc 84 84 84 84 06 0e 0e 08 01 00 18 60 00     ..............`.
    3138:	00 30 48 48 84 84 fc 84 84 84 84 06 0e 0e 08 01     .0HH............
    3148:	00 30 48 00 00 30 48 48 84 84 fc 84 84 84 84 06     .0H..0HH........
    3158:	0e 0e 08 01 00 64 98 00 00 30 48 48 84 84 fc 84     .....d...0HH....
    3168:	84 84 84 06 0e 0e 08 01 00 48 48 00 00 30 48 48     .........HH..0HH
    3178:	84 84 fc 84 84 84 84 06 0e 0e 08 01 00 30 48 30     .............0H0
    3188:	00 30 48 48 84 84 fc 84 84 84 84 07 0a 0a 08 01     .0HH............
    3198:	00 3e 50 90 90 fe 90 90 90 90 9e 06 0c 0c 08 01     .>P.............
    31a8:	fe 78 84 84 80 80 80 80 84 84 78 10 60 06 0e 0e     .x........x.`...
    31b8:	08 01 00 60 18 00 00 fc 80 80 80 f8 80 80 80 80     ...`............
    31c8:	fc 06 0e 0e 08 01 00 18 60 00 00 fc 80 80 80 f8     ........`.......
    31d8:	80 80 80 80 fc 06 0e 0e 08 01 00 30 48 00 00 fc     ...........0H...
    31e8:	80 80 80 f8 80 80 80 80 fc 06 0e 0e 08 01 00 48     ...............H
    31f8:	48 00 00 fc 80 80 80 f8 80 80 80 80 fc 05 0e 0e     H...............
    3208:	08 02 00 60 18 00 00 f8 20 20 20 20 20 20 20 20     ...`....        
    3218:	f8 05 0e 0e 08 02 00 30 c0 00 00 f8 20 20 20 20     .......0....    
    3228:	20 20 20 20 f8 05 0e 0e 08 02 00 60 90 00 00 f8         .......`....
    3238:	20 20 20 20 20 20 20 20 f8 05 0e 0e 08 02 00 90             ........
    3248:	90 00 00 f8 20 20 20 20 20 20 20 20 f8 07 0a 0a     ....        ....
    3258:	08 00 00 78 44 42 42 f2 42 42 42 44 78 06 0e 0e     ...xDBB.BBBDx...
    3268:	08 01 00 64 98 00 00 84 c4 c4 a4 a4 94 94 8c 8c     ...d............
    3278:	84 06 0e 0e 08 01 00 60 18 00 00 78 84 84 84 84     .......`...x....
    3288:	84 84 84 84 78 06 0e 0e 08 01 00 18 60 00 00 78     ....x.......`..x
    3298:	84 84 84 84 84 84 84 84 78 06 0e 0e 08 01 00 30     ........x......0
    32a8:	48 00 00 78 84 84 84 84 84 84 84 84 78 06 0e 0e     H..x........x...
    32b8:	08 01 00 64 98 00 00 78 84 84 84 84 84 84 84 84     ...d...x........
    32c8:	78 06 0e 0e 08 01 00 48 48 00 00 78 84 84 84 84     x......HH..x....
    32d8:	84 84 84 84 78 06 05 05 08 01 02 84 48 30 48 84     ....x.......H0H.
    32e8:	06 0c 0c 08 01 ff 04 74 88 8c 94 94 a4 a4 c4 44     .......t.......D
    32f8:	b8 80 06 0e 0e 08 01 00 60 18 00 00 84 84 84 84     ........`.......
    3308:	84 84 84 84 84 78 06 0e 0e 08 01 00 18 60 00 00     .....x.......`..
    3318:	84 84 84 84 84 84 84 84 84 78 06 0e 0e 08 01 00     .........x......
    3328:	30 48 00 00 84 84 84 84 84 84 84 84 84 78 06 0e     0H...........x..
    3338:	0e 08 01 00 48 48 00 00 84 84 84 84 84 84 84 84     ....HH..........
    3348:	84 78 07 0e 0e 08 01 00 18 60 00 00 82 82 44 44     .x.......`....DD
    3358:	28 10 10 10 10 10 06 0b 0b 08 01 00 80 80 f0 88     (...............
    3368:	84 84 88 f0 80 80 80 06 0a 0a 08 01 00 70 88 88     .............p..
    3378:	90 b0 88 84 84 a4 98 06 0c 0c 08 01 00 60 18 00     .............`..
    3388:	00 78 84 04 7c 84 84 8c 74 06 0c 0c 08 01 00 18     .x..|...t.......
    3398:	60 00 00 78 84 04 7c 84 84 8c 74 06 0c 0c 08 01     `..x..|...t.....
    33a8:	00 30 48 00 00 78 84 04 7c 84 84 8c 74 06 0c 0c     .0H..x..|...t...
    33b8:	08 01 00 64 98 00 00 78 84 04 7c 84 84 8c 74 06     ...d...x..|...t.
    33c8:	0c 0c 08 01 00 48 48 00 00 78 84 04 7c 84 84 8c     .....HH..x..|...
    33d8:	74 06 0d 0d 08 01 00 30 48 30 00 00 78 84 04 7c     t......0H0..x..|
    33e8:	84 84 8c 74 07 08 08 08 01 00 7c 92 12 7e 90 90     ...t......|..~..
    33f8:	92 7c 06 0a 0a 08 01 fe 78 84 80 80 80 80 84 78     .|......x......x
    3408:	10 60 06 0c 0c 08 01 00 60 18 00 00 78 84 84 fc     .`......`...x...
    3418:	80 80 84 78 06 0c 0c 08 01 00 18 60 00 00 78 84     ...x.......`..x.
    3428:	84 fc 80 80 84 78 06 0c 0c 08 01 00 30 48 00 00     .....x......0H..
    3438:	78 84 84 fc 80 80 84 78 06 0c 0c 08 01 00 48 48     x......x......HH
    3448:	00 00 78 84 84 fc 80 80 84 78 05 0c 0c 08 02 00     ..x......x......
    3458:	c0 30 00 00 60 20 20 20 20 20 20 f8 05 0c 0c 08     .0..`      .....
    3468:	02 00 30 c0 00 00 60 20 20 20 20 20 20 f8 05 0c     ..0...`      ...
    3478:	0c 08 02 00 60 90 00 00 60 20 20 20 20 20 20 f8     ....`...`      .
    3488:	05 0c 0c 08 02 00 90 90 00 00 60 20 20 20 20 20     ..........`     
    3498:	20 f8 06 0c 0c 08 01 00 64 18 28 44 04 7c 84 84      .......d.(D.|..
    34a8:	84 84 84 78 06 0c 0c 08 01 00 64 98 00 00 b8 c4     ...x......d.....
    34b8:	84 84 84 84 84 84 06 0c 0c 08 01 00 60 18 00 00     ............`...
    34c8:	78 84 84 84 84 84 84 78 06 0c 0c 08 01 00 18 60     x......x.......`
    34d8:	00 00 78 84 84 84 84 84 84 78 06 0c 0c 08 01 00     ..x......x......
    34e8:	30 48 00 00 78 84 84 84 84 84 84 78 06 0c 0c 08     0H..x......x....
    34f8:	01 00 64 98 00 00 78 84 84 84 84 84 84 78 06 0c     ..d...x......x..
    3508:	0c 08 01 00 48 48 00 00 78 84 84 84 84 84 84 78     ....HH..x......x
    3518:	06 07 07 08 01 01 30 00 00 fc 00 00 30 06 0a 0a     ......0.....0...
    3528:	08 01 ff 04 78 8c 94 94 a4 a4 c4 78 80 06 0c 0c     ....x......x....
    3538:	08 01 00 60 18 00 00 84 84 84 84 84 84 8c 74 06     ...`..........t.
    3548:	0c 0c 08 01 00 18 60 00 00 84 84 84 84 84 84 8c     ......`.........
    3558:	74 06 0c 0c 08 01 00 30 48 00 00 84 84 84 84 84     t......0H.......
    3568:	84 8c 74 06 0c 0c 08 01 00 48 48 00 00 84 84 84     ..t......HH.....
    3578:	84 84 84 8c 74 06 0e 0e 08 01 fe 18 60 00 00 84     ....t.......`...
    3588:	84 84 84 84 4c 34 04 04 78 05 0c 0c 08 02 fe 80     ....L4..x.......
    3598:	80 f0 88 88 88 90 a0 c0 80 80 80 06 0e 0e 08 01     ................
    35a8:	fe 48 48 00 00 84 84 84 84 84 4c 34 04 04 78 00     .HH.......L4..x.

000035b8 <__ctors_end>:
    35b8:	11 24       	eor	r1, r1
    35ba:	1f be       	out	0x3f, r1	; 63
    35bc:	cf ef       	ldi	r28, 0xFF	; 255
    35be:	da e0       	ldi	r29, 0x0A	; 10
    35c0:	de bf       	out	0x3e, r29	; 62
    35c2:	cd bf       	out	0x3d, r28	; 61

000035c4 <__do_copy_data>:
    35c4:	11 e0       	ldi	r17, 0x01	; 1
    35c6:	a0 e0       	ldi	r26, 0x00	; 0
    35c8:	b1 e0       	ldi	r27, 0x01	; 1
    35ca:	e6 ed       	ldi	r30, 0xD6	; 214
    35cc:	fa e5       	ldi	r31, 0x5A	; 90
    35ce:	02 c0       	rjmp	.+4      	; 0x35d4 <__do_copy_data+0x10>
    35d0:	05 90       	lpm	r0, Z+
    35d2:	0d 92       	st	X+, r0
    35d4:	a0 35       	cpi	r26, 0x50	; 80
    35d6:	b1 07       	cpc	r27, r17
    35d8:	d9 f7       	brne	.-10     	; 0x35d0 <__do_copy_data+0xc>

000035da <__do_clear_bss>:
    35da:	22 e0       	ldi	r18, 0x02	; 2
    35dc:	a0 e5       	ldi	r26, 0x50	; 80
    35de:	b1 e0       	ldi	r27, 0x01	; 1
    35e0:	01 c0       	rjmp	.+2      	; 0x35e4 <.do_clear_bss_start>

000035e2 <.do_clear_bss_loop>:
    35e2:	1d 92       	st	X+, r1

000035e4 <.do_clear_bss_start>:
    35e4:	a1 36       	cpi	r26, 0x61	; 97
    35e6:	b2 07       	cpc	r27, r18
    35e8:	e1 f7       	brne	.-8      	; 0x35e2 <.do_clear_bss_loop>
    35ea:	0e 94 17 1f 	call	0x3e2e	; 0x3e2e <main>
    35ee:	0c 94 69 2d 	jmp	0x5ad2	; 0x5ad2 <_exit>

000035f2 <__bad_interrupt>:
    35f2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000035f6 <ADC_Init>:
{
    /*
     ADEN: Set to turn on ADC , by default it is turned off
     ADPS2: ADPS2 and ADPS0 set to make division factor 128 (125 kHz) 
    */
    ADCSRA  = (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0);
    35f6:	ea e7       	ldi	r30, 0x7A	; 122
    35f8:	f0 e0       	ldi	r31, 0x00	; 0
    35fa:	87 e0       	ldi	r24, 0x07	; 7
    35fc:	80 83       	st	Z, r24
    ADCSRA |= (1 << ADEN);
    35fe:	80 81       	ld	r24, Z
    3600:	80 68       	ori	r24, 0x80	; 128
    3602:	80 83       	st	Z, r24
    3604:	08 95       	ret

00003606 <ADC_Sample>:
}

unsigned int ADC_Sample(char Channel)
{
    /* set the ADC input channel */
    ADMUX = Channel; 
    3606:	ec e7       	ldi	r30, 0x7C	; 124
    3608:	f0 e0       	ldi	r31, 0x00	; 0
    360a:	80 83       	st	Z, r24
	//ADMUX |= (1 << REFS0) 
    ADMUX |= (1 << REFS0) | (1 << REFS1); //Internal 2.56V Voltage Reference with external capacitor on AREF pin
    360c:	80 81       	ld	r24, Z
    360e:	80 6c       	ori	r24, 0xC0	; 192
    3610:	80 83       	st	Z, r24

    /* Start Conversion */
    ADCSRA |= (1<<ADSC);
    3612:	ea e7       	ldi	r30, 0x7A	; 122
    3614:	f0 e0       	ldi	r31, 0x00	; 0
    3616:	80 81       	ld	r24, Z
    3618:	80 64       	ori	r24, 0x40	; 64
    361a:	80 83       	st	Z, r24

    /* Wait for conversion to complete */
    while (ADCSRA & (1<<ADSC)); 
    361c:	80 81       	ld	r24, Z
    361e:	86 fd       	sbrc	r24, 6
    3620:	fd cf       	rjmp	.-6      	; 0x361c <ADC_Sample+0x16>

    /* Return ADC Value */
    return ADC;  
    3622:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
    3626:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
}
    362a:	08 95       	ret

0000362c <acquireSensorVoltage>:
		readSensors(); 
		_delay_ms(200);
	}
}

void acquireSensorVoltage(void) {
    362c:	cf 92       	push	r12
    362e:	df 92       	push	r13
    3630:	ef 92       	push	r14
    3632:	ff 92       	push	r15
    3634:	0f 93       	push	r16
    3636:	1f 93       	push	r17
    3638:	cf 93       	push	r28
    363a:	df 93       	push	r29
    363c:	ca e0       	ldi	r28, 0x0A	; 10
    363e:	d0 e0       	ldi	r29, 0x00	; 0
	
	// read the value from the sensor:
	float value = 0;
    3640:	c1 2c       	mov	r12, r1
    3642:	d1 2c       	mov	r13, r1
    3644:	76 01       	movw	r14, r12
	for (int i=0; i < 10; i++)
		value += ADC_Sample(sensorADC);  
    3646:	08 e6       	ldi	r16, 0x68	; 104
    3648:	11 e0       	ldi	r17, 0x01	; 1
    364a:	f8 01       	movw	r30, r16
    364c:	80 81       	ld	r24, Z
    364e:	0e 94 03 1b 	call	0x3606	; 0x3606 <ADC_Sample>
    3652:	bc 01       	movw	r22, r24
    3654:	80 e0       	ldi	r24, 0x00	; 0
    3656:	90 e0       	ldi	r25, 0x00	; 0
    3658:	0e 94 d9 27 	call	0x4fb2	; 0x4fb2 <__floatunsisf>
    365c:	9b 01       	movw	r18, r22
    365e:	ac 01       	movw	r20, r24
    3660:	c7 01       	movw	r24, r14
    3662:	b6 01       	movw	r22, r12
    3664:	0e 94 c0 26 	call	0x4d80	; 0x4d80 <__addsf3>
    3668:	6b 01       	movw	r12, r22
    366a:	7c 01       	movw	r14, r24
    366c:	21 97       	sbiw	r28, 0x01	; 1

void acquireSensorVoltage(void) {
	
	// read the value from the sensor:
	float value = 0;
	for (int i=0; i < 10; i++)
    366e:	69 f7       	brne	.-38     	; 0x364a <acquireSensorVoltage+0x1e>
		value += ADC_Sample(sensorADC);  
	
	sensorValue = value/10.0;
    3670:	20 e0       	ldi	r18, 0x00	; 0
    3672:	30 e0       	ldi	r19, 0x00	; 0
    3674:	40 e2       	ldi	r20, 0x20	; 32
    3676:	51 e4       	ldi	r21, 0x41	; 65
    3678:	0e 94 31 27 	call	0x4e62	; 0x4e62 <__divsf3>
    367c:	0e 94 aa 27 	call	0x4f54	; 0x4f54 <__fixunssfsi>
    3680:	70 93 67 01 	sts	0x0167, r23	; 0x800167 <sensorValue+0x1>
    3684:	60 93 66 01 	sts	0x0166, r22	; 0x800166 <sensorValue>
	sensorVoltage = sensorValue * VREF / 1023.0;
    3688:	80 e0       	ldi	r24, 0x00	; 0
    368a:	90 e0       	ldi	r25, 0x00	; 0
    368c:	0e 94 d9 27 	call	0x4fb2	; 0x4fb2 <__floatunsisf>
    3690:	2a e0       	ldi	r18, 0x0A	; 10
    3692:	37 ed       	ldi	r19, 0xD7	; 215
    3694:	43 e2       	ldi	r20, 0x23	; 35
    3696:	50 e4       	ldi	r21, 0x40	; 64
    3698:	0e 94 90 28 	call	0x5120	; 0x5120 <__mulsf3>
    369c:	20 e0       	ldi	r18, 0x00	; 0
    369e:	30 ec       	ldi	r19, 0xC0	; 192
    36a0:	4f e7       	ldi	r20, 0x7F	; 127
    36a2:	54 e4       	ldi	r21, 0x44	; 68
    36a4:	0e 94 31 27 	call	0x4e62	; 0x4e62 <__divsf3>
    36a8:	60 93 62 01 	sts	0x0162, r22	; 0x800162 <sensorVoltage>
    36ac:	70 93 63 01 	sts	0x0163, r23	; 0x800163 <sensorVoltage+0x1>
    36b0:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <sensorVoltage+0x2>
    36b4:	90 93 65 01 	sts	0x0165, r25	; 0x800165 <sensorVoltage+0x3>
}
    36b8:	df 91       	pop	r29
    36ba:	cf 91       	pop	r28
    36bc:	1f 91       	pop	r17
    36be:	0f 91       	pop	r16
    36c0:	ff 90       	pop	r15
    36c2:	ef 90       	pop	r14
    36c4:	df 90       	pop	r13
    36c6:	cf 90       	pop	r12
    36c8:	08 95       	ret

000036ca <acquireBatteryVoltage>:


void acquireBatteryVoltage(void) {
    // read the value from the sensor:
    batteryValue    = ADC_Sample(batteryADC);
    36ca:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    36ce:	0e 94 03 1b 	call	0x3606	; 0x3606 <ADC_Sample>
    36d2:	90 93 5f 01 	sts	0x015F, r25	; 0x80015f <batteryValue+0x1>
    36d6:	80 93 5e 01 	sts	0x015E, r24	; 0x80015e <batteryValue>
    batteryVoltage  = batteryValue * VREF / 1023.0;
    36da:	bc 01       	movw	r22, r24
    36dc:	80 e0       	ldi	r24, 0x00	; 0
    36de:	90 e0       	ldi	r25, 0x00	; 0
    36e0:	0e 94 d9 27 	call	0x4fb2	; 0x4fb2 <__floatunsisf>
    36e4:	2a e0       	ldi	r18, 0x0A	; 10
    36e6:	37 ed       	ldi	r19, 0xD7	; 215
    36e8:	43 e2       	ldi	r20, 0x23	; 35
    36ea:	50 e4       	ldi	r21, 0x40	; 64
    36ec:	0e 94 90 28 	call	0x5120	; 0x5120 <__mulsf3>
    36f0:	20 e0       	ldi	r18, 0x00	; 0
    36f2:	30 ec       	ldi	r19, 0xC0	; 192
    36f4:	4f e7       	ldi	r20, 0x7F	; 127
    36f6:	54 e4       	ldi	r21, 0x44	; 68
    36f8:	0e 94 31 27 	call	0x4e62	; 0x4e62 <__divsf3>
	batteryVoltage *= 2.3986;
    36fc:	2a ea       	ldi	r18, 0xAA	; 170
    36fe:	32 e8       	ldi	r19, 0x82	; 130
    3700:	49 e1       	ldi	r20, 0x19	; 25
    3702:	50 e4       	ldi	r21, 0x40	; 64
    3704:	0e 94 90 28 	call	0x5120	; 0x5120 <__mulsf3>
    3708:	60 93 56 01 	sts	0x0156, r22	; 0x800156 <batteryVoltage>
    370c:	70 93 57 01 	sts	0x0157, r23	; 0x800157 <batteryVoltage+0x1>
    3710:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <batteryVoltage+0x2>
    3714:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <batteryVoltage+0x3>
    3718:	08 95       	ret

0000371a <calcPressure>:
}

void calcPressure(void) {
    371a:	8f 92       	push	r8
    371c:	9f 92       	push	r9
    371e:	af 92       	push	r10
    3720:	bf 92       	push	r11
    3722:	cf 92       	push	r12
    3724:	df 92       	push	r13
    3726:	ef 92       	push	r14
    3728:	ff 92       	push	r15
	/* read the voltage for ADC */
	acquireSensorVoltage();
    372a:	0e 94 16 1b 	call	0x362c	; 0x362c <acquireSensorVoltage>
	/* Board 2*/
	//resistance  = (4.875*sensorVoltage + 8.4709784)*-4020.0;
	//resistance /= (2.965 * sensorVoltage - 8.47097843);
	
	/* Rev 1*/
	resistance  = (1.391*sensorVoltage + 3.479682641)*-8200.0;
    372e:	c0 90 62 01 	lds	r12, 0x0162	; 0x800162 <sensorVoltage>
    3732:	d0 90 63 01 	lds	r13, 0x0163	; 0x800163 <sensorVoltage+0x1>
    3736:	e0 90 64 01 	lds	r14, 0x0164	; 0x800164 <sensorVoltage+0x2>
    373a:	f0 90 65 01 	lds	r15, 0x0165	; 0x800165 <sensorVoltage+0x3>
    373e:	2a e4       	ldi	r18, 0x4A	; 74
    3740:	3c e0       	ldi	r19, 0x0C	; 12
    3742:	42 eb       	ldi	r20, 0xB2	; 178
    3744:	5f e3       	ldi	r21, 0x3F	; 63
    3746:	c7 01       	movw	r24, r14
    3748:	b6 01       	movw	r22, r12
    374a:	0e 94 90 28 	call	0x5120	; 0x5120 <__mulsf3>
    374e:	2f e1       	ldi	r18, 0x1F	; 31
    3750:	33 eb       	ldi	r19, 0xB3	; 179
    3752:	4e e5       	ldi	r20, 0x5E	; 94
    3754:	50 e4       	ldi	r21, 0x40	; 64
    3756:	0e 94 c0 26 	call	0x4d80	; 0x4d80 <__addsf3>
    375a:	20 e0       	ldi	r18, 0x00	; 0
    375c:	30 e2       	ldi	r19, 0x20	; 32
    375e:	40 e0       	ldi	r20, 0x00	; 0
    3760:	56 ec       	ldi	r21, 0xC6	; 198
    3762:	0e 94 90 28 	call	0x5120	; 0x5120 <__mulsf3>
    3766:	4b 01       	movw	r8, r22
    3768:	5c 01       	movw	r10, r24
	resistance /= (1.147 * sensorVoltage - 3.479682641);
    376a:	25 ee       	ldi	r18, 0xE5	; 229
    376c:	30 ed       	ldi	r19, 0xD0	; 208
    376e:	42 e9       	ldi	r20, 0x92	; 146
    3770:	5f e3       	ldi	r21, 0x3F	; 63
    3772:	c7 01       	movw	r24, r14
    3774:	b6 01       	movw	r22, r12
    3776:	0e 94 90 28 	call	0x5120	; 0x5120 <__mulsf3>
    377a:	2f e1       	ldi	r18, 0x1F	; 31
    377c:	33 eb       	ldi	r19, 0xB3	; 179
    377e:	4e e5       	ldi	r20, 0x5E	; 94
    3780:	50 e4       	ldi	r21, 0x40	; 64
    3782:	0e 94 bf 26 	call	0x4d7e	; 0x4d7e <__subsf3>
    3786:	9b 01       	movw	r18, r22
    3788:	ac 01       	movw	r20, r24
    378a:	c5 01       	movw	r24, r10
    378c:	b4 01       	movw	r22, r8
    378e:	0e 94 31 27 	call	0x4e62	; 0x4e62 <__divsf3>
    3792:	60 93 5a 01 	sts	0x015A, r22	; 0x80015a <resistance>
    3796:	70 93 5b 01 	sts	0x015B, r23	; 0x80015b <resistance+0x1>
    379a:	80 93 5c 01 	sts	0x015C, r24	; 0x80015c <resistance+0x2>
    379e:	90 93 5d 01 	sts	0x015D, r25	; 0x80015d <resistance+0x3>

	/* compute pressure from resistance (KOhms) */
	sensorPressure =  P1 * pow(resistance / 1000.0, P2) + P3;
    37a2:	20 e0       	ldi	r18, 0x00	; 0
    37a4:	30 e0       	ldi	r19, 0x00	; 0
    37a6:	4a e7       	ldi	r20, 0x7A	; 122
    37a8:	54 e4       	ldi	r21, 0x44	; 68
    37aa:	0e 94 31 27 	call	0x4e62	; 0x4e62 <__divsf3>
    37ae:	2b e6       	ldi	r18, 0x6B	; 107
    37b0:	3b e2       	ldi	r19, 0x2B	; 43
    37b2:	46 e3       	ldi	r20, 0x36	; 54
    37b4:	5f eb       	ldi	r21, 0xBF	; 191
    37b6:	0e 94 fd 28 	call	0x51fa	; 0x51fa <pow>
    37ba:	2d ec       	ldi	r18, 0xCD	; 205
    37bc:	3c e4       	ldi	r19, 0x4C	; 76
    37be:	45 ee       	ldi	r20, 0xE5	; 229
    37c0:	53 e4       	ldi	r21, 0x43	; 67
    37c2:	0e 94 90 28 	call	0x5120	; 0x5120 <__mulsf3>
    37c6:	28 ef       	ldi	r18, 0xF8	; 248
    37c8:	33 e5       	ldi	r19, 0x53	; 83
    37ca:	43 e9       	ldi	r20, 0x93	; 147
    37cc:	50 e4       	ldi	r21, 0x40	; 64
    37ce:	0e 94 c0 26 	call	0x4d80	; 0x4d80 <__addsf3>
    37d2:	0e 94 aa 27 	call	0x4f54	; 0x4f54 <__fixunssfsi>
    37d6:	70 93 61 01 	sts	0x0161, r23	; 0x800161 <sensorPressure+0x1>
    37da:	60 93 60 01 	sts	0x0160, r22	; 0x800160 <sensorPressure>
	/* max of pressure */
	#ifndef DEBUG
		if (sensorPressure >= 99) sensorPressure = 99;
		if (sensorPressure <= 20) reset = 1;
	#endif
}
    37de:	ff 90       	pop	r15
    37e0:	ef 90       	pop	r14
    37e2:	df 90       	pop	r13
    37e4:	cf 90       	pop	r12
    37e6:	bf 90       	pop	r11
    37e8:	af 90       	pop	r10
    37ea:	9f 90       	pop	r9
    37ec:	8f 90       	pop	r8
    37ee:	08 95       	ret

000037f0 <roundPressure>:


int roundPressure(void) {
    37f0:	cf 92       	push	r12
    37f2:	df 92       	push	r13
    37f4:	ef 92       	push	r14
    37f6:	ff 92       	push	r15
	int retval = 0;
	
	if (sensorPressure >= (10 - offset) && sensorPressure < (10 + offset)) retval = 10;
    37f8:	60 91 60 01 	lds	r22, 0x0160	; 0x800160 <sensorPressure>
    37fc:	70 91 61 01 	lds	r23, 0x0161	; 0x800161 <sensorPressure+0x1>
    3800:	80 e0       	ldi	r24, 0x00	; 0
    3802:	90 e0       	ldi	r25, 0x00	; 0
    3804:	0e 94 d9 27 	call	0x4fb2	; 0x4fb2 <__floatunsisf>
    3808:	6b 01       	movw	r12, r22
    380a:	7c 01       	movw	r14, r24
    380c:	20 e0       	ldi	r18, 0x00	; 0
    380e:	30 e0       	ldi	r19, 0x00	; 0
    3810:	40 ef       	ldi	r20, 0xF0	; 240
    3812:	50 e4       	ldi	r21, 0x40	; 64
    3814:	0e 94 8b 28 	call	0x5116	; 0x5116 <__gesf2>
    3818:	88 23       	and	r24, r24
    381a:	5c f0       	brlt	.+22     	; 0x3832 <roundPressure+0x42>
    381c:	20 e0       	ldi	r18, 0x00	; 0
    381e:	30 e0       	ldi	r19, 0x00	; 0
    3820:	48 e4       	ldi	r20, 0x48	; 72
    3822:	51 e4       	ldi	r21, 0x41	; 65
    3824:	c7 01       	movw	r24, r14
    3826:	b6 01       	movw	r22, r12
    3828:	0e 94 2c 27 	call	0x4e58	; 0x4e58 <__cmpsf2>
    382c:	88 23       	and	r24, r24
    382e:	0c f4       	brge	.+2      	; 0x3832 <roundPressure+0x42>
    3830:	f6 c0       	rjmp	.+492    	; 0x3a1e <roundPressure+0x22e>
	else if (sensorPressure >= (15 - offset) && sensorPressure < (15 + offset)) retval = 15;
    3832:	20 e0       	ldi	r18, 0x00	; 0
    3834:	30 e0       	ldi	r19, 0x00	; 0
    3836:	48 e4       	ldi	r20, 0x48	; 72
    3838:	51 e4       	ldi	r21, 0x41	; 65
    383a:	c7 01       	movw	r24, r14
    383c:	b6 01       	movw	r22, r12
    383e:	0e 94 8b 28 	call	0x5116	; 0x5116 <__gesf2>
    3842:	88 23       	and	r24, r24
    3844:	5c f0       	brlt	.+22     	; 0x385c <roundPressure+0x6c>
    3846:	20 e0       	ldi	r18, 0x00	; 0
    3848:	30 e0       	ldi	r19, 0x00	; 0
    384a:	4c e8       	ldi	r20, 0x8C	; 140
    384c:	51 e4       	ldi	r21, 0x41	; 65
    384e:	c7 01       	movw	r24, r14
    3850:	b6 01       	movw	r22, r12
    3852:	0e 94 2c 27 	call	0x4e58	; 0x4e58 <__cmpsf2>
    3856:	88 23       	and	r24, r24
    3858:	0c f4       	brge	.+2      	; 0x385c <roundPressure+0x6c>
    385a:	e4 c0       	rjmp	.+456    	; 0x3a24 <roundPressure+0x234>
	else if (sensorPressure >= (20 - offset) && sensorPressure < (20 + offset)) retval = 20;
    385c:	20 e0       	ldi	r18, 0x00	; 0
    385e:	30 e0       	ldi	r19, 0x00	; 0
    3860:	4c e8       	ldi	r20, 0x8C	; 140
    3862:	51 e4       	ldi	r21, 0x41	; 65
    3864:	c7 01       	movw	r24, r14
    3866:	b6 01       	movw	r22, r12
    3868:	0e 94 8b 28 	call	0x5116	; 0x5116 <__gesf2>
    386c:	88 23       	and	r24, r24
    386e:	5c f0       	brlt	.+22     	; 0x3886 <roundPressure+0x96>
    3870:	20 e0       	ldi	r18, 0x00	; 0
    3872:	30 e0       	ldi	r19, 0x00	; 0
    3874:	44 eb       	ldi	r20, 0xB4	; 180
    3876:	51 e4       	ldi	r21, 0x41	; 65
    3878:	c7 01       	movw	r24, r14
    387a:	b6 01       	movw	r22, r12
    387c:	0e 94 2c 27 	call	0x4e58	; 0x4e58 <__cmpsf2>
    3880:	88 23       	and	r24, r24
    3882:	0c f4       	brge	.+2      	; 0x3886 <roundPressure+0x96>
    3884:	d2 c0       	rjmp	.+420    	; 0x3a2a <roundPressure+0x23a>
	else if (sensorPressure >= (25 - offset) && sensorPressure < (25 + offset)) retval = 25;
    3886:	20 e0       	ldi	r18, 0x00	; 0
    3888:	30 e0       	ldi	r19, 0x00	; 0
    388a:	44 eb       	ldi	r20, 0xB4	; 180
    388c:	51 e4       	ldi	r21, 0x41	; 65
    388e:	c7 01       	movw	r24, r14
    3890:	b6 01       	movw	r22, r12
    3892:	0e 94 8b 28 	call	0x5116	; 0x5116 <__gesf2>
    3896:	88 23       	and	r24, r24
    3898:	5c f0       	brlt	.+22     	; 0x38b0 <roundPressure+0xc0>
    389a:	20 e0       	ldi	r18, 0x00	; 0
    389c:	30 e0       	ldi	r19, 0x00	; 0
    389e:	4c ed       	ldi	r20, 0xDC	; 220
    38a0:	51 e4       	ldi	r21, 0x41	; 65
    38a2:	c7 01       	movw	r24, r14
    38a4:	b6 01       	movw	r22, r12
    38a6:	0e 94 2c 27 	call	0x4e58	; 0x4e58 <__cmpsf2>
    38aa:	88 23       	and	r24, r24
    38ac:	0c f4       	brge	.+2      	; 0x38b0 <roundPressure+0xc0>
    38ae:	c0 c0       	rjmp	.+384    	; 0x3a30 <roundPressure+0x240>
	else if (sensorPressure >= (30 - offset) && sensorPressure < (30 + offset)) retval = 30;
    38b0:	20 e0       	ldi	r18, 0x00	; 0
    38b2:	30 e0       	ldi	r19, 0x00	; 0
    38b4:	4c ed       	ldi	r20, 0xDC	; 220
    38b6:	51 e4       	ldi	r21, 0x41	; 65
    38b8:	c7 01       	movw	r24, r14
    38ba:	b6 01       	movw	r22, r12
    38bc:	0e 94 8b 28 	call	0x5116	; 0x5116 <__gesf2>
    38c0:	88 23       	and	r24, r24
    38c2:	5c f0       	brlt	.+22     	; 0x38da <roundPressure+0xea>
    38c4:	20 e0       	ldi	r18, 0x00	; 0
    38c6:	30 e0       	ldi	r19, 0x00	; 0
    38c8:	42 e0       	ldi	r20, 0x02	; 2
    38ca:	52 e4       	ldi	r21, 0x42	; 66
    38cc:	c7 01       	movw	r24, r14
    38ce:	b6 01       	movw	r22, r12
    38d0:	0e 94 2c 27 	call	0x4e58	; 0x4e58 <__cmpsf2>
    38d4:	88 23       	and	r24, r24
    38d6:	0c f4       	brge	.+2      	; 0x38da <roundPressure+0xea>
    38d8:	ae c0       	rjmp	.+348    	; 0x3a36 <roundPressure+0x246>
	else if (sensorPressure >= (35 - offset) && sensorPressure < (35 + offset)) retval = 35;
    38da:	20 e0       	ldi	r18, 0x00	; 0
    38dc:	30 e0       	ldi	r19, 0x00	; 0
    38de:	42 e0       	ldi	r20, 0x02	; 2
    38e0:	52 e4       	ldi	r21, 0x42	; 66
    38e2:	c7 01       	movw	r24, r14
    38e4:	b6 01       	movw	r22, r12
    38e6:	0e 94 8b 28 	call	0x5116	; 0x5116 <__gesf2>
    38ea:	88 23       	and	r24, r24
    38ec:	5c f0       	brlt	.+22     	; 0x3904 <roundPressure+0x114>
    38ee:	20 e0       	ldi	r18, 0x00	; 0
    38f0:	30 e0       	ldi	r19, 0x00	; 0
    38f2:	46 e1       	ldi	r20, 0x16	; 22
    38f4:	52 e4       	ldi	r21, 0x42	; 66
    38f6:	c7 01       	movw	r24, r14
    38f8:	b6 01       	movw	r22, r12
    38fa:	0e 94 2c 27 	call	0x4e58	; 0x4e58 <__cmpsf2>
    38fe:	88 23       	and	r24, r24
    3900:	0c f4       	brge	.+2      	; 0x3904 <roundPressure+0x114>
    3902:	9c c0       	rjmp	.+312    	; 0x3a3c <roundPressure+0x24c>
	else if (sensorPressure >= (40 - offset) && sensorPressure < (40 + offset)) retval = 40;
    3904:	20 e0       	ldi	r18, 0x00	; 0
    3906:	30 e0       	ldi	r19, 0x00	; 0
    3908:	46 e1       	ldi	r20, 0x16	; 22
    390a:	52 e4       	ldi	r21, 0x42	; 66
    390c:	c7 01       	movw	r24, r14
    390e:	b6 01       	movw	r22, r12
    3910:	0e 94 8b 28 	call	0x5116	; 0x5116 <__gesf2>
    3914:	88 23       	and	r24, r24
    3916:	5c f0       	brlt	.+22     	; 0x392e <roundPressure+0x13e>
    3918:	20 e0       	ldi	r18, 0x00	; 0
    391a:	30 e0       	ldi	r19, 0x00	; 0
    391c:	4a e2       	ldi	r20, 0x2A	; 42
    391e:	52 e4       	ldi	r21, 0x42	; 66
    3920:	c7 01       	movw	r24, r14
    3922:	b6 01       	movw	r22, r12
    3924:	0e 94 2c 27 	call	0x4e58	; 0x4e58 <__cmpsf2>
    3928:	88 23       	and	r24, r24
    392a:	0c f4       	brge	.+2      	; 0x392e <roundPressure+0x13e>
    392c:	8a c0       	rjmp	.+276    	; 0x3a42 <roundPressure+0x252>
	else if (sensorPressure >= (45 - offset) && sensorPressure < (45 + offset)) retval = 45;
    392e:	20 e0       	ldi	r18, 0x00	; 0
    3930:	30 e0       	ldi	r19, 0x00	; 0
    3932:	4a e2       	ldi	r20, 0x2A	; 42
    3934:	52 e4       	ldi	r21, 0x42	; 66
    3936:	c7 01       	movw	r24, r14
    3938:	b6 01       	movw	r22, r12
    393a:	0e 94 8b 28 	call	0x5116	; 0x5116 <__gesf2>
    393e:	88 23       	and	r24, r24
    3940:	5c f0       	brlt	.+22     	; 0x3958 <roundPressure+0x168>
    3942:	20 e0       	ldi	r18, 0x00	; 0
    3944:	30 e0       	ldi	r19, 0x00	; 0
    3946:	4e e3       	ldi	r20, 0x3E	; 62
    3948:	52 e4       	ldi	r21, 0x42	; 66
    394a:	c7 01       	movw	r24, r14
    394c:	b6 01       	movw	r22, r12
    394e:	0e 94 2c 27 	call	0x4e58	; 0x4e58 <__cmpsf2>
    3952:	88 23       	and	r24, r24
    3954:	0c f4       	brge	.+2      	; 0x3958 <roundPressure+0x168>
    3956:	78 c0       	rjmp	.+240    	; 0x3a48 <roundPressure+0x258>
	else if (sensorPressure >= (50 - offset) && sensorPressure < (50 + offset)) retval = 50;
    3958:	20 e0       	ldi	r18, 0x00	; 0
    395a:	30 e0       	ldi	r19, 0x00	; 0
    395c:	4e e3       	ldi	r20, 0x3E	; 62
    395e:	52 e4       	ldi	r21, 0x42	; 66
    3960:	c7 01       	movw	r24, r14
    3962:	b6 01       	movw	r22, r12
    3964:	0e 94 8b 28 	call	0x5116	; 0x5116 <__gesf2>
    3968:	88 23       	and	r24, r24
    396a:	5c f0       	brlt	.+22     	; 0x3982 <roundPressure+0x192>
    396c:	20 e0       	ldi	r18, 0x00	; 0
    396e:	30 e0       	ldi	r19, 0x00	; 0
    3970:	42 e5       	ldi	r20, 0x52	; 82
    3972:	52 e4       	ldi	r21, 0x42	; 66
    3974:	c7 01       	movw	r24, r14
    3976:	b6 01       	movw	r22, r12
    3978:	0e 94 2c 27 	call	0x4e58	; 0x4e58 <__cmpsf2>
    397c:	88 23       	and	r24, r24
    397e:	0c f4       	brge	.+2      	; 0x3982 <roundPressure+0x192>
    3980:	66 c0       	rjmp	.+204    	; 0x3a4e <roundPressure+0x25e>
	else if (sensorPressure >= (55 - offset) && sensorPressure < (55 + offset)) retval = 55;
    3982:	20 e0       	ldi	r18, 0x00	; 0
    3984:	30 e0       	ldi	r19, 0x00	; 0
    3986:	42 e5       	ldi	r20, 0x52	; 82
    3988:	52 e4       	ldi	r21, 0x42	; 66
    398a:	c7 01       	movw	r24, r14
    398c:	b6 01       	movw	r22, r12
    398e:	0e 94 8b 28 	call	0x5116	; 0x5116 <__gesf2>
    3992:	88 23       	and	r24, r24
    3994:	5c f0       	brlt	.+22     	; 0x39ac <roundPressure+0x1bc>
    3996:	20 e0       	ldi	r18, 0x00	; 0
    3998:	30 e0       	ldi	r19, 0x00	; 0
    399a:	46 e6       	ldi	r20, 0x66	; 102
    399c:	52 e4       	ldi	r21, 0x42	; 66
    399e:	c7 01       	movw	r24, r14
    39a0:	b6 01       	movw	r22, r12
    39a2:	0e 94 2c 27 	call	0x4e58	; 0x4e58 <__cmpsf2>
    39a6:	88 23       	and	r24, r24
    39a8:	0c f4       	brge	.+2      	; 0x39ac <roundPressure+0x1bc>
    39aa:	54 c0       	rjmp	.+168    	; 0x3a54 <roundPressure+0x264>
	else if (sensorPressure >= (60 - offset) && sensorPressure < (60 + offset)) retval = 60;
    39ac:	20 e0       	ldi	r18, 0x00	; 0
    39ae:	30 e0       	ldi	r19, 0x00	; 0
    39b0:	46 e6       	ldi	r20, 0x66	; 102
    39b2:	52 e4       	ldi	r21, 0x42	; 66
    39b4:	c7 01       	movw	r24, r14
    39b6:	b6 01       	movw	r22, r12
    39b8:	0e 94 8b 28 	call	0x5116	; 0x5116 <__gesf2>
    39bc:	88 23       	and	r24, r24
    39be:	5c f0       	brlt	.+22     	; 0x39d6 <roundPressure+0x1e6>
    39c0:	20 e0       	ldi	r18, 0x00	; 0
    39c2:	30 e0       	ldi	r19, 0x00	; 0
    39c4:	4a e7       	ldi	r20, 0x7A	; 122
    39c6:	52 e4       	ldi	r21, 0x42	; 66
    39c8:	c7 01       	movw	r24, r14
    39ca:	b6 01       	movw	r22, r12
    39cc:	0e 94 2c 27 	call	0x4e58	; 0x4e58 <__cmpsf2>
    39d0:	88 23       	and	r24, r24
    39d2:	0c f4       	brge	.+2      	; 0x39d6 <roundPressure+0x1e6>
    39d4:	42 c0       	rjmp	.+132    	; 0x3a5a <roundPressure+0x26a>
	else if (sensorPressure >= (65 - offset) && sensorPressure < (65 + offset)) retval = 65;
    39d6:	20 e0       	ldi	r18, 0x00	; 0
    39d8:	30 e0       	ldi	r19, 0x00	; 0
    39da:	4a e7       	ldi	r20, 0x7A	; 122
    39dc:	52 e4       	ldi	r21, 0x42	; 66
    39de:	c7 01       	movw	r24, r14
    39e0:	b6 01       	movw	r22, r12
    39e2:	0e 94 8b 28 	call	0x5116	; 0x5116 <__gesf2>
    39e6:	88 23       	and	r24, r24
    39e8:	6c f0       	brlt	.+26     	; 0x3a04 <roundPressure+0x214>
    39ea:	20 e0       	ldi	r18, 0x00	; 0
    39ec:	30 e0       	ldi	r19, 0x00	; 0
    39ee:	47 e8       	ldi	r20, 0x87	; 135
    39f0:	52 e4       	ldi	r21, 0x42	; 66
    39f2:	c7 01       	movw	r24, r14
    39f4:	b6 01       	movw	r22, r12
    39f6:	0e 94 2c 27 	call	0x4e58	; 0x4e58 <__cmpsf2>
    39fa:	88 23       	and	r24, r24
    39fc:	8c f1       	brlt	.+98     	; 0x3a60 <roundPressure+0x270>
	else if (sensorPressure >= (65 - offset)) retval = 99;
    39fe:	83 e6       	ldi	r24, 0x63	; 99
    3a00:	90 e0       	ldi	r25, 0x00	; 0
    3a02:	33 c0       	rjmp	.+102    	; 0x3a6a <roundPressure+0x27a>
    3a04:	20 e0       	ldi	r18, 0x00	; 0
    3a06:	30 e0       	ldi	r19, 0x00	; 0
    3a08:	4a e7       	ldi	r20, 0x7A	; 122
    3a0a:	52 e4       	ldi	r21, 0x42	; 66
    3a0c:	c7 01       	movw	r24, r14
    3a0e:	b6 01       	movw	r22, r12
    3a10:	0e 94 8b 28 	call	0x5116	; 0x5116 <__gesf2>
    3a14:	88 23       	and	r24, r24
    3a16:	3c f5       	brge	.+78     	; 0x3a66 <roundPressure+0x276>
	else retval = 0;
    3a18:	80 e0       	ldi	r24, 0x00	; 0
    3a1a:	90 e0       	ldi	r25, 0x00	; 0
    3a1c:	26 c0       	rjmp	.+76     	; 0x3a6a <roundPressure+0x27a>


int roundPressure(void) {
	int retval = 0;
	
	if (sensorPressure >= (10 - offset) && sensorPressure < (10 + offset)) retval = 10;
    3a1e:	8a e0       	ldi	r24, 0x0A	; 10
    3a20:	90 e0       	ldi	r25, 0x00	; 0
    3a22:	23 c0       	rjmp	.+70     	; 0x3a6a <roundPressure+0x27a>
	else if (sensorPressure >= (15 - offset) && sensorPressure < (15 + offset)) retval = 15;
    3a24:	8f e0       	ldi	r24, 0x0F	; 15
    3a26:	90 e0       	ldi	r25, 0x00	; 0
    3a28:	20 c0       	rjmp	.+64     	; 0x3a6a <roundPressure+0x27a>
	else if (sensorPressure >= (20 - offset) && sensorPressure < (20 + offset)) retval = 20;
    3a2a:	84 e1       	ldi	r24, 0x14	; 20
    3a2c:	90 e0       	ldi	r25, 0x00	; 0
    3a2e:	1d c0       	rjmp	.+58     	; 0x3a6a <roundPressure+0x27a>
	else if (sensorPressure >= (25 - offset) && sensorPressure < (25 + offset)) retval = 25;
    3a30:	89 e1       	ldi	r24, 0x19	; 25
    3a32:	90 e0       	ldi	r25, 0x00	; 0
    3a34:	1a c0       	rjmp	.+52     	; 0x3a6a <roundPressure+0x27a>
	else if (sensorPressure >= (30 - offset) && sensorPressure < (30 + offset)) retval = 30;
    3a36:	8e e1       	ldi	r24, 0x1E	; 30
    3a38:	90 e0       	ldi	r25, 0x00	; 0
    3a3a:	17 c0       	rjmp	.+46     	; 0x3a6a <roundPressure+0x27a>
	else if (sensorPressure >= (35 - offset) && sensorPressure < (35 + offset)) retval = 35;
    3a3c:	83 e2       	ldi	r24, 0x23	; 35
    3a3e:	90 e0       	ldi	r25, 0x00	; 0
    3a40:	14 c0       	rjmp	.+40     	; 0x3a6a <roundPressure+0x27a>
	else if (sensorPressure >= (40 - offset) && sensorPressure < (40 + offset)) retval = 40;
    3a42:	88 e2       	ldi	r24, 0x28	; 40
    3a44:	90 e0       	ldi	r25, 0x00	; 0
    3a46:	11 c0       	rjmp	.+34     	; 0x3a6a <roundPressure+0x27a>
	else if (sensorPressure >= (45 - offset) && sensorPressure < (45 + offset)) retval = 45;
    3a48:	8d e2       	ldi	r24, 0x2D	; 45
    3a4a:	90 e0       	ldi	r25, 0x00	; 0
    3a4c:	0e c0       	rjmp	.+28     	; 0x3a6a <roundPressure+0x27a>
	else if (sensorPressure >= (50 - offset) && sensorPressure < (50 + offset)) retval = 50;
    3a4e:	82 e3       	ldi	r24, 0x32	; 50
    3a50:	90 e0       	ldi	r25, 0x00	; 0
    3a52:	0b c0       	rjmp	.+22     	; 0x3a6a <roundPressure+0x27a>
	else if (sensorPressure >= (55 - offset) && sensorPressure < (55 + offset)) retval = 55;
    3a54:	87 e3       	ldi	r24, 0x37	; 55
    3a56:	90 e0       	ldi	r25, 0x00	; 0
    3a58:	08 c0       	rjmp	.+16     	; 0x3a6a <roundPressure+0x27a>
	else if (sensorPressure >= (60 - offset) && sensorPressure < (60 + offset)) retval = 60;
    3a5a:	8c e3       	ldi	r24, 0x3C	; 60
    3a5c:	90 e0       	ldi	r25, 0x00	; 0
    3a5e:	05 c0       	rjmp	.+10     	; 0x3a6a <roundPressure+0x27a>
	else if (sensorPressure >= (65 - offset) && sensorPressure < (65 + offset)) retval = 65;
    3a60:	81 e4       	ldi	r24, 0x41	; 65
    3a62:	90 e0       	ldi	r25, 0x00	; 0
    3a64:	02 c0       	rjmp	.+4      	; 0x3a6a <roundPressure+0x27a>
	else if (sensorPressure >= (65 - offset)) retval = 99;
    3a66:	83 e6       	ldi	r24, 0x63	; 99
    3a68:	90 e0       	ldi	r25, 0x00	; 0
	else retval = 0;

	return retval;
}
    3a6a:	ff 90       	pop	r15
    3a6c:	ef 90       	pop	r14
    3a6e:	df 90       	pop	r13
    3a70:	cf 90       	pop	r12
    3a72:	08 95       	ret

00003a74 <enableDisplay>:
	u8g_SetColorIndex(&u8g, 1);		// assign default color value  	
	u8g_SetContrast(&u8g, 100);		// set the contrast
}

void enableDisplay(void) {
	 set_bit(PORTD, 2);   // sets the ADC on
    3a74:	5a 9a       	sbi	0x0b, 2	; 11
	 set_bit(PORTD, 3);   // sets the LED on
    3a76:	5b 9a       	sbi	0x0b, 3	; 11
	 set_bit(PORTD, 4);   // sets the LCD on
    3a78:	5c 9a       	sbi	0x0b, 4	; 11
    3a7a:	08 95       	ret

00003a7c <initBoard>:
		draw();
	} while (u8g_NextPage(&u8g));

}

void initBoard(void) {	
    3a7c:	cf 92       	push	r12
    3a7e:	ef 92       	push	r14
    3a80:	0f 93       	push	r16
    3a82:	cf 93       	push	r28
	 /* Configure LED, LCD, ADC I/O */
	 set_bit(DDRD, 2);    // Pin PD2 (ADC) is now configured as an OUTPUT
    3a84:	52 9a       	sbi	0x0a, 2	; 10
	 set_bit(DDRD, 3);    // Pin PD3 (LED) is now configured as an OUTPUT
    3a86:	53 9a       	sbi	0x0a, 3	; 10
	 set_bit(DDRD, 4);    // Pin PD4 (LCD) is now configured as an OUTPUT
    3a88:	54 9a       	sbi	0x0a, 4	; 10
	 set_bit(DDRD, 5);    // Pin PD5 (CS) is now configured as an OUTPUT
    3a8a:	55 9a       	sbi	0x0a, 5	; 10
	 set_bit(DDRD, 7);    // Pin PD5 (A0) is now configured as an OUTPUT
    3a8c:	57 9a       	sbi	0x0a, 7	; 10
	 set_bit(DDRD, 6);    // Pin PD5 (RST) is now configured as an OUTPUT
    3a8e:	56 9a       	sbi	0x0a, 6	; 10
	 
	 /* Enable Display */
	 enableDisplay();
    3a90:	0e 94 3a 1d 	call	0x3a74	; 0x3a74 <enableDisplay>
	 
	 /* Enable Sleep Timer 15 mins (set in timer.h*/
	 Timer_Init();
    3a94:	0e 94 36 1f 	call	0x3e6c	; 0x3e6c <Timer_Init>
	 Timer_Enable();
    3a98:	0e 94 45 1f 	call	0x3e8a	; 0x3e8a <Timer_Enable>
    A0: PORTD, Bit 7 --> PN(3,7)
    SCK: PORTB, Bit 1 --> PN(1,1)
    MOSI: PORTB, Bit 2 --> PN(1,2)
	RST: PORTD, Bit 6 --> PN(3,6)
    */
    u8g_InitSPI(&u8g, &u8g_dev_st7565_lm6059_sw_spi, PN(1, 1) /*SCK PB1*/, PN(1, 2) /*MOSI PB2*/, PN(3, 5) /*CS PD5*/, PN(3, 7) /*AO PD7*/, PN(3, 6) /* RST PD 6*/);
    3a9c:	66 e0       	ldi	r22, 0x06	; 6
    3a9e:	83 e0       	ldi	r24, 0x03	; 3
    3aa0:	0e 94 2a 21 	call	0x4254	; 0x4254 <u8g_Pin>
    3aa4:	c8 2e       	mov	r12, r24
    3aa6:	67 e0       	ldi	r22, 0x07	; 7
    3aa8:	83 e0       	ldi	r24, 0x03	; 3
    3aaa:	0e 94 2a 21 	call	0x4254	; 0x4254 <u8g_Pin>
    3aae:	e8 2e       	mov	r14, r24
    3ab0:	65 e0       	ldi	r22, 0x05	; 5
    3ab2:	83 e0       	ldi	r24, 0x03	; 3
    3ab4:	0e 94 2a 21 	call	0x4254	; 0x4254 <u8g_Pin>
    3ab8:	08 2f       	mov	r16, r24
    3aba:	62 e0       	ldi	r22, 0x02	; 2
    3abc:	81 e0       	ldi	r24, 0x01	; 1
    3abe:	0e 94 2a 21 	call	0x4254	; 0x4254 <u8g_Pin>
    3ac2:	c8 2f       	mov	r28, r24
    3ac4:	61 e0       	ldi	r22, 0x01	; 1
    3ac6:	81 e0       	ldi	r24, 0x01	; 1
    3ac8:	0e 94 2a 21 	call	0x4254	; 0x4254 <u8g_Pin>
    3acc:	48 2f       	mov	r20, r24
    3ace:	2c 2f       	mov	r18, r28
    3ad0:	62 e0       	ldi	r22, 0x02	; 2
    3ad2:	71 e0       	ldi	r23, 0x01	; 1
    3ad4:	8e ef       	ldi	r24, 0xFE	; 254
    3ad6:	91 e0       	ldi	r25, 0x01	; 1
    3ad8:	0e 94 41 25 	call	0x4a82	; 0x4a82 <u8g_InitSPI>
	
	u8g_SetColorIndex(&u8g, 1);		// assign default color value  	
    3adc:	61 e0       	ldi	r22, 0x01	; 1
    3ade:	8e ef       	ldi	r24, 0xFE	; 254
    3ae0:	91 e0       	ldi	r25, 0x01	; 1
    3ae2:	0e 94 93 25 	call	0x4b26	; 0x4b26 <u8g_SetColorIndex>
	u8g_SetContrast(&u8g, 100);		// set the contrast
    3ae6:	64 e6       	ldi	r22, 0x64	; 100
    3ae8:	8e ef       	ldi	r24, 0xFE	; 254
    3aea:	91 e0       	ldi	r25, 0x01	; 1
    3aec:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <u8g_SetContrast>
}
    3af0:	cf 91       	pop	r28
    3af2:	0f 91       	pop	r16
    3af4:	ef 90       	pop	r14
    3af6:	cf 90       	pop	r12
    3af8:	08 95       	ret

00003afa <disableDisplay>:
	 set_bit(PORTD, 3);   // sets the LED on
	 set_bit(PORTD, 4);   // sets the LCD on
}

void disableDisplay(void) {
	clear_bit(PORTD, 2);   // sets the ADC off
    3afa:	5a 98       	cbi	0x0b, 2	; 11
	clear_bit(PORTD, 3);   // sets the LED off
    3afc:	5b 98       	cbi	0x0b, 3	; 11
	clear_bit(PORTD, 4);   // sets the LCD off
    3afe:	5c 98       	cbi	0x0b, 4	; 11
    3b00:	08 95       	ret

00003b02 <drawBatteryLow>:
		#endif
	}
}

void drawBatteryLow(void) {
	u8g_SetFont(&u8g, u8g_font_unifont);
    3b02:	68 e0       	ldi	r22, 0x08	; 8
    3b04:	70 e2       	ldi	r23, 0x20	; 32
    3b06:	8e ef       	ldi	r24, 0xFE	; 254
    3b08:	91 e0       	ldi	r25, 0x01	; 1
    3b0a:	0e 94 24 24 	call	0x4848	; 0x4848 <u8g_SetFont>
	u8g_DrawStr(&u8g, 90, 10,  "BATT");
    3b0e:	20 e1       	ldi	r18, 0x10	; 16
    3b10:	31 e0       	ldi	r19, 0x01	; 1
    3b12:	4a e0       	ldi	r20, 0x0A	; 10
    3b14:	6a e5       	ldi	r22, 0x5A	; 90
    3b16:	8e ef       	ldi	r24, 0xFE	; 254
    3b18:	91 e0       	ldi	r25, 0x01	; 1
    3b1a:	0e 94 98 23 	call	0x4730	; 0x4730 <u8g_DrawStr>
	clear_bit(PORTD, 3);   // sets the LED off
    3b1e:	5b 98       	cbi	0x0b, 3	; 11
    3b20:	08 95       	ret

00003b22 <draw>:
}

void draw(void) {
	// graphic commands to redraw the complete screen should be placed here
	
	if(batterylevel == BATTERY_LOW){
    3b22:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <batterylevel>
    3b26:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <batterylevel+0x1>
    3b2a:	01 97       	sbiw	r24, 0x01	; 1
    3b2c:	11 f4       	brne	.+4      	; 0x3b32 <draw+0x10>
		drawBatteryLow();
    3b2e:	0e 94 81 1d 	call	0x3b02	; 0x3b02 <drawBatteryLow>
	}

	if (reset == 1) {
    3b32:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <__data_end>
    3b36:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <__data_end+0x1>
    3b3a:	01 97       	sbiw	r24, 0x01	; 1
    3b3c:	79 f4       	brne	.+30     	; 0x3b5c <draw+0x3a>
		u8g_SetFont(&u8g, u8g_font_fub30r);
    3b3e:	62 e0       	ldi	r22, 0x02	; 2
    3b40:	72 e0       	ldi	r23, 0x02	; 2
    3b42:	8e ef       	ldi	r24, 0xFE	; 254
    3b44:	91 e0       	ldi	r25, 0x01	; 1
    3b46:	0e 94 24 24 	call	0x4848	; 0x4848 <u8g_SetFont>
		u8g_DrawStr(&u8g, 5, 56, "WRAP");
    3b4a:	23 e3       	ldi	r18, 0x33	; 51
    3b4c:	31 e0       	ldi	r19, 0x01	; 1
    3b4e:	48 e3       	ldi	r20, 0x38	; 56
    3b50:	65 e0       	ldi	r22, 0x05	; 5
    3b52:	8e ef       	ldi	r24, 0xFE	; 254
    3b54:	91 e0       	ldi	r25, 0x01	; 1
    3b56:	0e 94 98 23 	call	0x4730	; 0x4730 <u8g_DrawStr>
    3b5a:	08 95       	ret
		} else {

		// DEBUG
		#ifdef DEBUG
		u8g_SetFont(&u8g, u8g_font_unifont);
    3b5c:	68 e0       	ldi	r22, 0x08	; 8
    3b5e:	70 e2       	ldi	r23, 0x20	; 32
    3b60:	8e ef       	ldi	r24, 0xFE	; 254
    3b62:	91 e0       	ldi	r25, 0x01	; 1
    3b64:	0e 94 24 24 	call	0x4848	; 0x4848 <u8g_SetFont>
		u8g_DrawStr(&u8g, 0, 10,  displayADC);
    3b68:	2a ee       	ldi	r18, 0xEA	; 234
    3b6a:	31 e0       	ldi	r19, 0x01	; 1
    3b6c:	4a e0       	ldi	r20, 0x0A	; 10
    3b6e:	60 e0       	ldi	r22, 0x00	; 0
    3b70:	8e ef       	ldi	r24, 0xFE	; 254
    3b72:	91 e0       	ldi	r25, 0x01	; 1
    3b74:	0e 94 98 23 	call	0x4730	; 0x4730 <u8g_DrawStr>
		u8g_DrawStr(&u8g, 0, 22,  displayVoltage);
    3b78:	23 e4       	ldi	r18, 0x43	; 67
    3b7a:	32 e0       	ldi	r19, 0x02	; 2
    3b7c:	46 e1       	ldi	r20, 0x16	; 22
    3b7e:	60 e0       	ldi	r22, 0x00	; 0
    3b80:	8e ef       	ldi	r24, 0xFE	; 254
    3b82:	91 e0       	ldi	r25, 0x01	; 1
    3b84:	0e 94 98 23 	call	0x4730	; 0x4730 <u8g_DrawStr>
		u8g_DrawStr(&u8g, 0, 34,  displayResistance);
    3b88:	27 e3       	ldi	r18, 0x37	; 55
    3b8a:	32 e0       	ldi	r19, 0x02	; 2
    3b8c:	42 e2       	ldi	r20, 0x22	; 34
    3b8e:	60 e0       	ldi	r22, 0x00	; 0
    3b90:	8e ef       	ldi	r24, 0xFE	; 254
    3b92:	91 e0       	ldi	r25, 0x01	; 1
    3b94:	0e 94 98 23 	call	0x4730	; 0x4730 <u8g_DrawStr>
		u8g_DrawStr(&u8g, 0, 46,  displayPressure);
    3b98:	24 ef       	ldi	r18, 0xF4	; 244
    3b9a:	31 e0       	ldi	r19, 0x01	; 1
    3b9c:	4e e2       	ldi	r20, 0x2E	; 46
    3b9e:	60 e0       	ldi	r22, 0x00	; 0
    3ba0:	8e ef       	ldi	r24, 0xFE	; 254
    3ba2:	91 e0       	ldi	r25, 0x01	; 1
    3ba4:	0e 94 98 23 	call	0x4730	; 0x4730 <u8g_DrawStr>
		u8g_DrawStr(&u8g, 0, 58,  displayScalePressure);
    3ba8:	2d e4       	ldi	r18, 0x4D	; 77
    3baa:	32 e0       	ldi	r19, 0x02	; 2
    3bac:	4a e3       	ldi	r20, 0x3A	; 58
    3bae:	60 e0       	ldi	r22, 0x00	; 0
    3bb0:	8e ef       	ldi	r24, 0xFE	; 254
    3bb2:	91 e0       	ldi	r25, 0x01	; 1
    3bb4:	0e 94 98 23 	call	0x4730	; 0x4730 <u8g_DrawStr>
    3bb8:	08 95       	ret

00003bba <readSensors>:
	else retval = 0;

	return retval;
}

void readSensors(void) {
    3bba:	8f 92       	push	r8
    3bbc:	9f 92       	push	r9
    3bbe:	af 92       	push	r10
    3bc0:	bf 92       	push	r11
    3bc2:	cf 92       	push	r12
    3bc4:	df 92       	push	r13
    3bc6:	ef 92       	push	r14
    3bc8:	ff 92       	push	r15
    3bca:	cf 93       	push	r28
    3bcc:	df 93       	push	r29
	// -------------- read the sensors voltage ------------------- //
	calcPressure();
    3bce:	0e 94 8d 1b 	call	0x371a	; 0x371a <calcPressure>
	acquireBatteryVoltage();
    3bd2:	0e 94 65 1b 	call	0x36ca	; 0x36ca <acquireBatteryVoltage>
	
	// ------------------ check battery levels ------------------- //
	if(timerinterupt == 1 || batteryVoltage < 4.36){
    3bd6:	80 91 35 02 	lds	r24, 0x0235	; 0x800235 <timerinterupt>
    3bda:	90 91 36 02 	lds	r25, 0x0236	; 0x800236 <timerinterupt+0x1>
    3bde:	01 97       	sbiw	r24, 0x01	; 1
    3be0:	91 f0       	breq	.+36     	; 0x3c06 <readSensors+0x4c>
    3be2:	c0 90 56 01 	lds	r12, 0x0156	; 0x800156 <batteryVoltage>
    3be6:	d0 90 57 01 	lds	r13, 0x0157	; 0x800157 <batteryVoltage+0x1>
    3bea:	e0 90 58 01 	lds	r14, 0x0158	; 0x800158 <batteryVoltage+0x2>
    3bee:	f0 90 59 01 	lds	r15, 0x0159	; 0x800159 <batteryVoltage+0x3>
    3bf2:	2f e1       	ldi	r18, 0x1F	; 31
    3bf4:	35 e8       	ldi	r19, 0x85	; 133
    3bf6:	4b e8       	ldi	r20, 0x8B	; 139
    3bf8:	50 e4       	ldi	r21, 0x40	; 64
    3bfa:	c7 01       	movw	r24, r14
    3bfc:	b6 01       	movw	r22, r12
    3bfe:	0e 94 2c 27 	call	0x4e58	; 0x4e58 <__cmpsf2>
    3c02:	88 23       	and	r24, r24
    3c04:	ac f4       	brge	.+42     	; 0x3c30 <readSensors+0x76>
		batterylevel = BATTERY_CRITICAL;
    3c06:	82 e0       	ldi	r24, 0x02	; 2
    3c08:	90 e0       	ldi	r25, 0x00	; 0
    3c0a:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <batterylevel+0x1>
    3c0e:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <batterylevel>
		drawBatteryLow();
    3c12:	0e 94 81 1d 	call	0x3b02	; 0x3b02 <drawBatteryLow>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    3c16:	2a ea       	ldi	r18, 0xAA	; 170
    3c18:	36 ee       	ldi	r19, 0xE6	; 230
    3c1a:	86 e9       	ldi	r24, 0x96	; 150
    3c1c:	91 e0       	ldi	r25, 0x01	; 1
    3c1e:	21 50       	subi	r18, 0x01	; 1
    3c20:	30 40       	sbci	r19, 0x00	; 0
    3c22:	80 40       	sbci	r24, 0x00	; 0
    3c24:	90 40       	sbci	r25, 0x00	; 0
    3c26:	d9 f7       	brne	.-10     	; 0x3c1e <readSensors+0x64>
    3c28:	00 00       	nop
		_delay_ms(10000); // wait 10 secs
		disableDisplay();
    3c2a:	0e 94 7d 1d 	call	0x3afa	; 0x3afa <disableDisplay>
    3c2e:	15 c0       	rjmp	.+42     	; 0x3c5a <readSensors+0xa0>
	}
	else if(batteryVoltage < 4.76)
    3c30:	2c ee       	ldi	r18, 0xEC	; 236
    3c32:	31 e5       	ldi	r19, 0x51	; 81
    3c34:	48 e9       	ldi	r20, 0x98	; 152
    3c36:	50 e4       	ldi	r21, 0x40	; 64
    3c38:	c7 01       	movw	r24, r14
    3c3a:	b6 01       	movw	r22, r12
    3c3c:	0e 94 2c 27 	call	0x4e58	; 0x4e58 <__cmpsf2>
    3c40:	88 23       	and	r24, r24
    3c42:	3c f4       	brge	.+14     	; 0x3c52 <readSensors+0x98>
		batterylevel = BATTERY_LOW;
    3c44:	81 e0       	ldi	r24, 0x01	; 1
    3c46:	90 e0       	ldi	r25, 0x00	; 0
    3c48:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <batterylevel+0x1>
    3c4c:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <batterylevel>
    3c50:	04 c0       	rjmp	.+8      	; 0x3c5a <readSensors+0xa0>
	else
		batterylevel = BATTERY_NORMAL;
    3c52:	10 92 55 01 	sts	0x0155, r1	; 0x800155 <batterylevel+0x1>
    3c56:	10 92 54 01 	sts	0x0154, r1	; 0x800154 <batterylevel>
	

	if (reset == 1 && initPressure != sensorPressure) reset = 0;
    3c5a:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <__data_end>
    3c5e:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <__data_end+0x1>
    3c62:	01 97       	sbiw	r24, 0x01	; 1
    3c64:	79 f4       	brne	.+30     	; 0x3c84 <readSensors+0xca>
    3c66:	20 91 52 01 	lds	r18, 0x0152	; 0x800152 <initPressure>
    3c6a:	30 91 53 01 	lds	r19, 0x0153	; 0x800153 <initPressure+0x1>
    3c6e:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <sensorPressure>
    3c72:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <sensorPressure+0x1>
    3c76:	28 17       	cp	r18, r24
    3c78:	39 07       	cpc	r19, r25
    3c7a:	21 f0       	breq	.+8      	; 0x3c84 <readSensors+0xca>
    3c7c:	10 92 51 01 	sts	0x0151, r1	; 0x800151 <__data_end+0x1>
    3c80:	10 92 50 01 	sts	0x0150, r1	; 0x800150 <__data_end>

	// --------------- Display Debugging Info -------------------- //
	#ifdef DEBUG
	sprintf(displayADC, "ADC:= %u", sensorValue);
    3c84:	80 91 67 01 	lds	r24, 0x0167	; 0x800167 <sensorValue+0x1>
    3c88:	8f 93       	push	r24
    3c8a:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <sensorValue>
    3c8e:	8f 93       	push	r24
    3c90:	85 e1       	ldi	r24, 0x15	; 21
    3c92:	91 e0       	ldi	r25, 0x01	; 1
    3c94:	9f 93       	push	r25
    3c96:	8f 93       	push	r24
    3c98:	8a ee       	ldi	r24, 0xEA	; 234
    3c9a:	91 e0       	ldi	r25, 0x01	; 1
    3c9c:	9f 93       	push	r25
    3c9e:	8f 93       	push	r24
    3ca0:	0e 94 91 2a 	call	0x5522	; 0x5522 <sprintf>
	int volt = (sensorVoltage - (int) sensorVoltage) * 100;
    3ca4:	80 90 62 01 	lds	r8, 0x0162	; 0x800162 <sensorVoltage>
    3ca8:	90 90 63 01 	lds	r9, 0x0163	; 0x800163 <sensorVoltage+0x1>
    3cac:	a0 90 64 01 	lds	r10, 0x0164	; 0x800164 <sensorVoltage+0x2>
    3cb0:	b0 90 65 01 	lds	r11, 0x0165	; 0x800165 <sensorVoltage+0x3>
    3cb4:	c5 01       	movw	r24, r10
    3cb6:	b4 01       	movw	r22, r8
    3cb8:	0e 94 a3 27 	call	0x4f46	; 0x4f46 <__fixsfsi>
    3cbc:	6b 01       	movw	r12, r22
    3cbe:	7c 01       	movw	r14, r24
    3cc0:	07 2e       	mov	r0, r23
    3cc2:	00 0c       	add	r0, r0
    3cc4:	88 0b       	sbc	r24, r24
    3cc6:	99 0b       	sbc	r25, r25
    3cc8:	0e 94 db 27 	call	0x4fb6	; 0x4fb6 <__floatsisf>
    3ccc:	9b 01       	movw	r18, r22
    3cce:	ac 01       	movw	r20, r24
    3cd0:	c5 01       	movw	r24, r10
    3cd2:	b4 01       	movw	r22, r8
    3cd4:	0e 94 bf 26 	call	0x4d7e	; 0x4d7e <__subsf3>
    3cd8:	20 e0       	ldi	r18, 0x00	; 0
    3cda:	30 e0       	ldi	r19, 0x00	; 0
    3cdc:	48 ec       	ldi	r20, 0xC8	; 200
    3cde:	52 e4       	ldi	r21, 0x42	; 66
    3ce0:	0e 94 90 28 	call	0x5120	; 0x5120 <__mulsf3>
    3ce4:	0e 94 a3 27 	call	0x4f46	; 0x4f46 <__fixsfsi>
	sprintf(displayVoltage, "V:= %d.%d", (int) sensorVoltage, volt);
    3ce8:	7f 93       	push	r23
    3cea:	6f 93       	push	r22
    3cec:	df 92       	push	r13
    3cee:	cf 92       	push	r12
    3cf0:	8e e1       	ldi	r24, 0x1E	; 30
    3cf2:	91 e0       	ldi	r25, 0x01	; 1
    3cf4:	9f 93       	push	r25
    3cf6:	8f 93       	push	r24
    3cf8:	83 e4       	ldi	r24, 0x43	; 67
    3cfa:	92 e0       	ldi	r25, 0x02	; 2
    3cfc:	9f 93       	push	r25
    3cfe:	8f 93       	push	r24
    3d00:	0e 94 91 2a 	call	0x5522	; 0x5522 <sprintf>
	sprintf(displayResistance, "R:= %lu", (unsigned long)resistance);
    3d04:	60 91 5a 01 	lds	r22, 0x015A	; 0x80015a <resistance>
    3d08:	70 91 5b 01 	lds	r23, 0x015B	; 0x80015b <resistance+0x1>
    3d0c:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <resistance+0x2>
    3d10:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <resistance+0x3>
    3d14:	0e 94 aa 27 	call	0x4f54	; 0x4f54 <__fixunssfsi>
    3d18:	9f 93       	push	r25
    3d1a:	8f 93       	push	r24
    3d1c:	7f 93       	push	r23
    3d1e:	6f 93       	push	r22
    3d20:	88 e2       	ldi	r24, 0x28	; 40
    3d22:	91 e0       	ldi	r25, 0x01	; 1
    3d24:	9f 93       	push	r25
    3d26:	8f 93       	push	r24
    3d28:	87 e3       	ldi	r24, 0x37	; 55
    3d2a:	92 e0       	ldi	r25, 0x02	; 2
    3d2c:	9f 93       	push	r25
    3d2e:	8f 93       	push	r24
    3d30:	0e 94 91 2a 	call	0x5522	; 0x5522 <sprintf>

	if (reset == 1) {
    3d34:	2d b7       	in	r18, 0x3d	; 61
    3d36:	3e b7       	in	r19, 0x3e	; 62
    3d38:	2a 5e       	subi	r18, 0xEA	; 234
    3d3a:	3f 4f       	sbci	r19, 0xFF	; 255
    3d3c:	0f b6       	in	r0, 0x3f	; 63
    3d3e:	f8 94       	cli
    3d40:	3e bf       	out	0x3e, r19	; 62
    3d42:	0f be       	out	0x3f, r0	; 63
    3d44:	2d bf       	out	0x3d, r18	; 61
    3d46:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <__data_end>
    3d4a:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <__data_end+0x1>
    3d4e:	01 97       	sbiw	r24, 0x01	; 1
    3d50:	99 f4       	brne	.+38     	; 0x3d78 <readSensors+0x1be>
		sprintf(displayPressure, "P: WRAP");
    3d52:	88 e0       	ldi	r24, 0x08	; 8
    3d54:	e0 e3       	ldi	r30, 0x30	; 48
    3d56:	f1 e0       	ldi	r31, 0x01	; 1
    3d58:	a4 ef       	ldi	r26, 0xF4	; 244
    3d5a:	b1 e0       	ldi	r27, 0x01	; 1
    3d5c:	01 90       	ld	r0, Z+
    3d5e:	0d 92       	st	X+, r0
    3d60:	8a 95       	dec	r24
    3d62:	e1 f7       	brne	.-8      	; 0x3d5c <readSensors+0x1a2>
		sprintf(displayScalePressure, "P:= WRAP");
    3d64:	89 e0       	ldi	r24, 0x09	; 9
    3d66:	e8 e3       	ldi	r30, 0x38	; 56
    3d68:	f1 e0       	ldi	r31, 0x01	; 1
    3d6a:	ad e4       	ldi	r26, 0x4D	; 77
    3d6c:	b2 e0       	ldi	r27, 0x02	; 2
    3d6e:	01 90       	ld	r0, Z+
    3d70:	0d 92       	st	X+, r0
    3d72:	8a 95       	dec	r24
    3d74:	e1 f7       	brne	.-8      	; 0x3d6e <readSensors+0x1b4>
    3d76:	44 c0       	rjmp	.+136    	; 0x3e00 <readSensors+0x246>
		} else if (sensorPressure > (65 + offset)) {
    3d78:	e0 90 60 01 	lds	r14, 0x0160	; 0x800160 <sensorPressure>
    3d7c:	f0 90 61 01 	lds	r15, 0x0161	; 0x800161 <sensorPressure+0x1>
    3d80:	b7 01       	movw	r22, r14
    3d82:	80 e0       	ldi	r24, 0x00	; 0
    3d84:	90 e0       	ldi	r25, 0x00	; 0
    3d86:	0e 94 d9 27 	call	0x4fb2	; 0x4fb2 <__floatunsisf>
    3d8a:	20 e0       	ldi	r18, 0x00	; 0
    3d8c:	30 e0       	ldi	r19, 0x00	; 0
    3d8e:	47 e8       	ldi	r20, 0x87	; 135
    3d90:	52 e4       	ldi	r21, 0x42	; 66
    3d92:	0e 94 8b 28 	call	0x5116	; 0x5116 <__gesf2>
    3d96:	18 16       	cp	r1, r24
    3d98:	9c f4       	brge	.+38     	; 0x3dc0 <readSensors+0x206>
		sprintf(displayPressure, "P:= 65+");
    3d9a:	88 e0       	ldi	r24, 0x08	; 8
    3d9c:	e1 e4       	ldi	r30, 0x41	; 65
    3d9e:	f1 e0       	ldi	r31, 0x01	; 1
    3da0:	a4 ef       	ldi	r26, 0xF4	; 244
    3da2:	b1 e0       	ldi	r27, 0x01	; 1
    3da4:	01 90       	ld	r0, Z+
    3da6:	0d 92       	st	X+, r0
    3da8:	8a 95       	dec	r24
    3daa:	e1 f7       	brne	.-8      	; 0x3da4 <readSensors+0x1ea>
		sprintf(displayScalePressure, "P:= 65+");
    3dac:	88 e0       	ldi	r24, 0x08	; 8
    3dae:	e1 e4       	ldi	r30, 0x41	; 65
    3db0:	f1 e0       	ldi	r31, 0x01	; 1
    3db2:	ad e4       	ldi	r26, 0x4D	; 77
    3db4:	b2 e0       	ldi	r27, 0x02	; 2
    3db6:	01 90       	ld	r0, Z+
    3db8:	0d 92       	st	X+, r0
    3dba:	8a 95       	dec	r24
    3dbc:	e1 f7       	brne	.-8      	; 0x3db6 <readSensors+0x1fc>
    3dbe:	20 c0       	rjmp	.+64     	; 0x3e00 <readSensors+0x246>
		} else {
		sprintf(displayPressure, "P:= %d", (int)sensorPressure);
    3dc0:	ff 92       	push	r15
    3dc2:	ef 92       	push	r14
    3dc4:	c9 e4       	ldi	r28, 0x49	; 73
    3dc6:	d1 e0       	ldi	r29, 0x01	; 1
    3dc8:	df 93       	push	r29
    3dca:	cf 93       	push	r28
    3dcc:	84 ef       	ldi	r24, 0xF4	; 244
    3dce:	91 e0       	ldi	r25, 0x01	; 1
    3dd0:	9f 93       	push	r25
    3dd2:	8f 93       	push	r24
    3dd4:	0e 94 91 2a 	call	0x5522	; 0x5522 <sprintf>
		sprintf(displayScalePressure, "P:= %d", roundPressure());
    3dd8:	0e 94 f8 1b 	call	0x37f0	; 0x37f0 <roundPressure>
    3ddc:	9f 93       	push	r25
    3dde:	8f 93       	push	r24
    3de0:	df 93       	push	r29
    3de2:	cf 93       	push	r28
    3de4:	8d e4       	ldi	r24, 0x4D	; 77
    3de6:	92 e0       	ldi	r25, 0x02	; 2
    3de8:	9f 93       	push	r25
    3dea:	8f 93       	push	r24
    3dec:	0e 94 91 2a 	call	0x5522	; 0x5522 <sprintf>
    3df0:	8d b7       	in	r24, 0x3d	; 61
    3df2:	9e b7       	in	r25, 0x3e	; 62
    3df4:	0c 96       	adiw	r24, 0x0c	; 12
    3df6:	0f b6       	in	r0, 0x3f	; 63
    3df8:	f8 94       	cli
    3dfa:	9e bf       	out	0x3e, r25	; 62
    3dfc:	0f be       	out	0x3f, r0	; 63
    3dfe:	8d bf       	out	0x3d, r24	; 61

	// --------------------- Update LCD Screen ------------------- //
	}
	#endif
	
	u8g_FirstPage(&u8g);
    3e00:	8e ef       	ldi	r24, 0xFE	; 254
    3e02:	91 e0       	ldi	r25, 0x01	; 1
    3e04:	0e 94 64 25 	call	0x4ac8	; 0x4ac8 <u8g_FirstPage>
	do {
		draw();
    3e08:	0e 94 91 1d 	call	0x3b22	; 0x3b22 <draw>
	} while (u8g_NextPage(&u8g));
    3e0c:	8e ef       	ldi	r24, 0xFE	; 254
    3e0e:	91 e0       	ldi	r25, 0x01	; 1
    3e10:	0e 94 6a 25 	call	0x4ad4	; 0x4ad4 <u8g_NextPage>
    3e14:	81 11       	cpse	r24, r1
    3e16:	f8 cf       	rjmp	.-16     	; 0x3e08 <readSensors+0x24e>

}
    3e18:	df 91       	pop	r29
    3e1a:	cf 91       	pop	r28
    3e1c:	ff 90       	pop	r15
    3e1e:	ef 90       	pop	r14
    3e20:	df 90       	pop	r13
    3e22:	cf 90       	pop	r12
    3e24:	bf 90       	pop	r11
    3e26:	af 90       	pop	r10
    3e28:	9f 90       	pop	r9
    3e2a:	8f 90       	pop	r8
    3e2c:	08 95       	ret

00003e2e <main>:
//#define DEBUG

int main(void)
{
	/* select minimal prescaler (max system speed) */
	CLKPR = 0x80;
    3e2e:	e1 e6       	ldi	r30, 0x61	; 97
    3e30:	f0 e0       	ldi	r31, 0x00	; 0
    3e32:	80 e8       	ldi	r24, 0x80	; 128
    3e34:	80 83       	st	Z, r24
	CLKPR = 0x00;
    3e36:	10 82       	st	Z, r1
	 
	/* Initialize Peripherals */
	ADC_Init();
    3e38:	0e 94 fb 1a 	call	0x35f6	; 0x35f6 <ADC_Init>
	initBoard();
    3e3c:	0e 94 3e 1d 	call	0x3a7c	; 0x3a7c <initBoard>
	
	/* get initial voltage */
	calcPressure();
    3e40:	0e 94 8d 1b 	call	0x371a	; 0x371a <calcPressure>
	initPressure = sensorPressure;
    3e44:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <sensorPressure>
    3e48:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <sensorPressure+0x1>
    3e4c:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <initPressure+0x1>
    3e50:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <initPressure>

	while (1)
	{
		readSensors(); 
    3e54:	0e 94 dd 1d 	call	0x3bba	; 0x3bba <readSensors>
    3e58:	2f ef       	ldi	r18, 0xFF	; 255
    3e5a:	83 ec       	ldi	r24, 0xC3	; 195
    3e5c:	99 e0       	ldi	r25, 0x09	; 9
    3e5e:	21 50       	subi	r18, 0x01	; 1
    3e60:	80 40       	sbci	r24, 0x00	; 0
    3e62:	90 40       	sbci	r25, 0x00	; 0
    3e64:	e1 f7       	brne	.-8      	; 0x3e5e <main+0x30>
    3e66:	00 c0       	rjmp	.+0      	; 0x3e68 <main+0x3a>
    3e68:	00 00       	nop
    3e6a:	f4 cf       	rjmp	.-24     	; 0x3e54 <main+0x26>

00003e6c <Timer_Init>:
}

void Timer_Disable(void)
{
    /* Disable Timer 1*/
    TIMSK1 = 0;   
    3e6c:	e1 e8       	ldi	r30, 0x81	; 129
    3e6e:	f0 e0       	ldi	r31, 0x00	; 0
    3e70:	80 81       	ld	r24, Z
    3e72:	88 60       	ori	r24, 0x08	; 8
    3e74:	80 83       	st	Z, r24
    3e76:	80 81       	ld	r24, Z
    3e78:	84 60       	ori	r24, 0x04	; 4
    3e7a:	80 83       	st	Z, r24
    3e7c:	84 e2       	ldi	r24, 0x24	; 36
    3e7e:	94 ef       	ldi	r25, 0xF4	; 244
    3e80:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    3e84:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    3e88:	08 95       	ret

00003e8a <Timer_Enable>:
    3e8a:	ef e6       	ldi	r30, 0x6F	; 111
    3e8c:	f0 e0       	ldi	r31, 0x00	; 0
    3e8e:	80 81       	ld	r24, Z
    3e90:	82 60       	ori	r24, 0x02	; 2
    3e92:	80 83       	st	Z, r24
    3e94:	10 92 42 02 	sts	0x0242, r1	; 0x800242 <timervalue+0x1>
    3e98:	10 92 41 02 	sts	0x0241, r1	; 0x800241 <timervalue>
    3e9c:	10 92 36 02 	sts	0x0236, r1	; 0x800236 <timerinterupt+0x1>
    3ea0:	10 92 35 02 	sts	0x0235, r1	; 0x800235 <timerinterupt>
    3ea4:	78 94       	sei
    3ea6:	08 95       	ret

00003ea8 <__vector_17>:
}

ISR(TIMER1_COMPA_vect)
{
    3ea8:	1f 92       	push	r1
    3eaa:	0f 92       	push	r0
    3eac:	0f b6       	in	r0, 0x3f	; 63
    3eae:	0f 92       	push	r0
    3eb0:	11 24       	eor	r1, r1
    3eb2:	2f 93       	push	r18
    3eb4:	8f 93       	push	r24
    3eb6:	9f 93       	push	r25
    /* Do Something */
	timervalue++;
    3eb8:	80 91 41 02 	lds	r24, 0x0241	; 0x800241 <timervalue>
    3ebc:	90 91 42 02 	lds	r25, 0x0242	; 0x800242 <timervalue+0x1>
    3ec0:	01 96       	adiw	r24, 0x01	; 1
    3ec2:	90 93 42 02 	sts	0x0242, r25	; 0x800242 <timervalue+0x1>
    3ec6:	80 93 41 02 	sts	0x0241, r24	; 0x800241 <timervalue>
	if(timervalue > TIMEOUT){
    3eca:	85 38       	cpi	r24, 0x85	; 133
    3ecc:	93 40       	sbci	r25, 0x03	; 3
    3ece:	30 f0       	brcs	.+12     	; 0x3edc <__vector_17+0x34>
		timerinterupt = 1;
    3ed0:	81 e0       	ldi	r24, 0x01	; 1
    3ed2:	90 e0       	ldi	r25, 0x00	; 0
    3ed4:	90 93 36 02 	sts	0x0236, r25	; 0x800236 <timerinterupt+0x1>
    3ed8:	80 93 35 02 	sts	0x0235, r24	; 0x800235 <timerinterupt>
	}
}
    3edc:	9f 91       	pop	r25
    3ede:	8f 91       	pop	r24
    3ee0:	2f 91       	pop	r18
    3ee2:	0f 90       	pop	r0
    3ee4:	0f be       	out	0x3f, r0	; 63
    3ee6:	0f 90       	pop	r0
    3ee8:	1f 90       	pop	r1
    3eea:	18 95       	reti

00003eec <u8g_IsBBXIntersection>:
  }
}


uint8_t u8g_IsBBXIntersection(u8g_t *u8g, u8g_uint_t x, u8g_uint_t y, u8g_uint_t w, u8g_uint_t h)
{
    3eec:	0f 93       	push	r16
    3eee:	fc 01       	movw	r30, r24
    3ef0:	01 50       	subi	r16, 0x01	; 1
  register u8g_uint_t tmp;
  tmp = y;
  tmp += h;
  tmp--;
    3ef2:	04 0f       	add	r16, r20
  if ( u8g_is_intersection_decision_tree(u8g->current_page.y0, u8g->current_page.y1, y, tmp) == 0 )
    3ef4:	84 a9       	ldd	r24, Z+52	; 0x34
//static uint8_t u8g_is_intersection_decision_tree(u8g_uint_t a0, u8g_uint_t a1, u8g_uint_t v0, u8g_uint_t v1) U8G_ALWAYS_INLINE;
static uint8_t U8G_ALWAYS_INLINE u8g_is_intersection_decision_tree(u8g_uint_t a0, u8g_uint_t a1, u8g_uint_t v0, u8g_uint_t v1) 
{
  /* surprisingly the macro leads to larger code */
  /* return U8G_IS_INTERSECTION_MACRO(a0,a1,v0,v1); */
  if ( v0 <= a1 )
    3ef6:	96 a9       	ldd	r25, Z+54	; 0x36
    3ef8:	94 17       	cp	r25, r20
    3efa:	38 f0       	brcs	.+14     	; 0x3f0a <u8g_IsBBXIntersection+0x1e>
  {
    if ( v1 >= a0 )
    3efc:	08 17       	cp	r16, r24
    3efe:	68 f4       	brcc	.+26     	; 0x3f1a <u8g_IsBBXIntersection+0x2e>
    {
      return 1;
    }
    else
    {
      if ( v0 > v1 )
    3f00:	81 e0       	ldi	r24, 0x01	; 1
    3f02:	04 17       	cp	r16, r20
    3f04:	40 f0       	brcs	.+16     	; 0x3f16 <u8g_IsBBXIntersection+0x2a>
    3f06:	80 e0       	ldi	r24, 0x00	; 0
    3f08:	06 c0       	rjmp	.+12     	; 0x3f16 <u8g_IsBBXIntersection+0x2a>
      }
    }
  }
  else
  {
    if ( v1 >= a0 )
    3f0a:	08 17       	cp	r16, r24
    3f0c:	d0 f0       	brcs	.+52     	; 0x3f42 <u8g_IsBBXIntersection+0x56>
    {
      if ( v0 > v1 )
    3f0e:	81 e0       	ldi	r24, 0x01	; 1
    3f10:	04 17       	cp	r16, r20
    3f12:	08 f0       	brcs	.+2      	; 0x3f16 <u8g_IsBBXIntersection+0x2a>
    3f14:	80 e0       	ldi	r24, 0x00	; 0
{
  register u8g_uint_t tmp;
  tmp = y;
  tmp += h;
  tmp--;
  if ( u8g_is_intersection_decision_tree(u8g->current_page.y0, u8g->current_page.y1, y, tmp) == 0 )
    3f16:	88 23       	and	r24, r24
    3f18:	c9 f0       	breq	.+50     	; 0x3f4c <u8g_IsBBXIntersection+0x60>
    3f1a:	21 50       	subi	r18, 0x01	; 1
    return 0; 
  
  tmp = x;
  tmp += w;
  tmp--;
    3f1c:	26 0f       	add	r18, r22
  return u8g_is_intersection_decision_tree(u8g->current_page.x0, u8g->current_page.x1, x, tmp);
    3f1e:	83 a9       	ldd	r24, Z+51	; 0x33
//static uint8_t u8g_is_intersection_decision_tree(u8g_uint_t a0, u8g_uint_t a1, u8g_uint_t v0, u8g_uint_t v1) U8G_ALWAYS_INLINE;
static uint8_t U8G_ALWAYS_INLINE u8g_is_intersection_decision_tree(u8g_uint_t a0, u8g_uint_t a1, u8g_uint_t v0, u8g_uint_t v1) 
{
  /* surprisingly the macro leads to larger code */
  /* return U8G_IS_INTERSECTION_MACRO(a0,a1,v0,v1); */
  if ( v0 <= a1 )
    3f20:	95 a9       	ldd	r25, Z+53	; 0x35
    3f22:	96 17       	cp	r25, r22
    3f24:	38 f0       	brcs	.+14     	; 0x3f34 <u8g_IsBBXIntersection+0x48>
  {
    if ( v1 >= a0 )
    3f26:	28 17       	cp	r18, r24
    3f28:	70 f4       	brcc	.+28     	; 0x3f46 <u8g_IsBBXIntersection+0x5a>
    {
      return 1;
    }
    else
    {
      if ( v0 > v1 )
    3f2a:	81 e0       	ldi	r24, 0x01	; 1
    3f2c:	26 17       	cp	r18, r22
    3f2e:	70 f0       	brcs	.+28     	; 0x3f4c <u8g_IsBBXIntersection+0x60>
    3f30:	80 e0       	ldi	r24, 0x00	; 0
    3f32:	0c c0       	rjmp	.+24     	; 0x3f4c <u8g_IsBBXIntersection+0x60>
      }
    }
  }
  else
  {
    if ( v1 >= a0 )
    3f34:	28 17       	cp	r18, r24
    3f36:	48 f0       	brcs	.+18     	; 0x3f4a <u8g_IsBBXIntersection+0x5e>
    {
      if ( v0 > v1 )
    3f38:	81 e0       	ldi	r24, 0x01	; 1
    3f3a:	26 17       	cp	r18, r22
    3f3c:	38 f0       	brcs	.+14     	; 0x3f4c <u8g_IsBBXIntersection+0x60>
    3f3e:	80 e0       	ldi	r24, 0x00	; 0
    3f40:	05 c0       	rjmp	.+10     	; 0x3f4c <u8g_IsBBXIntersection+0x60>
  register u8g_uint_t tmp;
  tmp = y;
  tmp += h;
  tmp--;
  if ( u8g_is_intersection_decision_tree(u8g->current_page.y0, u8g->current_page.y1, y, tmp) == 0 )
    return 0; 
    3f42:	80 e0       	ldi	r24, 0x00	; 0
    3f44:	03 c0       	rjmp	.+6      	; 0x3f4c <u8g_IsBBXIntersection+0x60>
  /* return U8G_IS_INTERSECTION_MACRO(a0,a1,v0,v1); */
  if ( v0 <= a1 )
  {
    if ( v1 >= a0 )
    {
      return 1;
    3f46:	81 e0       	ldi	r24, 0x01	; 1
    3f48:	01 c0       	rjmp	.+2      	; 0x3f4c <u8g_IsBBXIntersection+0x60>
	return 0;
      }
    }
    else
    {
      return 0;
    3f4a:	80 e0       	ldi	r24, 0x00	; 0
  
  tmp = x;
  tmp += w;
  tmp--;
  return u8g_is_intersection_decision_tree(u8g->current_page.x0, u8g->current_page.x1, x, tmp);
}
    3f4c:	0f 91       	pop	r16
    3f4e:	08 95       	ret

00003f50 <u8g_InitCom>:
}

uint8_t u8g_WriteSequenceP(u8g_t *u8g, u8g_dev_t *dev, uint8_t cnt, const uint8_t *seq)
{
  return dev->com_fn(u8g, U8G_COM_MSG_WRITE_SEQ_P, cnt, (void *)seq);
}
    3f50:	db 01       	movw	r26, r22
    3f52:	14 96       	adiw	r26, 0x04	; 4
    3f54:	ed 91       	ld	r30, X+
    3f56:	fc 91       	ld	r31, X
    3f58:	15 97       	sbiw	r26, 0x05	; 5
    3f5a:	20 e0       	ldi	r18, 0x00	; 0
    3f5c:	30 e0       	ldi	r19, 0x00	; 0
    3f5e:	61 e0       	ldi	r22, 0x01	; 1
    3f60:	09 95       	icall
    3f62:	08 95       	ret

00003f64 <u8g_SetChipSelect>:
    3f64:	db 01       	movw	r26, r22
    3f66:	14 96       	adiw	r26, 0x04	; 4
    3f68:	ed 91       	ld	r30, X+
    3f6a:	fc 91       	ld	r31, X
    3f6c:	15 97       	sbiw	r26, 0x05	; 5
    3f6e:	20 e0       	ldi	r18, 0x00	; 0
    3f70:	30 e0       	ldi	r19, 0x00	; 0
    3f72:	63 e0       	ldi	r22, 0x03	; 3
    3f74:	09 95       	icall
    3f76:	08 95       	ret

00003f78 <u8g_SetResetLow>:
    3f78:	db 01       	movw	r26, r22
    3f7a:	14 96       	adiw	r26, 0x04	; 4
    3f7c:	ed 91       	ld	r30, X+
    3f7e:	fc 91       	ld	r31, X
    3f80:	15 97       	sbiw	r26, 0x05	; 5
    3f82:	20 e0       	ldi	r18, 0x00	; 0
    3f84:	30 e0       	ldi	r19, 0x00	; 0
    3f86:	40 e0       	ldi	r20, 0x00	; 0
    3f88:	64 e0       	ldi	r22, 0x04	; 4
    3f8a:	09 95       	icall
    3f8c:	08 95       	ret

00003f8e <u8g_SetResetHigh>:
    3f8e:	db 01       	movw	r26, r22
    3f90:	14 96       	adiw	r26, 0x04	; 4
    3f92:	ed 91       	ld	r30, X+
    3f94:	fc 91       	ld	r31, X
    3f96:	15 97       	sbiw	r26, 0x05	; 5
    3f98:	20 e0       	ldi	r18, 0x00	; 0
    3f9a:	30 e0       	ldi	r19, 0x00	; 0
    3f9c:	41 e0       	ldi	r20, 0x01	; 1
    3f9e:	64 e0       	ldi	r22, 0x04	; 4
    3fa0:	09 95       	icall
    3fa2:	08 95       	ret

00003fa4 <u8g_SetAddress>:
    3fa4:	db 01       	movw	r26, r22
    3fa6:	14 96       	adiw	r26, 0x04	; 4
    3fa8:	ed 91       	ld	r30, X+
    3faa:	fc 91       	ld	r31, X
    3fac:	15 97       	sbiw	r26, 0x05	; 5
    3fae:	20 e0       	ldi	r18, 0x00	; 0
    3fb0:	30 e0       	ldi	r19, 0x00	; 0
    3fb2:	62 e0       	ldi	r22, 0x02	; 2
    3fb4:	09 95       	icall
    3fb6:	08 95       	ret

00003fb8 <u8g_WriteByte>:
    3fb8:	db 01       	movw	r26, r22
    3fba:	14 96       	adiw	r26, 0x04	; 4
    3fbc:	ed 91       	ld	r30, X+
    3fbe:	fc 91       	ld	r31, X
    3fc0:	15 97       	sbiw	r26, 0x05	; 5
    3fc2:	20 e0       	ldi	r18, 0x00	; 0
    3fc4:	30 e0       	ldi	r19, 0x00	; 0
    3fc6:	65 e0       	ldi	r22, 0x05	; 5
    3fc8:	09 95       	icall
    3fca:	08 95       	ret

00003fcc <u8g_WriteSequence>:
    3fcc:	db 01       	movw	r26, r22
    3fce:	14 96       	adiw	r26, 0x04	; 4
    3fd0:	ed 91       	ld	r30, X+
    3fd2:	fc 91       	ld	r31, X
    3fd4:	15 97       	sbiw	r26, 0x05	; 5
    3fd6:	66 e0       	ldi	r22, 0x06	; 6
    3fd8:	09 95       	icall
    3fda:	08 95       	ret

00003fdc <u8g_WriteEscSeqP>:
#define U8G_ESC_255 255, 255
#define U8G_ESC_RST(x) 255, (0xc0 | ((x)&0x0f))

*/
uint8_t u8g_WriteEscSeqP(u8g_t *u8g, u8g_dev_t *dev, const uint8_t *esc_seq)
{
    3fdc:	af 92       	push	r10
    3fde:	bf 92       	push	r11
    3fe0:	cf 92       	push	r12
    3fe2:	df 92       	push	r13
    3fe4:	ef 92       	push	r14
    3fe6:	ff 92       	push	r15
    3fe8:	0f 93       	push	r16
    3fea:	1f 93       	push	r17
    3fec:	cf 93       	push	r28
    3fee:	df 93       	push	r29
    3ff0:	6c 01       	movw	r12, r24
    3ff2:	7b 01       	movw	r14, r22
    3ff4:	8a 01       	movw	r16, r20
  uint8_t is_escape = 0;
    3ff6:	d0 e0       	ldi	r29, 0x00	; 0
      }
      else if ( value <= 127 )
      {
        u8g_Delay(value);
      }
      is_escape = 0;
    3ff8:	b1 2c       	mov	r11, r1
        if ( u8g_WriteByte(u8g, dev, value) == 0 )
          return 0;
      }
      else
      {
        is_escape = 1;
    3ffa:	aa 24       	eor	r10, r10
    3ffc:	a3 94       	inc	r10
{
  uint8_t is_escape = 0;
  uint8_t value;
  for(;;)
  {
    value = u8g_pgm_read(esc_seq);
    3ffe:	f8 01       	movw	r30, r16
    4000:	c4 91       	lpm	r28, Z
    if ( is_escape == 0 )
    4002:	d1 11       	cpse	r29, r1
    4004:	0b c0       	rjmp	.+22     	; 0x401c <u8g_WriteEscSeqP+0x40>
    {
      if ( value != 255 )
    4006:	cf 3f       	cpi	r28, 0xFF	; 255
    4008:	09 f4       	brne	.+2      	; 0x400c <u8g_WriteEscSeqP+0x30>
    400a:	4a c0       	rjmp	.+148    	; 0x40a0 <u8g_WriteEscSeqP+0xc4>
      {
        if ( u8g_WriteByte(u8g, dev, value) == 0 )
    400c:	4c 2f       	mov	r20, r28
    400e:	b7 01       	movw	r22, r14
    4010:	c6 01       	movw	r24, r12
    4012:	0e 94 dc 1f 	call	0x3fb8	; 0x3fb8 <u8g_WriteByte>
    4016:	81 11       	cpse	r24, r1
    4018:	48 c0       	rjmp	.+144    	; 0x40aa <u8g_WriteEscSeqP+0xce>
    401a:	4b c0       	rjmp	.+150    	; 0x40b2 <u8g_WriteEscSeqP+0xd6>
        is_escape = 1;
      }
    }
    else
    {
      if ( value == 255 )
    401c:	cf 3f       	cpi	r28, 0xFF	; 255
    401e:	51 f4       	brne	.+20     	; 0x4034 <u8g_WriteEscSeqP+0x58>
      {
        if ( u8g_WriteByte(u8g, dev, value) == 0 )
    4020:	4f ef       	ldi	r20, 0xFF	; 255
    4022:	b7 01       	movw	r22, r14
    4024:	c6 01       	movw	r24, r12
    4026:	0e 94 dc 1f 	call	0x3fb8	; 0x3fb8 <u8g_WriteByte>
    402a:	88 23       	and	r24, r24
    402c:	09 f4       	brne	.+2      	; 0x4030 <u8g_WriteEscSeqP+0x54>
    402e:	41 c0       	rjmp	.+130    	; 0x40b2 <u8g_WriteEscSeqP+0xd6>
      }
      else if ( value <= 127 )
      {
        u8g_Delay(value);
      }
      is_escape = 0;
    4030:	db 2d       	mov	r29, r11
    4032:	3b c0       	rjmp	.+118    	; 0x40aa <u8g_WriteEscSeqP+0xce>
      if ( value == 255 )
      {
        if ( u8g_WriteByte(u8g, dev, value) == 0 )
          return 0;
      }
      else if ( value == 254 )
    4034:	ce 3f       	cpi	r28, 0xFE	; 254
    4036:	e1 f1       	breq	.+120    	; 0x40b0 <u8g_WriteEscSeqP+0xd4>
      {
        break;
      }
      else if ( value >= 0x0f0 )
    4038:	c0 3f       	cpi	r28, 0xF0	; 240
    403a:	a0 f5       	brcc	.+104    	; 0x40a4 <u8g_WriteEscSeqP+0xc8>
      {
        /* not yet used, do nothing */
      }
      else if ( value >= 0xe0  )
    403c:	c0 3e       	cpi	r28, 0xE0	; 224
    403e:	40 f0       	brcs	.+16     	; 0x4050 <u8g_WriteEscSeqP+0x74>
      {
        u8g_SetAddress(u8g, dev, value & 0x0f);
    4040:	4c 2f       	mov	r20, r28
    4042:	4f 70       	andi	r20, 0x0F	; 15
    4044:	b7 01       	movw	r22, r14
    4046:	c6 01       	movw	r24, r12
    4048:	0e 94 d2 1f 	call	0x3fa4	; 0x3fa4 <u8g_SetAddress>
      }
      else if ( value <= 127 )
      {
        u8g_Delay(value);
      }
      is_escape = 0;
    404c:	db 2d       	mov	r29, r11
    404e:	2d c0       	rjmp	.+90     	; 0x40aa <u8g_WriteEscSeqP+0xce>
      }
      else if ( value >= 0xe0  )
      {
        u8g_SetAddress(u8g, dev, value & 0x0f);
      }
      else if ( value >= 0xd0 )
    4050:	c0 3d       	cpi	r28, 0xD0	; 208
    4052:	40 f0       	brcs	.+16     	; 0x4064 <u8g_WriteEscSeqP+0x88>
      {
        u8g_SetChipSelect(u8g, dev, value & 0x0f);
    4054:	4c 2f       	mov	r20, r28
    4056:	4f 70       	andi	r20, 0x0F	; 15
    4058:	b7 01       	movw	r22, r14
    405a:	c6 01       	movw	r24, r12
    405c:	0e 94 b2 1f 	call	0x3f64	; 0x3f64 <u8g_SetChipSelect>
      }
      else if ( value <= 127 )
      {
        u8g_Delay(value);
      }
      is_escape = 0;
    4060:	db 2d       	mov	r29, r11
    4062:	23 c0       	rjmp	.+70     	; 0x40aa <u8g_WriteEscSeqP+0xce>
      }
      else if ( value >= 0xd0 )
      {
        u8g_SetChipSelect(u8g, dev, value & 0x0f);
      }
      else if ( value >= 0xc0 )
    4064:	c0 3c       	cpi	r28, 0xC0	; 192
    4066:	a0 f0       	brcs	.+40     	; 0x4090 <u8g_WriteEscSeqP+0xb4>
      {
        u8g_SetResetLow(u8g, dev);
    4068:	b7 01       	movw	r22, r14
    406a:	c6 01       	movw	r24, r12
    406c:	0e 94 bc 1f 	call	0x3f78	; 0x3f78 <u8g_SetResetLow>
        value &= 0x0f;
        value <<= 4;
    4070:	c2 95       	swap	r28
    4072:	c0 7f       	andi	r28, 0xF0	; 240
        value+=2;
    4074:	ce 5f       	subi	r28, 0xFE	; 254
        u8g_Delay(value);
    4076:	d0 e0       	ldi	r29, 0x00	; 0
    4078:	ce 01       	movw	r24, r28
    407a:	0e 94 8b 21 	call	0x4316	; 0x4316 <u8g_Delay>
        u8g_SetResetHigh(u8g, dev);
    407e:	b7 01       	movw	r22, r14
    4080:	c6 01       	movw	r24, r12
    4082:	0e 94 c7 1f 	call	0x3f8e	; 0x3f8e <u8g_SetResetHigh>
        u8g_Delay(value);
    4086:	ce 01       	movw	r24, r28
    4088:	0e 94 8b 21 	call	0x4316	; 0x4316 <u8g_Delay>
      }
      else if ( value <= 127 )
      {
        u8g_Delay(value);
      }
      is_escape = 0;
    408c:	db 2d       	mov	r29, r11
    408e:	0d c0       	rjmp	.+26     	; 0x40aa <u8g_WriteEscSeqP+0xce>
      else if ( value >= 0xbe )
      {
	/* not yet implemented */
        /* u8g_SetVCC(u8g, dev, value & 0x01); */
      }
      else if ( value <= 127 )
    4090:	cc 23       	and	r28, r28
    4092:	54 f0       	brlt	.+20     	; 0x40a8 <u8g_WriteEscSeqP+0xcc>
      {
        u8g_Delay(value);
    4094:	8c 2f       	mov	r24, r28
    4096:	90 e0       	ldi	r25, 0x00	; 0
    4098:	0e 94 8b 21 	call	0x4316	; 0x4316 <u8g_Delay>
      }
      is_escape = 0;
    409c:	db 2d       	mov	r29, r11
    409e:	05 c0       	rjmp	.+10     	; 0x40aa <u8g_WriteEscSeqP+0xce>
        if ( u8g_WriteByte(u8g, dev, value) == 0 )
          return 0;
      }
      else
      {
        is_escape = 1;
    40a0:	da 2d       	mov	r29, r10
    40a2:	03 c0       	rjmp	.+6      	; 0x40aa <u8g_WriteEscSeqP+0xce>
      }
      else if ( value <= 127 )
      {
        u8g_Delay(value);
      }
      is_escape = 0;
    40a4:	db 2d       	mov	r29, r11
    40a6:	01 c0       	rjmp	.+2      	; 0x40aa <u8g_WriteEscSeqP+0xce>
    40a8:	db 2d       	mov	r29, r11
    }
    esc_seq++;
    40aa:	0f 5f       	subi	r16, 0xFF	; 255
    40ac:	1f 4f       	sbci	r17, 0xFF	; 255
  }
    40ae:	a7 cf       	rjmp	.-178    	; 0x3ffe <u8g_WriteEscSeqP+0x22>
  return 1;
    40b0:	81 e0       	ldi	r24, 0x01	; 1
}
    40b2:	df 91       	pop	r29
    40b4:	cf 91       	pop	r28
    40b6:	1f 91       	pop	r17
    40b8:	0f 91       	pop	r16
    40ba:	ff 90       	pop	r15
    40bc:	ef 90       	pop	r14
    40be:	df 90       	pop	r13
    40c0:	cf 90       	pop	r12
    40c2:	bf 90       	pop	r11
    40c4:	af 90       	pop	r10
    40c6:	08 95       	ret

000040c8 <u8g_atmega_sw_spi_shift_out>:

#if defined(__AVR__)

static void u8g_atmega_sw_spi_shift_out(u8g_t *u8g, uint8_t val) U8G_NOINLINE;
static void u8g_atmega_sw_spi_shift_out(u8g_t *u8g, uint8_t val)
{
    40c8:	0f 93       	push	r16
    40ca:	1f 93       	push	r17
    40cc:	cf 93       	push	r28
    40ce:	df 93       	push	r29
    40d0:	8c 01       	movw	r16, r24
    40d2:	d6 2f       	mov	r29, r22
    40d4:	c8 e0       	ldi	r28, 0x08	; 8
  uint8_t i = 8;
  do
  {
    u8g_SetPILevel(u8g, U8G_PI_MOSI, val & 128 );
    40d6:	4d 2f       	mov	r20, r29
    40d8:	40 78       	andi	r20, 0x80	; 128
    40da:	65 e0       	ldi	r22, 0x05	; 5
    40dc:	c8 01       	movw	r24, r16
    40de:	0e 94 81 21 	call	0x4302	; 0x4302 <u8g_SetPILevel>
    val <<= 1;
    40e2:	dd 0f       	add	r29, r29
    u8g_SetPILevel(u8g, U8G_PI_SCK, 1 );
    40e4:	41 e0       	ldi	r20, 0x01	; 1
    40e6:	64 e0       	ldi	r22, 0x04	; 4
    40e8:	c8 01       	movw	r24, r16
    40ea:	0e 94 81 21 	call	0x4302	; 0x4302 <u8g_SetPILevel>
    u8g_MicroDelay();		/* 15 Aug 2012: added for high speed uC */
    40ee:	0e 94 95 21 	call	0x432a	; 0x432a <u8g_MicroDelay>
    u8g_SetPILevel(u8g, U8G_PI_SCK, 0 );
    40f2:	40 e0       	ldi	r20, 0x00	; 0
    40f4:	64 e0       	ldi	r22, 0x04	; 4
    40f6:	c8 01       	movw	r24, r16
    40f8:	0e 94 81 21 	call	0x4302	; 0x4302 <u8g_SetPILevel>
    u8g_MicroDelay();		/* 15 Aug 2012: added for high speed uC */
    40fc:	0e 94 95 21 	call	0x432a	; 0x432a <u8g_MicroDelay>
    4100:	c1 50       	subi	r28, 0x01	; 1
    i--;
  } while( i != 0 );
    4102:	49 f7       	brne	.-46     	; 0x40d6 <u8g_atmega_sw_spi_shift_out+0xe>
}
    4104:	df 91       	pop	r29
    4106:	cf 91       	pop	r28
    4108:	1f 91       	pop	r17
    410a:	0f 91       	pop	r16
    410c:	08 95       	ret

0000410e <u8g_com_atmega_sw_spi_fn>:

uint8_t u8g_com_atmega_sw_spi_fn(u8g_t *u8g, uint8_t msg, uint8_t arg_val, void *arg_ptr)
{
    410e:	cf 92       	push	r12
    4110:	df 92       	push	r13
    4112:	ef 92       	push	r14
    4114:	ff 92       	push	r15
    4116:	0f 93       	push	r16
    4118:	1f 93       	push	r17
    411a:	cf 93       	push	r28
    411c:	df 93       	push	r29
    411e:	7c 01       	movw	r14, r24
    4120:	e9 01       	movw	r28, r18
  switch(msg)
    4122:	06 2f       	mov	r16, r22
    4124:	10 e0       	ldi	r17, 0x00	; 0
    4126:	f8 01       	movw	r30, r16
    4128:	31 97       	sbiw	r30, 0x01	; 1
    412a:	e7 30       	cpi	r30, 0x07	; 7
    412c:	f1 05       	cpc	r31, r1
    412e:	08 f0       	brcs	.+2      	; 0x4132 <u8g_com_atmega_sw_spi_fn+0x24>
    4130:	70 c0       	rjmp	.+224    	; 0x4212 <u8g_com_atmega_sw_spi_fn+0x104>
    4132:	ea 5a       	subi	r30, 0xAA	; 170
    4134:	ff 4f       	sbci	r31, 0xFF	; 255
    4136:	0c 94 82 2a 	jmp	0x5504	; 0x5504 <__tablejump2__>
      break;
    
    case U8G_COM_MSG_WRITE_SEQ:
      {
        register uint8_t *ptr = arg_ptr;
        while( arg_val > 0 )
    413a:	41 11       	cpse	r20, r1
    413c:	49 c0       	rjmp	.+146    	; 0x41d0 <u8g_com_atmega_sw_spi_fn+0xc2>
    413e:	69 c0       	rjmp	.+210    	; 0x4212 <u8g_com_atmega_sw_spi_fn+0x104>
      break;

      case U8G_COM_MSG_WRITE_SEQ_P:
      {
        register uint8_t *ptr = arg_ptr;
        while( arg_val > 0 )
    4140:	41 11       	cpse	r20, r1
    4142:	57 c0       	rjmp	.+174    	; 0x41f2 <u8g_com_atmega_sw_spi_fn+0xe4>
    4144:	66 c0       	rjmp	.+204    	; 0x4212 <u8g_com_atmega_sw_spi_fn+0x104>
uint8_t u8g_com_atmega_sw_spi_fn(u8g_t *u8g, uint8_t msg, uint8_t arg_val, void *arg_ptr)
{
  switch(msg)
  {
    case U8G_COM_MSG_INIT:
      u8g_SetPIOutput(u8g, U8G_PI_SCK);
    4146:	64 e0       	ldi	r22, 0x04	; 4
    4148:	0e 94 78 21 	call	0x42f0	; 0x42f0 <u8g_SetPIOutput>
      u8g_SetPIOutput(u8g, U8G_PI_MOSI);
    414c:	65 e0       	ldi	r22, 0x05	; 5
    414e:	c7 01       	movw	r24, r14
    4150:	0e 94 78 21 	call	0x42f0	; 0x42f0 <u8g_SetPIOutput>
      u8g_SetPIOutput(u8g, U8G_PI_A0);
    4154:	61 e0       	ldi	r22, 0x01	; 1
    4156:	c7 01       	movw	r24, r14
    4158:	0e 94 78 21 	call	0x42f0	; 0x42f0 <u8g_SetPIOutput>
      u8g_SetPIOutput(u8g, U8G_PI_CS);
    415c:	62 e0       	ldi	r22, 0x02	; 2
    415e:	c7 01       	movw	r24, r14
    4160:	0e 94 78 21 	call	0x42f0	; 0x42f0 <u8g_SetPIOutput>
      u8g_SetPIOutput(u8g, U8G_PI_RESET);
    4164:	60 e0       	ldi	r22, 0x00	; 0
    4166:	c7 01       	movw	r24, r14
    4168:	0e 94 78 21 	call	0x42f0	; 0x42f0 <u8g_SetPIOutput>
      
      u8g_SetPILevel(u8g, U8G_PI_SCK, 0 );
    416c:	40 e0       	ldi	r20, 0x00	; 0
    416e:	64 e0       	ldi	r22, 0x04	; 4
    4170:	c7 01       	movw	r24, r14
    4172:	0e 94 81 21 	call	0x4302	; 0x4302 <u8g_SetPILevel>
      u8g_SetPILevel(u8g, U8G_PI_MOSI, 0 );
    4176:	40 e0       	ldi	r20, 0x00	; 0
    4178:	65 e0       	ldi	r22, 0x05	; 5
    417a:	c7 01       	movw	r24, r14
    417c:	0e 94 81 21 	call	0x4302	; 0x4302 <u8g_SetPILevel>
      u8g_SetPILevel(u8g, U8G_PI_CS, 1 );
    4180:	41 e0       	ldi	r20, 0x01	; 1
    4182:	62 e0       	ldi	r22, 0x02	; 2
    4184:	c7 01       	movw	r24, r14
    4186:	0e 94 81 21 	call	0x4302	; 0x4302 <u8g_SetPILevel>
      u8g_SetPILevel(u8g, U8G_PI_A0, 0);
    418a:	40 e0       	ldi	r20, 0x00	; 0
    418c:	61 e0       	ldi	r22, 0x01	; 1
    418e:	c7 01       	movw	r24, r14
    4190:	0e 94 81 21 	call	0x4302	; 0x4302 <u8g_SetPILevel>
      break;
    4194:	3e c0       	rjmp	.+124    	; 0x4212 <u8g_com_atmega_sw_spi_fn+0x104>
    
    case U8G_COM_MSG_STOP:
      break;

    case U8G_COM_MSG_ADDRESS:                     /* define cmd (arg_val = 0) or data mode (arg_val = 1) */
      u8g_SetPILevel(u8g, U8G_PI_A0, arg_val);
    4196:	61 e0       	ldi	r22, 0x01	; 1
    4198:	0e 94 81 21 	call	0x4302	; 0x4302 <u8g_SetPILevel>
      break;
    419c:	3a c0       	rjmp	.+116    	; 0x4212 <u8g_com_atmega_sw_spi_fn+0x104>

    case U8G_COM_MSG_CHIP_SELECT:
      
      if ( arg_val == 0 )
    419e:	41 11       	cpse	r20, r1
    41a0:	05 c0       	rjmp	.+10     	; 0x41ac <u8g_com_atmega_sw_spi_fn+0x9e>
      {
        /* disable */
        u8g_SetPILevel(u8g, U8G_PI_CS, 1);
    41a2:	41 e0       	ldi	r20, 0x01	; 1
    41a4:	62 e0       	ldi	r22, 0x02	; 2
    41a6:	0e 94 81 21 	call	0x4302	; 0x4302 <u8g_SetPILevel>
    41aa:	33 c0       	rjmp	.+102    	; 0x4212 <u8g_com_atmega_sw_spi_fn+0x104>
      }
      else
      {
        u8g_SetPILevel(u8g, U8G_PI_SCK, 0 );
    41ac:	40 e0       	ldi	r20, 0x00	; 0
    41ae:	64 e0       	ldi	r22, 0x04	; 4
    41b0:	0e 94 81 21 	call	0x4302	; 0x4302 <u8g_SetPILevel>
        /* enable */
        u8g_SetPILevel(u8g, U8G_PI_CS, 0); /* CS = 0 (low active) */
    41b4:	40 e0       	ldi	r20, 0x00	; 0
    41b6:	62 e0       	ldi	r22, 0x02	; 2
    41b8:	c7 01       	movw	r24, r14
    41ba:	0e 94 81 21 	call	0x4302	; 0x4302 <u8g_SetPILevel>
    41be:	29 c0       	rjmp	.+82     	; 0x4212 <u8g_com_atmega_sw_spi_fn+0x104>
      }
      break;
      
    case U8G_COM_MSG_RESET:
      u8g_SetPILevel(u8g, U8G_PI_RESET, arg_val);
    41c0:	60 e0       	ldi	r22, 0x00	; 0
    41c2:	0e 94 81 21 	call	0x4302	; 0x4302 <u8g_SetPILevel>
      break;
    41c6:	25 c0       	rjmp	.+74     	; 0x4212 <u8g_com_atmega_sw_spi_fn+0x104>
    

    case U8G_COM_MSG_WRITE_BYTE:
      u8g_atmega_sw_spi_shift_out(u8g, arg_val);
    41c8:	64 2f       	mov	r22, r20
    41ca:	0e 94 64 20 	call	0x40c8	; 0x40c8 <u8g_atmega_sw_spi_shift_out>
      break;
    41ce:	21 c0       	rjmp	.+66     	; 0x4212 <u8g_com_atmega_sw_spi_fn+0x104>
    41d0:	6e 01       	movw	r12, r28
    41d2:	41 50       	subi	r20, 0x01	; 1
    41d4:	50 e0       	ldi	r21, 0x00	; 0
    41d6:	4f 5f       	subi	r20, 0xFF	; 255
    41d8:	5f 4f       	sbci	r21, 0xFF	; 255
    41da:	c4 0f       	add	r28, r20
    41dc:	d5 1f       	adc	r29, r21
    case U8G_COM_MSG_WRITE_SEQ:
      {
        register uint8_t *ptr = arg_ptr;
        while( arg_val > 0 )
        {
          u8g_atmega_sw_spi_shift_out(u8g, *ptr++);
    41de:	f6 01       	movw	r30, r12
    41e0:	61 91       	ld	r22, Z+
    41e2:	6f 01       	movw	r12, r30
    41e4:	c7 01       	movw	r24, r14
    41e6:	0e 94 64 20 	call	0x40c8	; 0x40c8 <u8g_atmega_sw_spi_shift_out>
      break;
    
    case U8G_COM_MSG_WRITE_SEQ:
      {
        register uint8_t *ptr = arg_ptr;
        while( arg_val > 0 )
    41ea:	cc 16       	cp	r12, r28
    41ec:	dd 06       	cpc	r13, r29
    41ee:	b9 f7       	brne	.-18     	; 0x41de <u8g_com_atmega_sw_spi_fn+0xd0>
    41f0:	10 c0       	rjmp	.+32     	; 0x4212 <u8g_com_atmega_sw_spi_fn+0x104>
    41f2:	41 50       	subi	r20, 0x01	; 1
    41f4:	04 2f       	mov	r16, r20
    41f6:	10 e0       	ldi	r17, 0x00	; 0
    41f8:	0f 5f       	subi	r16, 0xFF	; 255
    41fa:	1f 4f       	sbci	r17, 0xFF	; 255
    41fc:	0c 0f       	add	r16, r28
    41fe:	1d 1f       	adc	r17, r29
      case U8G_COM_MSG_WRITE_SEQ_P:
      {
        register uint8_t *ptr = arg_ptr;
        while( arg_val > 0 )
        {
          u8g_atmega_sw_spi_shift_out(u8g, u8g_pgm_read(ptr));
    4200:	fe 01       	movw	r30, r28
    4202:	64 91       	lpm	r22, Z
    4204:	c7 01       	movw	r24, r14
    4206:	0e 94 64 20 	call	0x40c8	; 0x40c8 <u8g_atmega_sw_spi_shift_out>
          ptr++;
    420a:	21 96       	adiw	r28, 0x01	; 1
      break;

      case U8G_COM_MSG_WRITE_SEQ_P:
      {
        register uint8_t *ptr = arg_ptr;
        while( arg_val > 0 )
    420c:	c0 17       	cp	r28, r16
    420e:	d1 07       	cpc	r29, r17
    4210:	b9 f7       	brne	.-18     	; 0x4200 <u8g_com_atmega_sw_spi_fn+0xf2>
        }
      }
      break;
  }
  return 1;
}
    4212:	81 e0       	ldi	r24, 0x01	; 1
    4214:	df 91       	pop	r29
    4216:	cf 91       	pop	r28
    4218:	1f 91       	pop	r17
    421a:	0f 91       	pop	r16
    421c:	ff 90       	pop	r15
    421e:	ef 90       	pop	r14
    4220:	df 90       	pop	r13
    4222:	cf 90       	pop	r12
    4224:	08 95       	ret

00004226 <u8g_get_avr_io_ptr>:
{
  volatile uint8_t * tmp = u8g_get_avr_io_ptr(u8g_avr_pin_P, internal_pin_number>>3);
  if ( ((*tmp) & _BV(internal_pin_number&7))  != 0 )
    return 1;
  return 0;
}
    4226:	cf 93       	push	r28
    4228:	df 93       	push	r29
    422a:	00 d0       	rcall	.+0      	; 0x422c <u8g_get_avr_io_ptr+0x6>
    422c:	cd b7       	in	r28, 0x3d	; 61
    422e:	de b7       	in	r29, 0x3e	; 62
    4230:	70 e0       	ldi	r23, 0x00	; 0
    4232:	66 0f       	add	r22, r22
    4234:	77 1f       	adc	r23, r23
    4236:	68 0f       	add	r22, r24
    4238:	79 1f       	adc	r23, r25
    423a:	42 e0       	ldi	r20, 0x02	; 2
    423c:	50 e0       	ldi	r21, 0x00	; 0
    423e:	ce 01       	movw	r24, r28
    4240:	01 96       	adiw	r24, 0x01	; 1
    4242:	0e 94 88 2a 	call	0x5510	; 0x5510 <memcpy_P>
    4246:	89 81       	ldd	r24, Y+1	; 0x01
    4248:	9a 81       	ldd	r25, Y+2	; 0x02
    424a:	0f 90       	pop	r0
    424c:	0f 90       	pop	r0
    424e:	df 91       	pop	r29
    4250:	cf 91       	pop	r28
    4252:	08 95       	ret

00004254 <u8g_Pin>:
    4254:	88 0f       	add	r24, r24
    4256:	88 0f       	add	r24, r24
    4258:	88 0f       	add	r24, r24
    425a:	86 0f       	add	r24, r22
    425c:	08 95       	ret

0000425e <u8g_SetPinOutput>:
    425e:	cf 93       	push	r28
    4260:	c8 2f       	mov	r28, r24
    4262:	68 2f       	mov	r22, r24
    4264:	66 95       	lsr	r22
    4266:	66 95       	lsr	r22
    4268:	66 95       	lsr	r22
    426a:	80 eb       	ldi	r24, 0xB0	; 176
    426c:	91 e0       	ldi	r25, 0x01	; 1
    426e:	0e 94 13 21 	call	0x4226	; 0x4226 <u8g_get_avr_io_ptr>
    4272:	fc 01       	movw	r30, r24
    4274:	40 81       	ld	r20, Z
    4276:	c7 70       	andi	r28, 0x07	; 7
    4278:	21 e0       	ldi	r18, 0x01	; 1
    427a:	30 e0       	ldi	r19, 0x00	; 0
    427c:	02 c0       	rjmp	.+4      	; 0x4282 <u8g_SetPinOutput+0x24>
    427e:	22 0f       	add	r18, r18
    4280:	33 1f       	adc	r19, r19
    4282:	ca 95       	dec	r28
    4284:	e2 f7       	brpl	.-8      	; 0x427e <u8g_SetPinOutput+0x20>
    4286:	24 2b       	or	r18, r20
    4288:	20 83       	st	Z, r18
    428a:	cf 91       	pop	r28
    428c:	08 95       	ret

0000428e <u8g_SetPinLevel>:
    428e:	cf 93       	push	r28
    4290:	df 93       	push	r29
    4292:	c8 2f       	mov	r28, r24
    4294:	d6 2f       	mov	r29, r22
    4296:	68 2f       	mov	r22, r24
    4298:	66 95       	lsr	r22
    429a:	66 95       	lsr	r22
    429c:	66 95       	lsr	r22
    429e:	84 ea       	ldi	r24, 0xA4	; 164
    42a0:	91 e0       	ldi	r25, 0x01	; 1
    42a2:	0e 94 13 21 	call	0x4226	; 0x4226 <u8g_get_avr_io_ptr>
    42a6:	d1 11       	cpse	r29, r1
    42a8:	11 c0       	rjmp	.+34     	; 0x42cc <u8g_SetPinLevel+0x3e>
    42aa:	4f b7       	in	r20, 0x3f	; 63
    42ac:	f8 94       	cli
    42ae:	fc 01       	movw	r30, r24
    42b0:	50 81       	ld	r21, Z
    42b2:	c7 70       	andi	r28, 0x07	; 7
    42b4:	21 e0       	ldi	r18, 0x01	; 1
    42b6:	30 e0       	ldi	r19, 0x00	; 0
    42b8:	02 c0       	rjmp	.+4      	; 0x42be <u8g_SetPinLevel+0x30>
    42ba:	22 0f       	add	r18, r18
    42bc:	33 1f       	adc	r19, r19
    42be:	ca 95       	dec	r28
    42c0:	e2 f7       	brpl	.-8      	; 0x42ba <u8g_SetPinLevel+0x2c>
    42c2:	20 95       	com	r18
    42c4:	25 23       	and	r18, r21
    42c6:	20 83       	st	Z, r18
    42c8:	4f bf       	out	0x3f, r20	; 63
    42ca:	0f c0       	rjmp	.+30     	; 0x42ea <u8g_SetPinLevel+0x5c>
    42cc:	4f b7       	in	r20, 0x3f	; 63
    42ce:	f8 94       	cli
    42d0:	fc 01       	movw	r30, r24
    42d2:	50 81       	ld	r21, Z
    42d4:	c7 70       	andi	r28, 0x07	; 7
    42d6:	21 e0       	ldi	r18, 0x01	; 1
    42d8:	30 e0       	ldi	r19, 0x00	; 0
    42da:	02 c0       	rjmp	.+4      	; 0x42e0 <u8g_SetPinLevel+0x52>
    42dc:	22 0f       	add	r18, r18
    42de:	33 1f       	adc	r19, r19
    42e0:	ca 95       	dec	r28
    42e2:	e2 f7       	brpl	.-8      	; 0x42dc <u8g_SetPinLevel+0x4e>
    42e4:	25 2b       	or	r18, r21
    42e6:	20 83       	st	Z, r18
    42e8:	4f bf       	out	0x3f, r20	; 63
    42ea:	df 91       	pop	r29
    42ec:	cf 91       	pop	r28
    42ee:	08 95       	ret

000042f0 <u8g_SetPIOutput>:
#if defined(U8G_WITH_PINLIST)

void u8g_SetPIOutput(u8g_t *u8g, uint8_t pi)
{
  uint8_t pin;
  pin = u8g->pin_list[pi];
    42f0:	86 0f       	add	r24, r22
    42f2:	91 1d       	adc	r25, r1
    42f4:	fc 01       	movw	r30, r24
    42f6:	83 a1       	ldd	r24, Z+35	; 0x23
  if ( pin != U8G_PIN_NONE )
    42f8:	8f 3f       	cpi	r24, 0xFF	; 255
    42fa:	11 f0       	breq	.+4      	; 0x4300 <u8g_SetPIOutput+0x10>
    u8g_SetPinOutput(pin);
    42fc:	0e 94 2f 21 	call	0x425e	; 0x425e <u8g_SetPinOutput>
    4300:	08 95       	ret

00004302 <u8g_SetPILevel>:
}

void u8g_SetPILevel(u8g_t *u8g, uint8_t pi, uint8_t level)
{
  uint8_t pin;
  pin = u8g->pin_list[pi];
    4302:	86 0f       	add	r24, r22
    4304:	91 1d       	adc	r25, r1
    4306:	fc 01       	movw	r30, r24
    4308:	83 a1       	ldd	r24, Z+35	; 0x23
  if ( pin != U8G_PIN_NONE )
    430a:	8f 3f       	cpi	r24, 0xFF	; 255
    430c:	19 f0       	breq	.+6      	; 0x4314 <u8g_SetPILevel+0x12>
    430e:	64 2f       	mov	r22, r20
    u8g_SetPinLevel(pin, level);
    4310:	0e 94 47 21 	call	0x428e	; 0x428e <u8g_SetPinLevel>
    4314:	08 95       	ret

00004316 <u8g_Delay>:
  ==> must be devided by 4, rounded up 7/4 = 2
*/
void u8g_Delay(uint16_t val)
{
  /* old version did a call to the arduino lib: delay(val); */
  while( val != 0 )
    4316:	00 97       	sbiw	r24, 0x00	; 0
    4318:	39 f0       	breq	.+14     	; 0x4328 <u8g_Delay+0x12>
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    431a:	2e e9       	ldi	r18, 0x9E	; 158
    431c:	3f e0       	ldi	r19, 0x0F	; 15
    431e:	f9 01       	movw	r30, r18
    4320:	31 97       	sbiw	r30, 0x01	; 1
    4322:	f1 f7       	brne	.-4      	; 0x4320 <u8g_Delay+0xa>
  {
    _delay_loop_2( (F_CPU / 4000 ) -2);
    val--;
    4324:	01 97       	sbiw	r24, 0x01	; 1
  ==> must be devided by 4, rounded up 7/4 = 2
*/
void u8g_Delay(uint16_t val)
{
  /* old version did a call to the arduino lib: delay(val); */
  while( val != 0 )
    4326:	d9 f7       	brne	.-10     	; 0x431e <u8g_Delay+0x8>
    4328:	08 95       	ret

0000432a <u8g_MicroDelay>:
    432a:	84 e0       	ldi	r24, 0x04	; 4
    432c:	90 e0       	ldi	r25, 0x00	; 0
    432e:	01 97       	sbiw	r24, 0x01	; 1
    4330:	f1 f7       	brne	.-4      	; 0x432e <u8g_MicroDelay+0x4>
    4332:	08 95       	ret

00004334 <u8g_dev_st7565_lm6059_fn>:
  U8G_ESC_END                /* end of sequence */
};


uint8_t u8g_dev_st7565_lm6059_fn(u8g_t *u8g, u8g_dev_t *dev, uint8_t msg, void *arg)
{
    4334:	af 92       	push	r10
    4336:	bf 92       	push	r11
    4338:	cf 92       	push	r12
    433a:	df 92       	push	r13
    433c:	ef 92       	push	r14
    433e:	ff 92       	push	r15
    4340:	0f 93       	push	r16
    4342:	1f 93       	push	r17
    4344:	cf 93       	push	r28
    4346:	7c 01       	movw	r14, r24
    4348:	8b 01       	movw	r16, r22
    434a:	c4 2f       	mov	r28, r20
    434c:	69 01       	movw	r12, r18
  switch(msg)
    434e:	40 31       	cpi	r20, 0x10	; 16
    4350:	09 f4       	brne	.+2      	; 0x4354 <u8g_dev_st7565_lm6059_fn+0x20>
    4352:	52 c0       	rjmp	.+164    	; 0x43f8 <u8g_dev_st7565_lm6059_fn+0xc4>
    4354:	28 f4       	brcc	.+10     	; 0x4360 <u8g_dev_st7565_lm6059_fn+0x2c>
    4356:	4a 30       	cpi	r20, 0x0A	; 10
    4358:	49 f0       	breq	.+18     	; 0x436c <u8g_dev_st7565_lm6059_fn+0x38>
    435a:	4f 30       	cpi	r20, 0x0F	; 15
    435c:	89 f1       	breq	.+98     	; 0x43c0 <u8g_dev_st7565_lm6059_fn+0x8c>
    435e:	58 c0       	rjmp	.+176    	; 0x4410 <u8g_dev_st7565_lm6059_fn+0xdc>
    4360:	41 31       	cpi	r20, 0x11	; 17
    4362:	09 f4       	brne	.+2      	; 0x4366 <u8g_dev_st7565_lm6059_fn+0x32>
    4364:	4f c0       	rjmp	.+158    	; 0x4404 <u8g_dev_st7565_lm6059_fn+0xd0>
    4366:	45 31       	cpi	r20, 0x15	; 21
    4368:	59 f0       	breq	.+22     	; 0x4380 <u8g_dev_st7565_lm6059_fn+0x4c>
    436a:	52 c0       	rjmp	.+164    	; 0x4410 <u8g_dev_st7565_lm6059_fn+0xdc>
  {
    case U8G_DEV_MSG_INIT:
      u8g_InitCom(u8g, dev, U8G_SPI_CLK_CYCLE_400NS);
    436c:	43 e0       	ldi	r20, 0x03	; 3
    436e:	0e 94 a8 1f 	call	0x3f50	; 0x3f50 <u8g_InitCom>
      u8g_WriteEscSeqP(u8g, dev, u8g_dev_st7565_lm6059_init_seq);
    4372:	4c ed       	ldi	r20, 0xDC	; 220
    4374:	51 e0       	ldi	r21, 0x01	; 1
    4376:	b8 01       	movw	r22, r16
    4378:	c7 01       	movw	r24, r14
    437a:	0e 94 ee 1f 	call	0x3fdc	; 0x3fdc <u8g_WriteEscSeqP>
      break;
    437e:	48 c0       	rjmp	.+144    	; 0x4410 <u8g_dev_st7565_lm6059_fn+0xdc>
    case U8G_DEV_MSG_STOP:
      break;
    case U8G_DEV_MSG_PAGE_NEXT:
      {
        u8g_pb_t *pb = (u8g_pb_t *)(dev->dev_mem);
    4380:	fb 01       	movw	r30, r22
    4382:	a2 80       	ldd	r10, Z+2	; 0x02
    4384:	b3 80       	ldd	r11, Z+3	; 0x03
        u8g_WriteEscSeqP(u8g, dev, u8g_dev_st7565_lm6059_data_start);    
    4386:	44 ed       	ldi	r20, 0xD4	; 212
    4388:	51 e0       	ldi	r21, 0x01	; 1
    438a:	0e 94 ee 1f 	call	0x3fdc	; 0x3fdc <u8g_WriteEscSeqP>
        u8g_WriteByte(u8g, dev, 0x0b0 | pb->p.page); /* select current page (ST7565R) */
    438e:	f5 01       	movw	r30, r10
    4390:	44 81       	ldd	r20, Z+4	; 0x04
    4392:	40 6b       	ori	r20, 0xB0	; 176
    4394:	b8 01       	movw	r22, r16
    4396:	c7 01       	movw	r24, r14
    4398:	0e 94 dc 1f 	call	0x3fb8	; 0x3fb8 <u8g_WriteByte>
        u8g_SetAddress(u8g, dev, 1);           /* data mode */
    439c:	41 e0       	ldi	r20, 0x01	; 1
    439e:	b8 01       	movw	r22, r16
    43a0:	c7 01       	movw	r24, r14
    43a2:	0e 94 d2 1f 	call	0x3fa4	; 0x3fa4 <u8g_SetAddress>
        if ( u8g_pb_WriteBuffer(pb, u8g, dev) == 0 )
    43a6:	a8 01       	movw	r20, r16
    43a8:	b7 01       	movw	r22, r14
    43aa:	c5 01       	movw	r24, r10
    43ac:	0e 94 fc 25 	call	0x4bf8	; 0x4bf8 <u8g_pb_WriteBuffer>
    43b0:	88 23       	and	r24, r24
    43b2:	a1 f1       	breq	.+104    	; 0x441c <u8g_dev_st7565_lm6059_fn+0xe8>
          return 0;
        u8g_SetChipSelect(u8g, dev, 0);
    43b4:	40 e0       	ldi	r20, 0x00	; 0
    43b6:	b8 01       	movw	r22, r16
    43b8:	c7 01       	movw	r24, r14
    43ba:	0e 94 b2 1f 	call	0x3f64	; 0x3f64 <u8g_SetChipSelect>
      }
      break;
    43be:	28 c0       	rjmp	.+80     	; 0x4410 <u8g_dev_st7565_lm6059_fn+0xdc>
    case U8G_DEV_MSG_CONTRAST:
      u8g_SetChipSelect(u8g, dev, 1);
    43c0:	41 e0       	ldi	r20, 0x01	; 1
    43c2:	0e 94 b2 1f 	call	0x3f64	; 0x3f64 <u8g_SetChipSelect>
      u8g_SetAddress(u8g, dev, 0);          /* instruction mode */
    43c6:	40 e0       	ldi	r20, 0x00	; 0
    43c8:	b8 01       	movw	r22, r16
    43ca:	c7 01       	movw	r24, r14
    43cc:	0e 94 d2 1f 	call	0x3fa4	; 0x3fa4 <u8g_SetAddress>
      u8g_WriteByte(u8g, dev, 0x081);
    43d0:	41 e8       	ldi	r20, 0x81	; 129
    43d2:	b8 01       	movw	r22, r16
    43d4:	c7 01       	movw	r24, r14
    43d6:	0e 94 dc 1f 	call	0x3fb8	; 0x3fb8 <u8g_WriteByte>
      u8g_WriteByte(u8g, dev, (*(uint8_t *)arg) >> 2);
    43da:	f6 01       	movw	r30, r12
    43dc:	40 81       	ld	r20, Z
    43de:	46 95       	lsr	r20
    43e0:	46 95       	lsr	r20
    43e2:	b8 01       	movw	r22, r16
    43e4:	c7 01       	movw	r24, r14
    43e6:	0e 94 dc 1f 	call	0x3fb8	; 0x3fb8 <u8g_WriteByte>
      u8g_SetChipSelect(u8g, dev, 0);      
    43ea:	40 e0       	ldi	r20, 0x00	; 0
    43ec:	b8 01       	movw	r22, r16
    43ee:	c7 01       	movw	r24, r14
    43f0:	0e 94 b2 1f 	call	0x3f64	; 0x3f64 <u8g_SetChipSelect>
      return 1;
    43f4:	81 e0       	ldi	r24, 0x01	; 1
    43f6:	12 c0       	rjmp	.+36     	; 0x441c <u8g_dev_st7565_lm6059_fn+0xe8>
    case U8G_DEV_MSG_SLEEP_ON:
      u8g_WriteEscSeqP(u8g, dev, u8g_dev_st7565_lm6059_sleep_on);    
    43f8:	48 ec       	ldi	r20, 0xC8	; 200
    43fa:	51 e0       	ldi	r21, 0x01	; 1
    43fc:	0e 94 ee 1f 	call	0x3fdc	; 0x3fdc <u8g_WriteEscSeqP>
      return 1;
    4400:	81 e0       	ldi	r24, 0x01	; 1
    4402:	0c c0       	rjmp	.+24     	; 0x441c <u8g_dev_st7565_lm6059_fn+0xe8>
    case U8G_DEV_MSG_SLEEP_OFF:
      u8g_WriteEscSeqP(u8g, dev, u8g_dev_st7565_lm6059_sleep_off);    
    4404:	4c eb       	ldi	r20, 0xBC	; 188
    4406:	51 e0       	ldi	r21, 0x01	; 1
    4408:	0e 94 ee 1f 	call	0x3fdc	; 0x3fdc <u8g_WriteEscSeqP>
      return 1;
    440c:	81 e0       	ldi	r24, 0x01	; 1
    440e:	06 c0       	rjmp	.+12     	; 0x441c <u8g_dev_st7565_lm6059_fn+0xe8>
  }
  return u8g_dev_pb8v1_base_fn(u8g, dev, msg, arg);
    4410:	96 01       	movw	r18, r12
    4412:	4c 2f       	mov	r20, r28
    4414:	b8 01       	movw	r22, r16
    4416:	c7 01       	movw	r24, r14
    4418:	0e 94 70 26 	call	0x4ce0	; 0x4ce0 <u8g_dev_pb8v1_base_fn>
}
    441c:	cf 91       	pop	r28
    441e:	1f 91       	pop	r17
    4420:	0f 91       	pop	r16
    4422:	ff 90       	pop	r15
    4424:	ef 90       	pop	r14
    4426:	df 90       	pop	r13
    4428:	cf 90       	pop	r12
    442a:	bf 90       	pop	r11
    442c:	af 90       	pop	r10
    442e:	08 95       	ret

00004430 <u8g_font_get_word>:
  cap_a = u8g_font_GetCapitalAHeight(u8g->font);
  u8g_font_calc_str_min_box(u8g, s, &buf);
  if ( buf.y_max < cap_a )
    buf.y_max = cap_a;
  u8g_font_get_str_box_fill_args(u8g, s, &buf, x, y, width, height);
}
    4430:	fc 01       	movw	r30, r24
    4432:	e6 0f       	add	r30, r22
    4434:	f1 1d       	adc	r31, r1
    4436:	84 91       	lpm	r24, Z
    4438:	90 e0       	ldi	r25, 0x00	; 0
    443a:	98 2f       	mov	r25, r24
    443c:	88 27       	eor	r24, r24
    443e:	31 96       	adiw	r30, 0x01	; 1
    4440:	e4 91       	lpm	r30, Z
    4442:	8e 0f       	add	r24, r30
    4444:	91 1d       	adc	r25, r1
    4446:	08 95       	ret

00004448 <u8g_font_GetFormat>:
    4448:	fc 01       	movw	r30, r24
    444a:	84 91       	lpm	r24, Z
    444c:	08 95       	ret

0000444e <u8g_font_GetFontGlyphStructureSize>:
    444e:	0e 94 24 22 	call	0x4448	; 0x4448 <u8g_font_GetFormat>
    4452:	88 23       	and	r24, r24
    4454:	21 f0       	breq	.+8      	; 0x445e <u8g_font_GetFontGlyphStructureSize+0x10>
    4456:	82 30       	cpi	r24, 0x02	; 2
    4458:	11 f0       	breq	.+4      	; 0x445e <u8g_font_GetFontGlyphStructureSize+0x10>
    445a:	83 e0       	ldi	r24, 0x03	; 3
    445c:	08 95       	ret
    445e:	86 e0       	ldi	r24, 0x06	; 6
    4460:	08 95       	ret

00004462 <u8g_font_calc_vref_font>:
    4462:	80 e0       	ldi	r24, 0x00	; 0
    4464:	08 95       	ret

00004466 <u8g_font_GetEncoding65Pos>:
    4466:	66 e0       	ldi	r22, 0x06	; 6
    4468:	0e 94 18 22 	call	0x4430	; 0x4430 <u8g_font_get_word>
    446c:	08 95       	ret

0000446e <u8g_font_GetEncoding97Pos>:
    446e:	68 e0       	ldi	r22, 0x08	; 8
    4470:	0e 94 18 22 	call	0x4430	; 0x4430 <u8g_font_get_word>
    4474:	08 95       	ret

00004476 <u8g_font_GetFontStartEncoding>:
    4476:	0a 96       	adiw	r24, 0x0a	; 10
    4478:	fc 01       	movw	r30, r24
    447a:	84 91       	lpm	r24, Z
    447c:	08 95       	ret

0000447e <u8g_font_GetFontEndEncoding>:
    447e:	0b 96       	adiw	r24, 0x0b	; 11
    4480:	fc 01       	movw	r30, r24
    4482:	84 91       	lpm	r24, Z
    4484:	08 95       	ret

00004486 <u8g_GetGlyph>:
    4486:	af 92       	push	r10
    4488:	bf 92       	push	r11
    448a:	cf 92       	push	r12
    448c:	df 92       	push	r13
    448e:	ef 92       	push	r14
    4490:	ff 92       	push	r15
    4492:	0f 93       	push	r16
    4494:	1f 93       	push	r17
    4496:	cf 93       	push	r28
    4498:	df 93       	push	r29
    449a:	7c 01       	movw	r14, r24
    449c:	b6 2e       	mov	r11, r22
    449e:	dc 01       	movw	r26, r24
    44a0:	14 96       	adiw	r26, 0x04	; 4
    44a2:	cd 91       	ld	r28, X+
    44a4:	dc 91       	ld	r29, X
    44a6:	15 97       	sbiw	r26, 0x05	; 5
    44a8:	ce 01       	movw	r24, r28
    44aa:	0e 94 24 22 	call	0x4448	; 0x4448 <u8g_font_GetFormat>
    44ae:	18 2f       	mov	r17, r24
    44b0:	f7 01       	movw	r30, r14
    44b2:	84 81       	ldd	r24, Z+4	; 0x04
    44b4:	95 81       	ldd	r25, Z+5	; 0x05
    44b6:	0e 94 27 22 	call	0x444e	; 0x444e <u8g_font_GetFontGlyphStructureSize>
    44ba:	d8 2e       	mov	r13, r24
    44bc:	11 30       	cpi	r17, 0x01	; 1
    44be:	29 f4       	brne	.+10     	; 0x44ca <u8g_GetGlyph+0x44>
    44c0:	0f 2e       	mov	r0, r31
    44c2:	ff e0       	ldi	r31, 0x0F	; 15
    44c4:	af 2e       	mov	r10, r31
    44c6:	f0 2d       	mov	r31, r0
    44c8:	02 c0       	rjmp	.+4      	; 0x44ce <u8g_GetGlyph+0x48>
    44ca:	aa 24       	eor	r10, r10
    44cc:	aa 94       	dec	r10
    44ce:	d7 01       	movw	r26, r14
    44d0:	14 96       	adiw	r26, 0x04	; 4
    44d2:	8d 91       	ld	r24, X+
    44d4:	9c 91       	ld	r25, X
    44d6:	15 97       	sbiw	r26, 0x05	; 5
    44d8:	0e 94 3b 22 	call	0x4476	; 0x4476 <u8g_font_GetFontStartEncoding>
    44dc:	18 2f       	mov	r17, r24
    44de:	f7 01       	movw	r30, r14
    44e0:	84 81       	ldd	r24, Z+4	; 0x04
    44e2:	95 81       	ldd	r25, Z+5	; 0x05
    44e4:	0e 94 3f 22 	call	0x447e	; 0x447e <u8g_font_GetFontEndEncoding>
    44e8:	08 2f       	mov	r16, r24
    44ea:	d7 01       	movw	r26, r14
    44ec:	14 96       	adiw	r26, 0x04	; 4
    44ee:	8d 91       	ld	r24, X+
    44f0:	9c 91       	ld	r25, X
    44f2:	15 97       	sbiw	r26, 0x05	; 5
    44f4:	0e 94 37 22 	call	0x446e	; 0x446e <u8g_font_GetEncoding97Pos>
    44f8:	b0 e6       	ldi	r27, 0x60	; 96
    44fa:	bb 15       	cp	r27, r11
    44fc:	30 f4       	brcc	.+12     	; 0x450a <u8g_GetGlyph+0x84>
    44fe:	00 97       	sbiw	r24, 0x00	; 0
    4500:	21 f0       	breq	.+8      	; 0x450a <u8g_GetGlyph+0x84>
    4502:	c8 0f       	add	r28, r24
    4504:	d9 1f       	adc	r29, r25
    4506:	11 e6       	ldi	r17, 0x61	; 97
    4508:	0f c0       	rjmp	.+30     	; 0x4528 <u8g_GetGlyph+0xa2>
    450a:	f7 01       	movw	r30, r14
    450c:	84 81       	ldd	r24, Z+4	; 0x04
    450e:	95 81       	ldd	r25, Z+5	; 0x05
    4510:	0e 94 33 22 	call	0x4466	; 0x4466 <u8g_font_GetEncoding65Pos>
    4514:	f0 e4       	ldi	r31, 0x40	; 64
    4516:	fb 15       	cp	r31, r11
    4518:	30 f4       	brcc	.+12     	; 0x4526 <u8g_GetGlyph+0xa0>
    451a:	00 97       	sbiw	r24, 0x00	; 0
    451c:	21 f0       	breq	.+8      	; 0x4526 <u8g_GetGlyph+0xa0>
    451e:	c8 0f       	add	r28, r24
    4520:	d9 1f       	adc	r29, r25
    4522:	11 e4       	ldi	r17, 0x41	; 65
    4524:	01 c0       	rjmp	.+2      	; 0x4528 <u8g_GetGlyph+0xa2>
    4526:	61 96       	adiw	r28, 0x11	; 17
    4528:	0b 15       	cp	r16, r11
    452a:	90 f4       	brcc	.+36     	; 0x4550 <u8g_GetGlyph+0xca>
    452c:	d7 01       	movw	r26, r14
    452e:	50 96       	adiw	r26, 0x10	; 16
    4530:	1c 92       	st	X, r1
    4532:	50 97       	sbiw	r26, 0x10	; 16
    4534:	53 96       	adiw	r26, 0x13	; 19
    4536:	1c 92       	st	X, r1
    4538:	53 97       	sbiw	r26, 0x13	; 19
    453a:	54 96       	adiw	r26, 0x14	; 20
    453c:	1c 92       	st	X, r1
    453e:	54 97       	sbiw	r26, 0x14	; 20
    4540:	51 96       	adiw	r26, 0x11	; 17
    4542:	1c 92       	st	X, r1
    4544:	51 97       	sbiw	r26, 0x11	; 17
    4546:	52 96       	adiw	r26, 0x12	; 18
    4548:	1c 92       	st	X, r1
    454a:	80 e0       	ldi	r24, 0x00	; 0
    454c:	90 e0       	ldi	r25, 0x00	; 0
    454e:	75 c0       	rjmp	.+234    	; 0x463a <u8g_GetGlyph+0x1b4>
    4550:	01 17       	cp	r16, r17
    4552:	08 f4       	brcc	.+2      	; 0x4556 <u8g_GetGlyph+0xd0>
    4554:	6a c0       	rjmp	.+212    	; 0x462a <u8g_GetGlyph+0x1a4>
    4556:	2d 2d       	mov	r18, r13
    4558:	30 e0       	ldi	r19, 0x00	; 0
    455a:	6e 01       	movw	r12, r28
    455c:	fe 01       	movw	r30, r28
    455e:	94 91       	lpm	r25, Z
    4560:	9f 3f       	cpi	r25, 0xFF	; 255
    4562:	11 f4       	brne	.+4      	; 0x4568 <u8g_GetGlyph+0xe2>
    4564:	21 96       	adiw	r28, 0x01	; 1
    4566:	5d c0       	rjmp	.+186    	; 0x4622 <u8g_GetGlyph+0x19c>
    4568:	1b 11       	cpse	r17, r11
    456a:	52 c0       	rjmp	.+164    	; 0x4610 <u8g_GetGlyph+0x18a>
    456c:	8e 01       	movw	r16, r28
    456e:	d7 01       	movw	r26, r14
    4570:	14 96       	adiw	r26, 0x04	; 4
    4572:	8d 91       	ld	r24, X+
    4574:	9c 91       	ld	r25, X
    4576:	15 97       	sbiw	r26, 0x05	; 5
    4578:	0e 94 24 22 	call	0x4448	; 0x4448 <u8g_font_GetFormat>
    457c:	88 23       	and	r24, r24
    457e:	11 f0       	breq	.+4      	; 0x4584 <u8g_GetGlyph+0xfe>
    4580:	82 30       	cpi	r24, 0x02	; 2
    4582:	f1 f4       	brne	.+60     	; 0x45c0 <u8g_GetGlyph+0x13a>
    4584:	f6 01       	movw	r30, r12
    4586:	c4 90       	lpm	r12, Z
    4588:	d7 01       	movw	r26, r14
    458a:	53 96       	adiw	r26, 0x13	; 19
    458c:	cc 92       	st	X, r12
    458e:	53 97       	sbiw	r26, 0x13	; 19
    4590:	f8 01       	movw	r30, r16
    4592:	31 96       	adiw	r30, 0x01	; 1
    4594:	e4 91       	lpm	r30, Z
    4596:	54 96       	adiw	r26, 0x14	; 20
    4598:	ec 93       	st	X, r30
    459a:	54 97       	sbiw	r26, 0x14	; 20
    459c:	f8 01       	movw	r30, r16
    459e:	33 96       	adiw	r30, 0x03	; 3
    45a0:	e4 91       	lpm	r30, Z
    45a2:	50 96       	adiw	r26, 0x10	; 16
    45a4:	ec 93       	st	X, r30
    45a6:	50 97       	sbiw	r26, 0x10	; 16
    45a8:	f8 01       	movw	r30, r16
    45aa:	34 96       	adiw	r30, 0x04	; 4
    45ac:	e4 91       	lpm	r30, Z
    45ae:	51 96       	adiw	r26, 0x11	; 17
    45b0:	ec 93       	st	X, r30
    45b2:	51 97       	sbiw	r26, 0x11	; 17
    45b4:	f8 01       	movw	r30, r16
    45b6:	35 96       	adiw	r30, 0x05	; 5
    45b8:	e4 91       	lpm	r30, Z
    45ba:	52 96       	adiw	r26, 0x12	; 18
    45bc:	ec 93       	st	X, r30
    45be:	25 c0       	rjmp	.+74     	; 0x460a <u8g_GetGlyph+0x184>
    45c0:	fe 01       	movw	r30, r28
    45c2:	84 91       	lpm	r24, Z
    45c4:	98 2f       	mov	r25, r24
    45c6:	9f 70       	andi	r25, 0x0F	; 15
    45c8:	92 50       	subi	r25, 0x02	; 2
    45ca:	d7 01       	movw	r26, r14
    45cc:	52 96       	adiw	r26, 0x12	; 18
    45ce:	9c 93       	st	X, r25
    45d0:	52 97       	sbiw	r26, 0x12	; 18
    45d2:	c8 2e       	mov	r12, r24
    45d4:	c6 94       	lsr	r12
    45d6:	c6 94       	lsr	r12
    45d8:	c6 94       	lsr	r12
    45da:	c6 94       	lsr	r12
    45dc:	51 96       	adiw	r26, 0x11	; 17
    45de:	cc 92       	st	X, r12
    45e0:	51 97       	sbiw	r26, 0x11	; 17
    45e2:	fe 01       	movw	r30, r28
    45e4:	31 96       	adiw	r30, 0x01	; 1
    45e6:	e4 91       	lpm	r30, Z
    45e8:	8e 2f       	mov	r24, r30
    45ea:	8f 70       	andi	r24, 0x0F	; 15
    45ec:	54 96       	adiw	r26, 0x14	; 20
    45ee:	8c 93       	st	X, r24
    45f0:	54 97       	sbiw	r26, 0x14	; 20
    45f2:	e2 95       	swap	r30
    45f4:	ef 70       	andi	r30, 0x0F	; 15
    45f6:	53 96       	adiw	r26, 0x13	; 19
    45f8:	ec 93       	st	X, r30
    45fa:	53 97       	sbiw	r26, 0x13	; 19
    45fc:	fe 01       	movw	r30, r28
    45fe:	32 96       	adiw	r30, 0x02	; 2
    4600:	e4 91       	lpm	r30, Z
    4602:	e2 95       	swap	r30
    4604:	ef 70       	andi	r30, 0x0F	; 15
    4606:	50 96       	adiw	r26, 0x10	; 16
    4608:	ec 93       	st	X, r30
    460a:	8c 2f       	mov	r24, r28
    460c:	9d 2f       	mov	r25, r29
    460e:	15 c0       	rjmp	.+42     	; 0x463a <u8g_GetGlyph+0x1b4>
    4610:	fe 01       	movw	r30, r28
    4612:	32 96       	adiw	r30, 0x02	; 2
    4614:	e4 91       	lpm	r30, Z
    4616:	ea 21       	and	r30, r10
    4618:	c9 01       	movw	r24, r18
    461a:	8e 0f       	add	r24, r30
    461c:	91 1d       	adc	r25, r1
    461e:	c8 0f       	add	r28, r24
    4620:	d9 1f       	adc	r29, r25
    4622:	10 17       	cp	r17, r16
    4624:	11 f0       	breq	.+4      	; 0x462a <u8g_GetGlyph+0x1a4>
    4626:	1f 5f       	subi	r17, 0xFF	; 255
    4628:	98 cf       	rjmp	.-208    	; 0x455a <u8g_GetGlyph+0xd4>
    462a:	f7 01       	movw	r30, r14
    462c:	10 8a       	std	Z+16, r1	; 0x10
    462e:	13 8a       	std	Z+19, r1	; 0x13
    4630:	14 8a       	std	Z+20, r1	; 0x14
    4632:	11 8a       	std	Z+17, r1	; 0x11
    4634:	12 8a       	std	Z+18, r1	; 0x12
    4636:	80 e0       	ldi	r24, 0x00	; 0
    4638:	90 e0       	ldi	r25, 0x00	; 0
    463a:	df 91       	pop	r29
    463c:	cf 91       	pop	r28
    463e:	1f 91       	pop	r17
    4640:	0f 91       	pop	r16
    4642:	ff 90       	pop	r15
    4644:	ef 90       	pop	r14
    4646:	df 90       	pop	r13
    4648:	cf 90       	pop	r12
    464a:	bf 90       	pop	r11
    464c:	af 90       	pop	r10
    464e:	08 95       	ret

00004650 <u8g_draw_glyph>:
    4650:	6f 92       	push	r6
    4652:	7f 92       	push	r7
    4654:	8f 92       	push	r8
    4656:	9f 92       	push	r9
    4658:	af 92       	push	r10
    465a:	bf 92       	push	r11
    465c:	cf 92       	push	r12
    465e:	df 92       	push	r13
    4660:	ef 92       	push	r14
    4662:	ff 92       	push	r15
    4664:	0f 93       	push	r16
    4666:	1f 93       	push	r17
    4668:	cf 93       	push	r28
    466a:	df 93       	push	r29
    466c:	5c 01       	movw	r10, r24
    466e:	16 2f       	mov	r17, r22
    4670:	64 2e       	mov	r6, r20
    4672:	62 2f       	mov	r22, r18
    4674:	0e 94 43 22 	call	0x4486	; 0x4486 <u8g_GetGlyph>
    4678:	6c 01       	movw	r12, r24
    467a:	89 2b       	or	r24, r25
    467c:	09 f4       	brne	.+2      	; 0x4680 <u8g_draw_glyph+0x30>
    467e:	48 c0       	rjmp	.+144    	; 0x4710 <u8g_draw_glyph+0xc0>
    4680:	f5 01       	movw	r30, r10
    4682:	84 81       	ldd	r24, Z+4	; 0x04
    4684:	95 81       	ldd	r25, Z+5	; 0x05
    4686:	0e 94 27 22 	call	0x444e	; 0x444e <u8g_font_GetFontGlyphStructureSize>
    468a:	98 2e       	mov	r9, r24
    468c:	f5 01       	movw	r30, r10
    468e:	d3 89       	ldd	r29, Z+19	; 0x13
    4690:	c4 89       	ldd	r28, Z+20	; 0x14
    4692:	71 88       	ldd	r7, Z+17	; 0x11
    4694:	71 0e       	add	r7, r17
    4696:	92 89       	ldd	r25, Z+18	; 0x12
    4698:	69 1a       	sub	r6, r25
    469a:	f6 2c       	mov	r15, r6
    469c:	fc 1a       	sub	r15, r28
    469e:	0c 2f       	mov	r16, r28
    46a0:	2d 2f       	mov	r18, r29
    46a2:	4f 2d       	mov	r20, r15
    46a4:	67 2d       	mov	r22, r7
    46a6:	c5 01       	movw	r24, r10
    46a8:	0e 94 76 1f 	call	0x3eec	; 0x3eec <u8g_IsBBXIntersection>
    46ac:	81 11       	cpse	r24, r1
    46ae:	03 c0       	rjmp	.+6      	; 0x46b6 <u8g_draw_glyph+0x66>
    46b0:	f5 01       	movw	r30, r10
    46b2:	80 89       	ldd	r24, Z+16	; 0x10
    46b4:	2e c0       	rjmp	.+92     	; 0x4712 <u8g_draw_glyph+0xc2>
    46b6:	d9 5f       	subi	r29, 0xF9	; 249
    46b8:	ed 2e       	mov	r14, r29
    46ba:	e6 94       	lsr	r14
    46bc:	e6 94       	lsr	r14
    46be:	e6 94       	lsr	r14
    46c0:	cc 23       	and	r28, r28
    46c2:	19 f1       	breq	.+70     	; 0x470a <u8g_draw_glyph+0xba>
    46c4:	e6 01       	movw	r28, r12
    46c6:	c9 0d       	add	r28, r9
    46c8:	d1 1d       	adc	r29, r1
    46ca:	88 24       	eor	r8, r8
    46cc:	8a 94       	dec	r8
    46ce:	8e 0c       	add	r8, r14
    46d0:	91 2c       	mov	r9, r1
    46d2:	ff ef       	ldi	r31, 0xFF	; 255
    46d4:	8f 1a       	sub	r8, r31
    46d6:	9f 0a       	sbc	r9, r31
    46d8:	11 c0       	rjmp	.+34     	; 0x46fc <u8g_draw_glyph+0xac>
    46da:	fe 01       	movw	r30, r28
    46dc:	04 91       	lpm	r16, Z
    46de:	20 e0       	ldi	r18, 0x00	; 0
    46e0:	4f 2d       	mov	r20, r15
    46e2:	61 2f       	mov	r22, r17
    46e4:	c5 01       	movw	r24, r10
    46e6:	0e 94 81 25 	call	0x4b02	; 0x4b02 <u8g_Draw8Pixel>
    46ea:	21 96       	adiw	r28, 0x01	; 1
    46ec:	18 5f       	subi	r17, 0xF8	; 248
    46ee:	cc 15       	cp	r28, r12
    46f0:	dd 05       	cpc	r29, r13
    46f2:	99 f7       	brne	.-26     	; 0x46da <u8g_draw_glyph+0x8a>
    46f4:	e6 01       	movw	r28, r12
    46f6:	f3 94       	inc	r15
    46f8:	f6 14       	cp	r15, r6
    46fa:	39 f0       	breq	.+14     	; 0x470a <u8g_draw_glyph+0xba>
    46fc:	ee 20       	and	r14, r14
    46fe:	d9 f3       	breq	.-10     	; 0x46f6 <u8g_draw_glyph+0xa6>
    4700:	6e 01       	movw	r12, r28
    4702:	c8 0c       	add	r12, r8
    4704:	d9 1c       	adc	r13, r9
    4706:	17 2d       	mov	r17, r7
    4708:	e8 cf       	rjmp	.-48     	; 0x46da <u8g_draw_glyph+0x8a>
    470a:	f5 01       	movw	r30, r10
    470c:	80 89       	ldd	r24, Z+16	; 0x10
    470e:	01 c0       	rjmp	.+2      	; 0x4712 <u8g_draw_glyph+0xc2>
    4710:	80 e0       	ldi	r24, 0x00	; 0
    4712:	df 91       	pop	r29
    4714:	cf 91       	pop	r28
    4716:	1f 91       	pop	r17
    4718:	0f 91       	pop	r16
    471a:	ff 90       	pop	r15
    471c:	ef 90       	pop	r14
    471e:	df 90       	pop	r13
    4720:	cf 90       	pop	r12
    4722:	bf 90       	pop	r11
    4724:	af 90       	pop	r10
    4726:	9f 90       	pop	r9
    4728:	8f 90       	pop	r8
    472a:	7f 90       	pop	r7
    472c:	6f 90       	pop	r6
    472e:	08 95       	ret

00004730 <u8g_DrawStr>:
    4730:	cf 92       	push	r12
    4732:	df 92       	push	r13
    4734:	ff 92       	push	r15
    4736:	0f 93       	push	r16
    4738:	1f 93       	push	r17
    473a:	cf 93       	push	r28
    473c:	df 93       	push	r29
    473e:	6c 01       	movw	r12, r24
    4740:	c6 2f       	mov	r28, r22
    4742:	f4 2e       	mov	r15, r20
    4744:	89 01       	movw	r16, r18
    4746:	dc 01       	movw	r26, r24
    4748:	55 96       	adiw	r26, 0x15	; 21
    474a:	ed 91       	ld	r30, X+
    474c:	fc 91       	ld	r31, X
    474e:	56 97       	sbiw	r26, 0x16	; 22
    4750:	09 95       	icall
    4752:	f8 0e       	add	r15, r24
    4754:	f8 01       	movw	r30, r16
    4756:	20 81       	ld	r18, Z
    4758:	22 23       	and	r18, r18
    475a:	81 f0       	breq	.+32     	; 0x477c <u8g_DrawStr+0x4c>
    475c:	0f 5f       	subi	r16, 0xFF	; 255
    475e:	1f 4f       	sbci	r17, 0xFF	; 255
    4760:	d0 e0       	ldi	r29, 0x00	; 0
    4762:	4f 2d       	mov	r20, r15
    4764:	6c 2f       	mov	r22, r28
    4766:	c6 01       	movw	r24, r12
    4768:	0e 94 28 23 	call	0x4650	; 0x4650 <u8g_draw_glyph>
    476c:	c8 0f       	add	r28, r24
    476e:	d8 0f       	add	r29, r24
    4770:	d8 01       	movw	r26, r16
    4772:	2d 91       	ld	r18, X+
    4774:	8d 01       	movw	r16, r26
    4776:	21 11       	cpse	r18, r1
    4778:	f4 cf       	rjmp	.-24     	; 0x4762 <u8g_DrawStr+0x32>
    477a:	01 c0       	rjmp	.+2      	; 0x477e <u8g_DrawStr+0x4e>
    477c:	d0 e0       	ldi	r29, 0x00	; 0
    477e:	8d 2f       	mov	r24, r29
    4780:	df 91       	pop	r29
    4782:	cf 91       	pop	r28
    4784:	1f 91       	pop	r17
    4786:	0f 91       	pop	r16
    4788:	ff 90       	pop	r15
    478a:	df 90       	pop	r13
    478c:	cf 90       	pop	r12
    478e:	08 95       	ret

00004790 <u8g_UpdateRefHeight>:
    4790:	dc 01       	movw	r26, r24
    4792:	14 96       	adiw	r26, 0x04	; 4
    4794:	8d 91       	ld	r24, X+
    4796:	9c 91       	ld	r25, X
    4798:	15 97       	sbiw	r26, 0x05	; 5
    479a:	00 97       	sbiw	r24, 0x00	; 0
    479c:	09 f4       	brne	.+2      	; 0x47a0 <u8g_UpdateRefHeight+0x10>
    479e:	4d c0       	rjmp	.+154    	; 0x483a <u8g_UpdateRefHeight+0xaa>
    47a0:	57 96       	adiw	r26, 0x17	; 23
    47a2:	2c 91       	ld	r18, X
    47a4:	57 97       	sbiw	r26, 0x17	; 23
    47a6:	21 11       	cpse	r18, r1
    47a8:	0d c0       	rjmp	.+26     	; 0x47c4 <u8g_UpdateRefHeight+0x34>
    47aa:	fc 01       	movw	r30, r24
    47ac:	35 96       	adiw	r30, 0x05	; 5
    47ae:	e4 91       	lpm	r30, Z
    47b0:	58 96       	adiw	r26, 0x18	; 24
    47b2:	ec 93       	st	X, r30
    47b4:	58 97       	sbiw	r26, 0x18	; 24
    47b6:	fc 01       	movw	r30, r24
    47b8:	3c 96       	adiw	r30, 0x0c	; 12
    47ba:	e4 91       	lpm	r30, Z
    47bc:	59 96       	adiw	r26, 0x19	; 25
    47be:	ec 93       	st	X, r30
    47c0:	59 97       	sbiw	r26, 0x19	; 25
    47c2:	1b c0       	rjmp	.+54     	; 0x47fa <u8g_UpdateRefHeight+0x6a>
    47c4:	21 30       	cpi	r18, 0x01	; 1
    47c6:	69 f4       	brne	.+26     	; 0x47e2 <u8g_UpdateRefHeight+0x52>
    47c8:	fc 01       	movw	r30, r24
    47ca:	3f 96       	adiw	r30, 0x0f	; 15
    47cc:	e4 91       	lpm	r30, Z
    47ce:	58 96       	adiw	r26, 0x18	; 24
    47d0:	ec 93       	st	X, r30
    47d2:	58 97       	sbiw	r26, 0x18	; 24
    47d4:	fc 01       	movw	r30, r24
    47d6:	70 96       	adiw	r30, 0x10	; 16
    47d8:	e4 91       	lpm	r30, Z
    47da:	59 96       	adiw	r26, 0x19	; 25
    47dc:	ec 93       	st	X, r30
    47de:	59 97       	sbiw	r26, 0x19	; 25
    47e0:	0c c0       	rjmp	.+24     	; 0x47fa <u8g_UpdateRefHeight+0x6a>
    47e2:	fc 01       	movw	r30, r24
    47e4:	3d 96       	adiw	r30, 0x0d	; 13
    47e6:	e4 91       	lpm	r30, Z
    47e8:	58 96       	adiw	r26, 0x18	; 24
    47ea:	ec 93       	st	X, r30
    47ec:	58 97       	sbiw	r26, 0x18	; 24
    47ee:	fc 01       	movw	r30, r24
    47f0:	3e 96       	adiw	r30, 0x0e	; 14
    47f2:	e4 91       	lpm	r30, Z
    47f4:	59 96       	adiw	r26, 0x19	; 25
    47f6:	ec 93       	st	X, r30
    47f8:	59 97       	sbiw	r26, 0x19	; 25
    47fa:	58 96       	adiw	r26, 0x18	; 24
    47fc:	8c 91       	ld	r24, X
    47fe:	58 97       	sbiw	r26, 0x18	; 24
    4800:	08 2e       	mov	r0, r24
    4802:	00 0c       	add	r0, r0
    4804:	99 0b       	sbc	r25, r25
    4806:	59 96       	adiw	r26, 0x19	; 25
    4808:	2c 91       	ld	r18, X
    480a:	59 97       	sbiw	r26, 0x19	; 25
    480c:	82 1b       	sub	r24, r18
    480e:	91 09       	sbc	r25, r1
    4810:	27 fd       	sbrc	r18, 7
    4812:	93 95       	inc	r25
    4814:	5a 96       	adiw	r26, 0x1a	; 26
    4816:	2c 91       	ld	r18, X
    4818:	5a 97       	sbiw	r26, 0x1a	; 26
    481a:	20 34       	cpi	r18, 0x40	; 64
    481c:	61 f0       	breq	.+24     	; 0x4836 <u8g_UpdateRefHeight+0xa6>
    481e:	82 9f       	mul	r24, r18
    4820:	c0 01       	movw	r24, r0
    4822:	11 24       	eor	r1, r1
    4824:	00 24       	eor	r0, r0
    4826:	88 0f       	add	r24, r24
    4828:	99 1f       	adc	r25, r25
    482a:	00 1c       	adc	r0, r0
    482c:	88 0f       	add	r24, r24
    482e:	99 1f       	adc	r25, r25
    4830:	00 1c       	adc	r0, r0
    4832:	89 2f       	mov	r24, r25
    4834:	90 2d       	mov	r25, r0
    4836:	5b 96       	adiw	r26, 0x1b	; 27
    4838:	8c 93       	st	X, r24
    483a:	08 95       	ret

0000483c <u8g_SetFontPosBaseline>:
    483c:	21 e3       	ldi	r18, 0x31	; 49
    483e:	32 e2       	ldi	r19, 0x22	; 34
    4840:	fc 01       	movw	r30, r24
    4842:	36 8b       	std	Z+22, r19	; 0x16
    4844:	25 8b       	std	Z+21, r18	; 0x15
    4846:	08 95       	ret

00004848 <u8g_SetFont>:

void u8g_SetFont(u8g_t *u8g, const u8g_fntpgm_uint8_t  *font)
{
    4848:	cf 93       	push	r28
    484a:	df 93       	push	r29
  if ( u8g->font != font )
    484c:	fc 01       	movw	r30, r24
    484e:	24 81       	ldd	r18, Z+4	; 0x04
    4850:	35 81       	ldd	r19, Z+5	; 0x05
    4852:	26 17       	cp	r18, r22
    4854:	37 07       	cpc	r19, r23
    4856:	49 f0       	breq	.+18     	; 0x486a <u8g_SetFont+0x22>
    4858:	ec 01       	movw	r28, r24
  {
    u8g->font = font;
    485a:	75 83       	std	Z+5, r23	; 0x05
    485c:	64 83       	std	Z+4, r22	; 0x04
    u8g_UpdateRefHeight(u8g);
    485e:	0e 94 c8 23 	call	0x4790	; 0x4790 <u8g_UpdateRefHeight>
  return 0;
}

void u8g_SetFontPosBaseline(u8g_t *u8g)
{
  u8g->font_calc_vref = u8g_font_calc_vref_font;
    4862:	81 e3       	ldi	r24, 0x31	; 49
    4864:	92 e2       	ldi	r25, 0x22	; 34
    4866:	9e 8b       	std	Y+22, r25	; 0x16
    4868:	8d 8b       	std	Y+21, r24	; 0x15
  {
    u8g->font = font;
    u8g_UpdateRefHeight(u8g);
    u8g_SetFontPosBaseline(u8g);
  }
}
    486a:	df 91       	pop	r29
    486c:	cf 91       	pop	r28
    486e:	08 95       	ret

00004870 <u8g_init_data>:
  irgb.idx = idx;
  irgb.r = r;
  irgb.g = g;
  irgb.b = b;  
  u8g_call_dev_fn(u8g, u8g->dev, U8G_DEV_MSG_SET_COLOR_ENTRY, &irgb);
}
    4870:	1f 93       	push	r17
    4872:	cf 93       	push	r28
    4874:	df 93       	push	r29
    4876:	ec 01       	movw	r28, r24
    4878:	1d 82       	std	Y+5, r1	; 0x05
    487a:	1c 82       	std	Y+4, r1	; 0x04
    487c:	1f 82       	std	Y+7, r1	; 0x07
    487e:	1e 82       	std	Y+6, r1	; 0x06
    4880:	19 86       	std	Y+9, r1	; 0x09
    4882:	81 e0       	ldi	r24, 0x01	; 1
    4884:	88 87       	std	Y+8, r24	; 0x08
    4886:	82 e2       	ldi	r24, 0x22	; 34
    4888:	8a 87       	std	Y+10, r24	; 0x0a
    488a:	1f 86       	std	Y+15, r1	; 0x0f
    488c:	1e 86       	std	Y+14, r1	; 0x0e
    488e:	fe 01       	movw	r30, r28
    4890:	b3 96       	adiw	r30, 0x23	; 35
    4892:	9e 01       	movw	r18, r28
    4894:	2f 5c       	subi	r18, 0xCF	; 207
    4896:	3f 4f       	sbci	r19, 0xFF	; 255
    4898:	8f ef       	ldi	r24, 0xFF	; 255
    489a:	81 93       	st	Z+, r24
    489c:	e2 17       	cp	r30, r18
    489e:	f3 07       	cpc	r31, r19
    48a0:	e1 f7       	brne	.-8      	; 0x489a <u8g_init_data+0x2a>
    48a2:	11 e0       	ldi	r17, 0x01	; 1
    48a4:	18 a3       	std	Y+32, r17	; 0x20
    48a6:	ce 01       	movw	r24, r28
    48a8:	0e 94 1e 24 	call	0x483c	; 0x483c <u8g_SetFontPosBaseline>
    48ac:	1f 8b       	std	Y+23, r17	; 0x17
    48ae:	18 8e       	std	Y+24, r1	; 0x18
    48b0:	19 8e       	std	Y+25, r1	; 0x19
    48b2:	80 e4       	ldi	r24, 0x40	; 64
    48b4:	8a 8f       	std	Y+26, r24	; 0x1a
    48b6:	1b 8e       	std	Y+27, r1	; 0x1b
    48b8:	8e eb       	ldi	r24, 0xBE	; 190
    48ba:	96 e2       	ldi	r25, 0x26	; 38
    48bc:	9a ab       	std	Y+50, r25	; 0x32
    48be:	89 ab       	std	Y+49, r24	; 0x31
    48c0:	df 91       	pop	r29
    48c2:	cf 91       	pop	r28
    48c4:	1f 91       	pop	r17
    48c6:	08 95       	ret

000048c8 <u8g_call_dev_fn>:
    48c8:	db 01       	movw	r26, r22
    48ca:	ed 91       	ld	r30, X+
    48cc:	fc 91       	ld	r31, X
    48ce:	09 95       	icall
    48d0:	08 95       	ret

000048d2 <u8g_InitLL>:
    48d2:	0f 93       	push	r16
    48d4:	1f 93       	push	r17
    48d6:	cf 93       	push	r28
    48d8:	df 93       	push	r29
    48da:	ec 01       	movw	r28, r24
    48dc:	8b 01       	movw	r16, r22
    48de:	e9 a9       	ldd	r30, Y+49	; 0x31
    48e0:	fa a9       	ldd	r31, Y+50	; 0x32
    48e2:	82 e0       	ldi	r24, 0x02	; 2
    48e4:	09 95       	icall
    48e6:	20 e0       	ldi	r18, 0x00	; 0
    48e8:	30 e0       	ldi	r19, 0x00	; 0
    48ea:	4a e0       	ldi	r20, 0x0A	; 10
    48ec:	b8 01       	movw	r22, r16
    48ee:	ce 01       	movw	r24, r28
    48f0:	0e 94 64 24 	call	0x48c8	; 0x48c8 <u8g_call_dev_fn>
    48f4:	18 2f       	mov	r17, r24
    48f6:	e9 a9       	ldd	r30, Y+49	; 0x31
    48f8:	fa a9       	ldd	r31, Y+50	; 0x32
    48fa:	83 e0       	ldi	r24, 0x03	; 3
    48fc:	09 95       	icall
    48fe:	e9 a9       	ldd	r30, Y+49	; 0x31
    4900:	fa a9       	ldd	r31, Y+50	; 0x32
    4902:	80 e0       	ldi	r24, 0x00	; 0
    4904:	09 95       	icall
    4906:	81 2f       	mov	r24, r17
    4908:	df 91       	pop	r29
    490a:	cf 91       	pop	r28
    490c:	1f 91       	pop	r17
    490e:	0f 91       	pop	r16
    4910:	08 95       	ret

00004912 <u8g_FirstPageLL>:
    4912:	0f 93       	push	r16
    4914:	1f 93       	push	r17
    4916:	cf 93       	push	r28
    4918:	df 93       	push	r29
    491a:	ec 01       	movw	r28, r24
    491c:	8b 01       	movw	r16, r22
    491e:	e9 a9       	ldd	r30, Y+49	; 0x31
    4920:	fa a9       	ldd	r31, Y+50	; 0x32
    4922:	82 e0       	ldi	r24, 0x02	; 2
    4924:	09 95       	icall
    4926:	e9 a9       	ldd	r30, Y+49	; 0x31
    4928:	fa a9       	ldd	r31, Y+50	; 0x32
    492a:	81 e0       	ldi	r24, 0x01	; 1
    492c:	09 95       	icall
    492e:	20 e0       	ldi	r18, 0x00	; 0
    4930:	30 e0       	ldi	r19, 0x00	; 0
    4932:	44 e1       	ldi	r20, 0x14	; 20
    4934:	b8 01       	movw	r22, r16
    4936:	ce 01       	movw	r24, r28
    4938:	0e 94 64 24 	call	0x48c8	; 0x48c8 <u8g_call_dev_fn>
    493c:	9e 01       	movw	r18, r28
    493e:	2d 5c       	subi	r18, 0xCD	; 205
    4940:	3f 4f       	sbci	r19, 0xFF	; 255
    4942:	47 e1       	ldi	r20, 0x17	; 23
    4944:	b8 01       	movw	r22, r16
    4946:	ce 01       	movw	r24, r28
    4948:	0e 94 64 24 	call	0x48c8	; 0x48c8 <u8g_call_dev_fn>
    494c:	e9 a9       	ldd	r30, Y+49	; 0x31
    494e:	fa a9       	ldd	r31, Y+50	; 0x32
    4950:	80 e0       	ldi	r24, 0x00	; 0
    4952:	09 95       	icall
    4954:	df 91       	pop	r29
    4956:	cf 91       	pop	r28
    4958:	1f 91       	pop	r17
    495a:	0f 91       	pop	r16
    495c:	08 95       	ret

0000495e <u8g_NextPageLL>:
    495e:	ef 92       	push	r14
    4960:	ff 92       	push	r15
    4962:	1f 93       	push	r17
    4964:	cf 93       	push	r28
    4966:	df 93       	push	r29
    4968:	ec 01       	movw	r28, r24
    496a:	7b 01       	movw	r14, r22
    496c:	e9 a9       	ldd	r30, Y+49	; 0x31
    496e:	fa a9       	ldd	r31, Y+50	; 0x32
    4970:	82 e0       	ldi	r24, 0x02	; 2
    4972:	09 95       	icall
    4974:	e9 a9       	ldd	r30, Y+49	; 0x31
    4976:	fa a9       	ldd	r31, Y+50	; 0x32
    4978:	81 e0       	ldi	r24, 0x01	; 1
    497a:	09 95       	icall
    497c:	20 e0       	ldi	r18, 0x00	; 0
    497e:	30 e0       	ldi	r19, 0x00	; 0
    4980:	45 e1       	ldi	r20, 0x15	; 21
    4982:	b7 01       	movw	r22, r14
    4984:	ce 01       	movw	r24, r28
    4986:	0e 94 64 24 	call	0x48c8	; 0x48c8 <u8g_call_dev_fn>
    498a:	18 2f       	mov	r17, r24
    498c:	88 23       	and	r24, r24
    498e:	41 f0       	breq	.+16     	; 0x49a0 <u8g_NextPageLL+0x42>
    4990:	9e 01       	movw	r18, r28
    4992:	2d 5c       	subi	r18, 0xCD	; 205
    4994:	3f 4f       	sbci	r19, 0xFF	; 255
    4996:	47 e1       	ldi	r20, 0x17	; 23
    4998:	b7 01       	movw	r22, r14
    499a:	ce 01       	movw	r24, r28
    499c:	0e 94 64 24 	call	0x48c8	; 0x48c8 <u8g_call_dev_fn>
    49a0:	e9 a9       	ldd	r30, Y+49	; 0x31
    49a2:	fa a9       	ldd	r31, Y+50	; 0x32
    49a4:	80 e0       	ldi	r24, 0x00	; 0
    49a6:	09 95       	icall
    49a8:	81 2f       	mov	r24, r17
    49aa:	df 91       	pop	r29
    49ac:	cf 91       	pop	r28
    49ae:	1f 91       	pop	r17
    49b0:	ff 90       	pop	r15
    49b2:	ef 90       	pop	r14
    49b4:	08 95       	ret

000049b6 <u8g_SetContrastLL>:
    49b6:	cf 93       	push	r28
    49b8:	df 93       	push	r29
    49ba:	1f 92       	push	r1
    49bc:	cd b7       	in	r28, 0x3d	; 61
    49be:	de b7       	in	r29, 0x3e	; 62
    49c0:	49 83       	std	Y+1, r20	; 0x01
    49c2:	9e 01       	movw	r18, r28
    49c4:	2f 5f       	subi	r18, 0xFF	; 255
    49c6:	3f 4f       	sbci	r19, 0xFF	; 255
    49c8:	4f e0       	ldi	r20, 0x0F	; 15
    49ca:	0e 94 64 24 	call	0x48c8	; 0x48c8 <u8g_call_dev_fn>
    49ce:	0f 90       	pop	r0
    49d0:	df 91       	pop	r29
    49d2:	cf 91       	pop	r28
    49d4:	08 95       	ret

000049d6 <u8g_GetWidthLL>:
    49d6:	cf 93       	push	r28
    49d8:	df 93       	push	r29
    49da:	1f 92       	push	r1
    49dc:	cd b7       	in	r28, 0x3d	; 61
    49de:	de b7       	in	r29, 0x3e	; 62
    49e0:	9e 01       	movw	r18, r28
    49e2:	2f 5f       	subi	r18, 0xFF	; 255
    49e4:	3f 4f       	sbci	r19, 0xFF	; 255
    49e6:	46 e4       	ldi	r20, 0x46	; 70
    49e8:	0e 94 64 24 	call	0x48c8	; 0x48c8 <u8g_call_dev_fn>
    49ec:	89 81       	ldd	r24, Y+1	; 0x01
    49ee:	0f 90       	pop	r0
    49f0:	df 91       	pop	r29
    49f2:	cf 91       	pop	r28
    49f4:	08 95       	ret

000049f6 <u8g_GetHeightLL>:
    49f6:	cf 93       	push	r28
    49f8:	df 93       	push	r29
    49fa:	1f 92       	push	r1
    49fc:	cd b7       	in	r28, 0x3d	; 61
    49fe:	de b7       	in	r29, 0x3e	; 62
    4a00:	9e 01       	movw	r18, r28
    4a02:	2f 5f       	subi	r18, 0xFF	; 255
    4a04:	3f 4f       	sbci	r19, 0xFF	; 255
    4a06:	47 e4       	ldi	r20, 0x47	; 71
    4a08:	0e 94 64 24 	call	0x48c8	; 0x48c8 <u8g_call_dev_fn>
    4a0c:	89 81       	ldd	r24, Y+1	; 0x01
    4a0e:	0f 90       	pop	r0
    4a10:	df 91       	pop	r29
    4a12:	cf 91       	pop	r28
    4a14:	08 95       	ret

00004a16 <u8g_GetModeLL>:
    4a16:	20 e0       	ldi	r18, 0x00	; 0
    4a18:	30 e0       	ldi	r19, 0x00	; 0
    4a1a:	48 e4       	ldi	r20, 0x48	; 72
    4a1c:	0e 94 64 24 	call	0x48c8	; 0x48c8 <u8g_call_dev_fn>
    4a20:	08 95       	ret

00004a22 <u8g_UpdateDimension>:
    4a22:	cf 93       	push	r28
    4a24:	df 93       	push	r29
    4a26:	ec 01       	movw	r28, r24
    4a28:	6a 81       	ldd	r22, Y+2	; 0x02
    4a2a:	7b 81       	ldd	r23, Y+3	; 0x03
    4a2c:	0e 94 eb 24 	call	0x49d6	; 0x49d6 <u8g_GetWidthLL>
    4a30:	88 83       	st	Y, r24
    4a32:	6a 81       	ldd	r22, Y+2	; 0x02
    4a34:	7b 81       	ldd	r23, Y+3	; 0x03
    4a36:	ce 01       	movw	r24, r28
    4a38:	0e 94 fb 24 	call	0x49f6	; 0x49f6 <u8g_GetHeightLL>
    4a3c:	89 83       	std	Y+1, r24	; 0x01
    4a3e:	6a 81       	ldd	r22, Y+2	; 0x02
    4a40:	7b 81       	ldd	r23, Y+3	; 0x03
    4a42:	ce 01       	movw	r24, r28
    4a44:	0e 94 0b 25 	call	0x4a16	; 0x4a16 <u8g_GetModeLL>
    4a48:	8b 87       	std	Y+11, r24	; 0x0b
    4a4a:	9e 01       	movw	r18, r28
    4a4c:	2d 5c       	subi	r18, 0xCD	; 205
    4a4e:	3f 4f       	sbci	r19, 0xFF	; 255
    4a50:	6a 81       	ldd	r22, Y+2	; 0x02
    4a52:	7b 81       	ldd	r23, Y+3	; 0x03
    4a54:	47 e1       	ldi	r20, 0x17	; 23
    4a56:	ce 01       	movw	r24, r28
    4a58:	0e 94 64 24 	call	0x48c8	; 0x48c8 <u8g_call_dev_fn>
    4a5c:	df 91       	pop	r29
    4a5e:	cf 91       	pop	r28
    4a60:	08 95       	ret

00004a62 <u8g_Begin>:
    4a62:	cf 93       	push	r28
    4a64:	df 93       	push	r29
    4a66:	ec 01       	movw	r28, r24
    4a68:	6a 81       	ldd	r22, Y+2	; 0x02
    4a6a:	7b 81       	ldd	r23, Y+3	; 0x03
    4a6c:	0e 94 69 24 	call	0x48d2	; 0x48d2 <u8g_InitLL>
    4a70:	88 23       	and	r24, r24
    4a72:	21 f0       	breq	.+8      	; 0x4a7c <u8g_Begin+0x1a>
    4a74:	ce 01       	movw	r24, r28
    4a76:	0e 94 11 25 	call	0x4a22	; 0x4a22 <u8g_UpdateDimension>
    4a7a:	81 e0       	ldi	r24, 0x01	; 1
    4a7c:	df 91       	pop	r29
    4a7e:	cf 91       	pop	r28
    4a80:	08 95       	ret

00004a82 <u8g_InitSPI>:
    4a82:	af 92       	push	r10
    4a84:	bf 92       	push	r11
    4a86:	cf 92       	push	r12
    4a88:	ef 92       	push	r14
    4a8a:	ff 92       	push	r15
    4a8c:	0f 93       	push	r16
    4a8e:	1f 93       	push	r17
    4a90:	cf 93       	push	r28
    4a92:	df 93       	push	r29
    4a94:	ec 01       	movw	r28, r24
    4a96:	5b 01       	movw	r10, r22
    4a98:	f4 2e       	mov	r15, r20
    4a9a:	12 2f       	mov	r17, r18
    4a9c:	0e 94 38 24 	call	0x4870	; 0x4870 <u8g_init_data>
    4aa0:	bb 82       	std	Y+3, r11	; 0x03
    4aa2:	aa 82       	std	Y+2, r10	; 0x02
    4aa4:	ff a2       	std	Y+39, r15	; 0x27
    4aa6:	18 a7       	std	Y+40, r17	; 0x28
    4aa8:	0d a3       	std	Y+37, r16	; 0x25
    4aaa:	ec a2       	std	Y+36, r14	; 0x24
    4aac:	cb a2       	std	Y+35, r12	; 0x23
    4aae:	ce 01       	movw	r24, r28
    4ab0:	0e 94 31 25 	call	0x4a62	; 0x4a62 <u8g_Begin>
    4ab4:	df 91       	pop	r29
    4ab6:	cf 91       	pop	r28
    4ab8:	1f 91       	pop	r17
    4aba:	0f 91       	pop	r16
    4abc:	ff 90       	pop	r15
    4abe:	ef 90       	pop	r14
    4ac0:	cf 90       	pop	r12
    4ac2:	bf 90       	pop	r11
    4ac4:	af 90       	pop	r10
    4ac6:	08 95       	ret

00004ac8 <u8g_FirstPage>:
    4ac8:	fc 01       	movw	r30, r24
    4aca:	62 81       	ldd	r22, Z+2	; 0x02
    4acc:	73 81       	ldd	r23, Z+3	; 0x03
    4ace:	0e 94 89 24 	call	0x4912	; 0x4912 <u8g_FirstPageLL>
    4ad2:	08 95       	ret

00004ad4 <u8g_NextPage>:
    4ad4:	cf 93       	push	r28
    4ad6:	df 93       	push	r29
    4ad8:	ec 01       	movw	r28, r24
    4ada:	ee 85       	ldd	r30, Y+14	; 0x0e
    4adc:	ff 85       	ldd	r31, Y+15	; 0x0f
    4ade:	30 97       	sbiw	r30, 0x00	; 0
    4ae0:	09 f0       	breq	.+2      	; 0x4ae4 <u8g_NextPage+0x10>
    4ae2:	09 95       	icall
    4ae4:	6a 81       	ldd	r22, Y+2	; 0x02
    4ae6:	7b 81       	ldd	r23, Y+3	; 0x03
    4ae8:	ce 01       	movw	r24, r28
    4aea:	0e 94 af 24 	call	0x495e	; 0x495e <u8g_NextPageLL>
    4aee:	df 91       	pop	r29
    4af0:	cf 91       	pop	r28
    4af2:	08 95       	ret

00004af4 <u8g_SetContrast>:
    4af4:	46 2f       	mov	r20, r22
    4af6:	fc 01       	movw	r30, r24
    4af8:	62 81       	ldd	r22, Z+2	; 0x02
    4afa:	73 81       	ldd	r23, Z+3	; 0x03
    4afc:	0e 94 db 24 	call	0x49b6	; 0x49b6 <u8g_SetContrastLL>
    4b00:	08 95       	ret

00004b02 <u8g_Draw8Pixel>:
    4b02:	0f 93       	push	r16
    4b04:	fc 01       	movw	r30, r24
    4b06:	82 81       	ldd	r24, Z+2	; 0x02
    4b08:	93 81       	ldd	r25, Z+3	; 0x03
    4b0a:	64 8f       	std	Z+28, r22	; 0x1c
    4b0c:	45 8f       	std	Z+29, r20	; 0x1d
    4b0e:	27 8f       	std	Z+31, r18	; 0x1f
    4b10:	06 8f       	std	Z+30, r16	; 0x1e
    4b12:	9f 01       	movw	r18, r30
    4b14:	24 5e       	subi	r18, 0xE4	; 228
    4b16:	3f 4f       	sbci	r19, 0xFF	; 255
    4b18:	4b e3       	ldi	r20, 0x3B	; 59
    4b1a:	bc 01       	movw	r22, r24
    4b1c:	cf 01       	movw	r24, r30
    4b1e:	0e 94 64 24 	call	0x48c8	; 0x48c8 <u8g_call_dev_fn>
    4b22:	0f 91       	pop	r16
    4b24:	08 95       	ret

00004b26 <u8g_SetColorIndex>:

void u8g_SetColorIndex(u8g_t *u8g, uint8_t idx)
{
  u8g->arg_pixel.color = idx;
    4b26:	fc 01       	movw	r30, r24
    4b28:	60 a3       	std	Z+32, r22	; 0x20
    4b2a:	08 95       	ret

00004b2c <u8g_page_First>:
void u8g_page_Init(u8g_page_t *p, u8g_uint_t page_height, u8g_uint_t total_height )
{
  p->page_height = page_height;
  p->total_height = total_height;
  p->page = 0;
  u8g_page_First(p);
    4b2c:	fc 01       	movw	r30, r24
    4b2e:	12 82       	std	Z+2, r1	; 0x02
    4b30:	80 81       	ld	r24, Z
    4b32:	81 50       	subi	r24, 0x01	; 1
    4b34:	83 83       	std	Z+3, r24	; 0x03
    4b36:	14 82       	std	Z+4, r1	; 0x04
    4b38:	08 95       	ret

00004b3a <u8g_page_Next>:
  p->page_y1--;
  p->page = 0;
}

uint8_t u8g_page_Next(u8g_page_t * p)
{
    4b3a:	fc 01       	movw	r30, r24
  register u8g_uint_t y1;
  p->page_y0 += p->page_height;
    4b3c:	90 81       	ld	r25, Z
    4b3e:	82 81       	ldd	r24, Z+2	; 0x02
    4b40:	89 0f       	add	r24, r25
    4b42:	82 83       	std	Z+2, r24	; 0x02
  if ( p->page_y0 >= p->total_height )
    4b44:	21 81       	ldd	r18, Z+1	; 0x01
    4b46:	82 17       	cp	r24, r18
    4b48:	60 f4       	brcc	.+24     	; 0x4b62 <u8g_page_Next+0x28>
    return 0;
  p->page++;
    4b4a:	84 81       	ldd	r24, Z+4	; 0x04
    4b4c:	8f 5f       	subi	r24, 0xFF	; 255
    4b4e:	84 83       	std	Z+4, r24	; 0x04
  y1 = p->page_y1;
    4b50:	83 81       	ldd	r24, Z+3	; 0x03
  y1 += p->page_height;
    4b52:	98 0f       	add	r25, r24
  if ( y1 >= p->total_height )
    4b54:	92 17       	cp	r25, r18
    4b56:	10 f0       	brcs	.+4      	; 0x4b5c <u8g_page_Next+0x22>
  {
    y1 = p->total_height;
    y1--;
    4b58:	9f ef       	ldi	r25, 0xFF	; 255
    4b5a:	92 0f       	add	r25, r18
  }
  p->page_y1 = y1;
    4b5c:	93 83       	std	Z+3, r25	; 0x03
  
  return 1;
    4b5e:	81 e0       	ldi	r24, 0x01	; 1
    4b60:	08 95       	ret
uint8_t u8g_page_Next(u8g_page_t * p)
{
  register u8g_uint_t y1;
  p->page_y0 += p->page_height;
  if ( p->page_y0 >= p->total_height )
    return 0;
    4b62:	80 e0       	ldi	r24, 0x00	; 0
    y1--;
  }
  p->page_y1 = y1;
  
  return 1;
}
    4b64:	08 95       	ret

00004b66 <u8g_pb_Clear>:
  tmp = bbx->x;
  tmp += bbx->w;
  tmp--;
    
  return u8g_pb_IsXIntersection(pb, bbx->x, tmp);
}
    4b66:	dc 01       	movw	r26, r24
    4b68:	16 96       	adiw	r26, 0x06	; 6
    4b6a:	ed 91       	ld	r30, X+
    4b6c:	fc 91       	ld	r31, X
    4b6e:	17 97       	sbiw	r26, 0x07	; 7
    4b70:	15 96       	adiw	r26, 0x05	; 5
    4b72:	8c 91       	ld	r24, X
    4b74:	9f 01       	movw	r18, r30
    4b76:	28 0f       	add	r18, r24
    4b78:	31 1d       	adc	r19, r1
    4b7a:	c9 01       	movw	r24, r18
    4b7c:	11 92       	st	Z+, r1
    4b7e:	e8 17       	cp	r30, r24
    4b80:	f9 07       	cpc	r31, r25
    4b82:	e1 f7       	brne	.-8      	; 0x4b7c <u8g_pb_Clear+0x16>
    4b84:	08 95       	ret

00004b86 <u8g_pb_IsYIntersection>:
    4b86:	fc 01       	movw	r30, r24
    4b88:	91 e0       	ldi	r25, 0x01	; 1
    4b8a:	83 81       	ldd	r24, Z+3	; 0x03
    4b8c:	86 17       	cp	r24, r22
    4b8e:	08 f4       	brcc	.+2      	; 0x4b92 <u8g_pb_IsYIntersection+0xc>
    4b90:	90 e0       	ldi	r25, 0x00	; 0
    4b92:	31 e0       	ldi	r19, 0x01	; 1
    4b94:	46 17       	cp	r20, r22
    4b96:	08 f0       	brcs	.+2      	; 0x4b9a <u8g_pb_IsYIntersection+0x14>
    4b98:	30 e0       	ldi	r19, 0x00	; 0
    4b9a:	83 2f       	mov	r24, r19
    4b9c:	89 2b       	or	r24, r25
    4b9e:	21 e0       	ldi	r18, 0x01	; 1
    4ba0:	52 81       	ldd	r21, Z+2	; 0x02
    4ba2:	45 17       	cp	r20, r21
    4ba4:	08 f4       	brcc	.+2      	; 0x4ba8 <u8g_pb_IsYIntersection+0x22>
    4ba6:	20 e0       	ldi	r18, 0x00	; 0
    4ba8:	28 23       	and	r18, r24
    4baa:	83 2f       	mov	r24, r19
    4bac:	89 23       	and	r24, r25
    4bae:	82 2b       	or	r24, r18
    4bb0:	08 95       	ret

00004bb2 <u8g_pb_GetPageBox>:

void u8g_pb_GetPageBox(u8g_pb_t *pb, u8g_box_t *box)
{
    4bb2:	dc 01       	movw	r26, r24
    4bb4:	fb 01       	movw	r30, r22
  box->x0 = 0;
    4bb6:	10 82       	st	Z, r1
  box->y0 = pb->p.page_y0;
    4bb8:	12 96       	adiw	r26, 0x02	; 2
    4bba:	8c 91       	ld	r24, X
    4bbc:	12 97       	sbiw	r26, 0x02	; 2
    4bbe:	81 83       	std	Z+1, r24	; 0x01
  box->x1 = pb->width;
  box->x1--;
    4bc0:	15 96       	adiw	r26, 0x05	; 5
    4bc2:	8c 91       	ld	r24, X
    4bc4:	15 97       	sbiw	r26, 0x05	; 5
    4bc6:	81 50       	subi	r24, 0x01	; 1
    4bc8:	82 83       	std	Z+2, r24	; 0x02
  box->y1 = pb->p.page_y1;
    4bca:	13 96       	adiw	r26, 0x03	; 3
    4bcc:	8c 91       	ld	r24, X
    4bce:	83 83       	std	Z+3, r24	; 0x03
    4bd0:	08 95       	ret

00004bd2 <u8g_pb_Is8PixelVisible>:


uint8_t u8g_pb_Is8PixelVisible(u8g_pb_t *b, u8g_dev_arg_pixel_t *arg_pixel)
{
  u8g_uint_t v0, v1;
  v0 = arg_pixel->y;
    4bd2:	fb 01       	movw	r30, r22
    4bd4:	31 81       	ldd	r19, Z+1	; 0x01
  v1 = v0;
  switch( arg_pixel->dir )
    4bd6:	23 81       	ldd	r18, Z+3	; 0x03
    4bd8:	21 30       	cpi	r18, 0x01	; 1
    4bda:	19 f0       	breq	.+6      	; 0x4be2 <u8g_pb_Is8PixelVisible+0x10>
    4bdc:	23 30       	cpi	r18, 0x03	; 3
    4bde:	21 f0       	breq	.+8      	; 0x4be8 <u8g_pb_Is8PixelVisible+0x16>
    4be0:	06 c0       	rjmp	.+12     	; 0x4bee <u8g_pb_Is8PixelVisible+0x1c>
  {
    case 0:
      break;
    case 1:  
      v1 += 8;          /* this is independent from the page height */
    4be2:	48 e0       	ldi	r20, 0x08	; 8
    4be4:	43 0f       	add	r20, r19
      break;
    4be6:	04 c0       	rjmp	.+8      	; 0x4bf0 <u8g_pb_Is8PixelVisible+0x1e>

uint8_t u8g_pb_Is8PixelVisible(u8g_pb_t *b, u8g_dev_arg_pixel_t *arg_pixel)
{
  u8g_uint_t v0, v1;
  v0 = arg_pixel->y;
  v1 = v0;
    4be8:	43 2f       	mov	r20, r19
      v1 += 8;          /* this is independent from the page height */
      break;
    case 2:  
      break;
    case 3: 
      v0 -= 8;
    4bea:	38 50       	subi	r19, 0x08	; 8
      break;
    4bec:	01 c0       	rjmp	.+2      	; 0x4bf0 <u8g_pb_Is8PixelVisible+0x1e>

uint8_t u8g_pb_Is8PixelVisible(u8g_pb_t *b, u8g_dev_arg_pixel_t *arg_pixel)
{
  u8g_uint_t v0, v1;
  v0 = arg_pixel->y;
  v1 = v0;
    4bee:	43 2f       	mov	r20, r19
      break;
    case 3: 
      v0 -= 8;
      break;
  }
  return u8g_pb_IsYIntersection(b, v0, v1);
    4bf0:	63 2f       	mov	r22, r19
    4bf2:	0e 94 c3 25 	call	0x4b86	; 0x4b86 <u8g_pb_IsYIntersection>
}
    4bf6:	08 95       	ret

00004bf8 <u8g_pb_WriteBuffer>:



uint8_t u8g_pb_WriteBuffer(u8g_pb_t *b, u8g_t *u8g, u8g_dev_t *dev)
{
    4bf8:	fc 01       	movw	r30, r24
    4bfa:	cb 01       	movw	r24, r22
    4bfc:	ba 01       	movw	r22, r20
  return u8g_WriteSequence(u8g, dev, b->width, b->buf);  
    4bfe:	26 81       	ldd	r18, Z+6	; 0x06
    4c00:	37 81       	ldd	r19, Z+7	; 0x07
    4c02:	45 81       	ldd	r20, Z+5	; 0x05
    4c04:	0e 94 e6 1f 	call	0x3fcc	; 0x3fcc <u8g_WriteSequence>
}
    4c08:	08 95       	ret

00004c0a <u8g_pb8v1_set_pixel>:
      case 2: arg_pixel->x--; break;
      case 3: arg_pixel->y--; break;
    }
    pixel <<= 1;
  } while( pixel != 0  );
}
    4c0a:	dc 01       	movw	r26, r24
    4c0c:	16 96       	adiw	r26, 0x06	; 6
    4c0e:	ed 91       	ld	r30, X+
    4c10:	fc 91       	ld	r31, X
    4c12:	17 97       	sbiw	r26, 0x07	; 7
    4c14:	12 96       	adiw	r26, 0x02	; 2
    4c16:	8c 91       	ld	r24, X
    4c18:	48 1b       	sub	r20, r24
    4c1a:	47 70       	andi	r20, 0x07	; 7
    4c1c:	81 e0       	ldi	r24, 0x01	; 1
    4c1e:	90 e0       	ldi	r25, 0x00	; 0
    4c20:	02 c0       	rjmp	.+4      	; 0x4c26 <u8g_pb8v1_set_pixel+0x1c>
    4c22:	88 0f       	add	r24, r24
    4c24:	99 1f       	adc	r25, r25
    4c26:	4a 95       	dec	r20
    4c28:	e2 f7       	brpl	.-8      	; 0x4c22 <u8g_pb8v1_set_pixel+0x18>
    4c2a:	e6 0f       	add	r30, r22
    4c2c:	f1 1d       	adc	r31, r1
    4c2e:	22 23       	and	r18, r18
    4c30:	21 f0       	breq	.+8      	; 0x4c3a <u8g_pb8v1_set_pixel+0x30>
    4c32:	90 81       	ld	r25, Z
    4c34:	89 2b       	or	r24, r25
    4c36:	80 83       	st	Z, r24
    4c38:	08 95       	ret
    4c3a:	80 95       	com	r24
    4c3c:	90 81       	ld	r25, Z
    4c3e:	89 23       	and	r24, r25
    4c40:	80 83       	st	Z, r24
    4c42:	08 95       	ret

00004c44 <u8g_pb8v1_SetPixel>:
    4c44:	fb 01       	movw	r30, r22
    4c46:	41 81       	ldd	r20, Z+1	; 0x01
    4c48:	fc 01       	movw	r30, r24
    4c4a:	22 81       	ldd	r18, Z+2	; 0x02
    4c4c:	42 17       	cp	r20, r18
    4c4e:	70 f0       	brcs	.+28     	; 0x4c6c <u8g_pb8v1_SetPixel+0x28>
    4c50:	23 81       	ldd	r18, Z+3	; 0x03
    4c52:	24 17       	cp	r18, r20
    4c54:	58 f0       	brcs	.+22     	; 0x4c6c <u8g_pb8v1_SetPixel+0x28>
    4c56:	fb 01       	movw	r30, r22
    4c58:	30 81       	ld	r19, Z
    4c5a:	fc 01       	movw	r30, r24
    4c5c:	25 81       	ldd	r18, Z+5	; 0x05
    4c5e:	32 17       	cp	r19, r18
    4c60:	28 f4       	brcc	.+10     	; 0x4c6c <u8g_pb8v1_SetPixel+0x28>
    4c62:	fb 01       	movw	r30, r22
    4c64:	24 81       	ldd	r18, Z+4	; 0x04
    4c66:	63 2f       	mov	r22, r19
    4c68:	0e 94 05 26 	call	0x4c0a	; 0x4c0a <u8g_pb8v1_set_pixel>
    4c6c:	08 95       	ret

00004c6e <u8g_pb8v1_Set8PixelOpt2>:


void u8g_pb8v1_Set8PixelOpt2(u8g_pb_t *b, u8g_dev_arg_pixel_t *arg_pixel)
{
    4c6e:	df 92       	push	r13
    4c70:	ef 92       	push	r14
    4c72:	ff 92       	push	r15
    4c74:	0f 93       	push	r16
    4c76:	1f 93       	push	r17
    4c78:	cf 93       	push	r28
    4c7a:	df 93       	push	r29
    4c7c:	7c 01       	movw	r14, r24
    4c7e:	eb 01       	movw	r28, r22
  register uint8_t pixel = arg_pixel->pixel;
    4c80:	1a 81       	ldd	r17, Y+2	; 0x02
  u8g_uint_t dx = 0;
  u8g_uint_t dy = 0;
  
  switch( arg_pixel->dir )
    4c82:	8b 81       	ldd	r24, Y+3	; 0x03
    4c84:	81 30       	cpi	r24, 0x01	; 1
    4c86:	49 f0       	breq	.+18     	; 0x4c9a <u8g_pb8v1_Set8PixelOpt2+0x2c>
    4c88:	28 f0       	brcs	.+10     	; 0x4c94 <u8g_pb8v1_Set8PixelOpt2+0x26>
    4c8a:	82 30       	cpi	r24, 0x02	; 2
    4c8c:	51 f0       	breq	.+20     	; 0x4ca2 <u8g_pb8v1_Set8PixelOpt2+0x34>
    4c8e:	83 30       	cpi	r24, 0x03	; 3
    4c90:	59 f0       	breq	.+22     	; 0x4ca8 <u8g_pb8v1_Set8PixelOpt2+0x3a>
    4c92:	0e c0       	rjmp	.+28     	; 0x4cb0 <u8g_pb8v1_Set8PixelOpt2+0x42>

void u8g_pb8v1_Set8PixelOpt2(u8g_pb_t *b, u8g_dev_arg_pixel_t *arg_pixel)
{
  register uint8_t pixel = arg_pixel->pixel;
  u8g_uint_t dx = 0;
  u8g_uint_t dy = 0;
    4c94:	d1 2c       	mov	r13, r1
  
  switch( arg_pixel->dir )
  {
    case 0: dx++; break;
    4c96:	01 e0       	ldi	r16, 0x01	; 1
    4c98:	0d c0       	rjmp	.+26     	; 0x4cb4 <u8g_pb8v1_Set8PixelOpt2+0x46>
    case 1: dy++; break;
    4c9a:	dd 24       	eor	r13, r13
    4c9c:	d3 94       	inc	r13


void u8g_pb8v1_Set8PixelOpt2(u8g_pb_t *b, u8g_dev_arg_pixel_t *arg_pixel)
{
  register uint8_t pixel = arg_pixel->pixel;
  u8g_uint_t dx = 0;
    4c9e:	00 e0       	ldi	r16, 0x00	; 0
  u8g_uint_t dy = 0;
  
  switch( arg_pixel->dir )
  {
    case 0: dx++; break;
    case 1: dy++; break;
    4ca0:	09 c0       	rjmp	.+18     	; 0x4cb4 <u8g_pb8v1_Set8PixelOpt2+0x46>

void u8g_pb8v1_Set8PixelOpt2(u8g_pb_t *b, u8g_dev_arg_pixel_t *arg_pixel)
{
  register uint8_t pixel = arg_pixel->pixel;
  u8g_uint_t dx = 0;
  u8g_uint_t dy = 0;
    4ca2:	d1 2c       	mov	r13, r1
  
  switch( arg_pixel->dir )
  {
    case 0: dx++; break;
    case 1: dy++; break;
    case 2: dx--; break;
    4ca4:	0f ef       	ldi	r16, 0xFF	; 255
    4ca6:	06 c0       	rjmp	.+12     	; 0x4cb4 <u8g_pb8v1_Set8PixelOpt2+0x46>
    case 3: dy--; break;
    4ca8:	dd 24       	eor	r13, r13
    4caa:	da 94       	dec	r13


void u8g_pb8v1_Set8PixelOpt2(u8g_pb_t *b, u8g_dev_arg_pixel_t *arg_pixel)
{
  register uint8_t pixel = arg_pixel->pixel;
  u8g_uint_t dx = 0;
    4cac:	00 e0       	ldi	r16, 0x00	; 0
  switch( arg_pixel->dir )
  {
    case 0: dx++; break;
    case 1: dy++; break;
    case 2: dx--; break;
    case 3: dy--; break;
    4cae:	02 c0       	rjmp	.+4      	; 0x4cb4 <u8g_pb8v1_Set8PixelOpt2+0x46>

void u8g_pb8v1_Set8PixelOpt2(u8g_pb_t *b, u8g_dev_arg_pixel_t *arg_pixel)
{
  register uint8_t pixel = arg_pixel->pixel;
  u8g_uint_t dx = 0;
  u8g_uint_t dy = 0;
    4cb0:	d1 2c       	mov	r13, r1


void u8g_pb8v1_Set8PixelOpt2(u8g_pb_t *b, u8g_dev_arg_pixel_t *arg_pixel)
{
  register uint8_t pixel = arg_pixel->pixel;
  u8g_uint_t dx = 0;
    4cb2:	00 e0       	ldi	r16, 0x00	; 0
    case 3: dy--; break;
  }
  
  do
  {
    if ( pixel & 128 )
    4cb4:	11 23       	and	r17, r17
    4cb6:	24 f4       	brge	.+8      	; 0x4cc0 <u8g_pb8v1_Set8PixelOpt2+0x52>
      u8g_pb8v1_SetPixel(b, arg_pixel);
    4cb8:	be 01       	movw	r22, r28
    4cba:	c7 01       	movw	r24, r14
    4cbc:	0e 94 22 26 	call	0x4c44	; 0x4c44 <u8g_pb8v1_SetPixel>
    arg_pixel->x += dx;
    4cc0:	98 81       	ld	r25, Y
    4cc2:	90 0f       	add	r25, r16
    4cc4:	98 83       	st	Y, r25
    arg_pixel->y += dy;
    4cc6:	99 81       	ldd	r25, Y+1	; 0x01
    4cc8:	9d 0d       	add	r25, r13
    4cca:	99 83       	std	Y+1, r25	; 0x01
    pixel <<= 1;
    4ccc:	11 0f       	add	r17, r17
  } while( pixel != 0  );
    4cce:	91 f7       	brne	.-28     	; 0x4cb4 <u8g_pb8v1_Set8PixelOpt2+0x46>
  
}
    4cd0:	df 91       	pop	r29
    4cd2:	cf 91       	pop	r28
    4cd4:	1f 91       	pop	r17
    4cd6:	0f 91       	pop	r16
    4cd8:	ff 90       	pop	r15
    4cda:	ef 90       	pop	r14
    4cdc:	df 90       	pop	r13
    4cde:	08 95       	ret

00004ce0 <u8g_dev_pb8v1_base_fn>:

uint8_t u8g_dev_pb8v1_base_fn(u8g_t *u8g, u8g_dev_t *dev, uint8_t msg, void *arg)
{
    4ce0:	0f 93       	push	r16
    4ce2:	1f 93       	push	r17
    4ce4:	cf 93       	push	r28
    4ce6:	df 93       	push	r29
  u8g_pb_t *pb = (u8g_pb_t *)(dev->dev_mem);
    4ce8:	fb 01       	movw	r30, r22
    4cea:	c2 81       	ldd	r28, Z+2	; 0x02
    4cec:	d3 81       	ldd	r29, Z+3	; 0x03
  switch(msg)
    4cee:	50 e0       	ldi	r21, 0x00	; 0
    4cf0:	fa 01       	movw	r30, r20
    4cf2:	74 97       	sbiw	r30, 0x14	; 20
    4cf4:	e4 33       	cpi	r30, 0x34	; 52
    4cf6:	f1 05       	cpc	r31, r1
    4cf8:	c8 f5       	brcc	.+114    	; 0x4d6c <u8g_dev_pb8v1_base_fn+0x8c>
    4cfa:	89 01       	movw	r16, r18
    4cfc:	e3 5a       	subi	r30, 0xA3	; 163
    4cfe:	ff 4f       	sbci	r31, 0xFF	; 255
    4d00:	0c 94 82 2a 	jmp	0x5504	; 0x5504 <__tablejump2__>
  {
    case U8G_DEV_MSG_SET_8PIXEL:
      if ( u8g_pb_Is8PixelVisible(pb, (u8g_dev_arg_pixel_t *)arg) )
    4d04:	b9 01       	movw	r22, r18
    4d06:	ce 01       	movw	r24, r28
    4d08:	0e 94 e9 25 	call	0x4bd2	; 0x4bd2 <u8g_pb_Is8PixelVisible>
    4d0c:	88 23       	and	r24, r24
    4d0e:	81 f1       	breq	.+96     	; 0x4d70 <u8g_dev_pb8v1_base_fn+0x90>
        u8g_pb8v1_Set8PixelOpt2(pb, (u8g_dev_arg_pixel_t *)arg);
    4d10:	b8 01       	movw	r22, r16
    4d12:	ce 01       	movw	r24, r28
    4d14:	0e 94 37 26 	call	0x4c6e	; 0x4c6e <u8g_pb8v1_Set8PixelOpt2>
    case U8G_DEV_MSG_SET_XY_CB:
      break;
    case U8G_DEV_MSG_GET_MODE:
      return U8G_MODE_BW;
  }
  return 1;
    4d18:	81 e0       	ldi	r24, 0x01	; 1
    4d1a:	2b c0       	rjmp	.+86     	; 0x4d72 <u8g_dev_pb8v1_base_fn+0x92>
    case U8G_DEV_MSG_SET_8PIXEL:
      if ( u8g_pb_Is8PixelVisible(pb, (u8g_dev_arg_pixel_t *)arg) )
        u8g_pb8v1_Set8PixelOpt2(pb, (u8g_dev_arg_pixel_t *)arg);
      break;
    case U8G_DEV_MSG_SET_PIXEL:
        u8g_pb8v1_SetPixel(pb, (u8g_dev_arg_pixel_t *)arg);
    4d1c:	b9 01       	movw	r22, r18
    4d1e:	ce 01       	movw	r24, r28
    4d20:	0e 94 22 26 	call	0x4c44	; 0x4c44 <u8g_pb8v1_SetPixel>
    case U8G_DEV_MSG_SET_XY_CB:
      break;
    case U8G_DEV_MSG_GET_MODE:
      return U8G_MODE_BW;
  }
  return 1;
    4d24:	81 e0       	ldi	r24, 0x01	; 1
      if ( u8g_pb_Is8PixelVisible(pb, (u8g_dev_arg_pixel_t *)arg) )
        u8g_pb8v1_Set8PixelOpt2(pb, (u8g_dev_arg_pixel_t *)arg);
      break;
    case U8G_DEV_MSG_SET_PIXEL:
        u8g_pb8v1_SetPixel(pb, (u8g_dev_arg_pixel_t *)arg);
      break;
    4d26:	25 c0       	rjmp	.+74     	; 0x4d72 <u8g_dev_pb8v1_base_fn+0x92>
    case U8G_DEV_MSG_INIT:
      break;
    case U8G_DEV_MSG_STOP:
      break;
    case U8G_DEV_MSG_PAGE_FIRST:
      u8g_pb_Clear(pb);
    4d28:	ce 01       	movw	r24, r28
    4d2a:	0e 94 b3 25 	call	0x4b66	; 0x4b66 <u8g_pb_Clear>
      u8g_page_First(&(pb->p));
    4d2e:	ce 01       	movw	r24, r28
    4d30:	0e 94 96 25 	call	0x4b2c	; 0x4b2c <u8g_page_First>
    case U8G_DEV_MSG_SET_XY_CB:
      break;
    case U8G_DEV_MSG_GET_MODE:
      return U8G_MODE_BW;
  }
  return 1;
    4d34:	81 e0       	ldi	r24, 0x01	; 1
    case U8G_DEV_MSG_STOP:
      break;
    case U8G_DEV_MSG_PAGE_FIRST:
      u8g_pb_Clear(pb);
      u8g_page_First(&(pb->p));
      break;
    4d36:	1d c0       	rjmp	.+58     	; 0x4d72 <u8g_dev_pb8v1_base_fn+0x92>
    case U8G_DEV_MSG_PAGE_NEXT:
      if ( u8g_page_Next(&(pb->p)) == 0 )
    4d38:	ce 01       	movw	r24, r28
    4d3a:	0e 94 9d 25 	call	0x4b3a	; 0x4b3a <u8g_page_Next>
    4d3e:	88 23       	and	r24, r24
    4d40:	c1 f0       	breq	.+48     	; 0x4d72 <u8g_dev_pb8v1_base_fn+0x92>
        return 0;
      u8g_pb_Clear(pb);
    4d42:	ce 01       	movw	r24, r28
    4d44:	0e 94 b3 25 	call	0x4b66	; 0x4b66 <u8g_pb_Clear>
    case U8G_DEV_MSG_SET_XY_CB:
      break;
    case U8G_DEV_MSG_GET_MODE:
      return U8G_MODE_BW;
  }
  return 1;
    4d48:	81 e0       	ldi	r24, 0x01	; 1
      break;
    case U8G_DEV_MSG_PAGE_NEXT:
      if ( u8g_page_Next(&(pb->p)) == 0 )
        return 0;
      u8g_pb_Clear(pb);
      break;
    4d4a:	13 c0       	rjmp	.+38     	; 0x4d72 <u8g_dev_pb8v1_base_fn+0x92>
#ifdef U8G_DEV_MSG_IS_BBX_INTERSECTION
    case U8G_DEV_MSG_IS_BBX_INTERSECTION:
      return u8g_pb_IsIntersection(pb, (u8g_dev_arg_bbx_t *)arg);
#endif
    case U8G_DEV_MSG_GET_PAGE_BOX:
      u8g_pb_GetPageBox(pb, (u8g_box_t *)arg);
    4d4c:	b9 01       	movw	r22, r18
    4d4e:	ce 01       	movw	r24, r28
    4d50:	0e 94 d9 25 	call	0x4bb2	; 0x4bb2 <u8g_pb_GetPageBox>
    case U8G_DEV_MSG_SET_XY_CB:
      break;
    case U8G_DEV_MSG_GET_MODE:
      return U8G_MODE_BW;
  }
  return 1;
    4d54:	81 e0       	ldi	r24, 0x01	; 1
    case U8G_DEV_MSG_IS_BBX_INTERSECTION:
      return u8g_pb_IsIntersection(pb, (u8g_dev_arg_bbx_t *)arg);
#endif
    case U8G_DEV_MSG_GET_PAGE_BOX:
      u8g_pb_GetPageBox(pb, (u8g_box_t *)arg);
      break;
    4d56:	0d c0       	rjmp	.+26     	; 0x4d72 <u8g_dev_pb8v1_base_fn+0x92>
    case U8G_DEV_MSG_GET_WIDTH:
      *((u8g_uint_t *)arg) = pb->width;
    4d58:	8d 81       	ldd	r24, Y+5	; 0x05
    4d5a:	f9 01       	movw	r30, r18
    4d5c:	80 83       	st	Z, r24
    case U8G_DEV_MSG_SET_XY_CB:
      break;
    case U8G_DEV_MSG_GET_MODE:
      return U8G_MODE_BW;
  }
  return 1;
    4d5e:	81 e0       	ldi	r24, 0x01	; 1
    case U8G_DEV_MSG_GET_PAGE_BOX:
      u8g_pb_GetPageBox(pb, (u8g_box_t *)arg);
      break;
    case U8G_DEV_MSG_GET_WIDTH:
      *((u8g_uint_t *)arg) = pb->width;
      break;
    4d60:	08 c0       	rjmp	.+16     	; 0x4d72 <u8g_dev_pb8v1_base_fn+0x92>
    case U8G_DEV_MSG_GET_HEIGHT:
      *((u8g_uint_t *)arg) = pb->p.total_height;
    4d62:	89 81       	ldd	r24, Y+1	; 0x01
    4d64:	f9 01       	movw	r30, r18
    4d66:	80 83       	st	Z, r24
    case U8G_DEV_MSG_SET_XY_CB:
      break;
    case U8G_DEV_MSG_GET_MODE:
      return U8G_MODE_BW;
  }
  return 1;
    4d68:	81 e0       	ldi	r24, 0x01	; 1
    case U8G_DEV_MSG_GET_WIDTH:
      *((u8g_uint_t *)arg) = pb->width;
      break;
    case U8G_DEV_MSG_GET_HEIGHT:
      *((u8g_uint_t *)arg) = pb->p.total_height;
      break;
    4d6a:	03 c0       	rjmp	.+6      	; 0x4d72 <u8g_dev_pb8v1_base_fn+0x92>
    case U8G_DEV_MSG_SET_COLOR_ENTRY:
      break;
    case U8G_DEV_MSG_SET_XY_CB:
      break;
    case U8G_DEV_MSG_GET_MODE:
      return U8G_MODE_BW;
    4d6c:	81 e0       	ldi	r24, 0x01	; 1
    4d6e:	01 c0       	rjmp	.+2      	; 0x4d72 <u8g_dev_pb8v1_base_fn+0x92>
  }
  return 1;
    4d70:	81 e0       	ldi	r24, 0x01	; 1
}
    4d72:	df 91       	pop	r29
    4d74:	cf 91       	pop	r28
    4d76:	1f 91       	pop	r17
    4d78:	0f 91       	pop	r16
    4d7a:	08 95       	ret

00004d7c <u8g_state_dummy_cb>:

#include <stddef.h>
#include "u8g.h"

void u8g_state_dummy_cb(uint8_t msg)
{
    4d7c:	08 95       	ret

00004d7e <__subsf3>:
    4d7e:	50 58       	subi	r21, 0x80	; 128

00004d80 <__addsf3>:
    4d80:	bb 27       	eor	r27, r27
    4d82:	aa 27       	eor	r26, r26
    4d84:	0e 94 d7 26 	call	0x4dae	; 0x4dae <__addsf3x>
    4d88:	0c 94 51 28 	jmp	0x50a2	; 0x50a2 <__fp_round>
    4d8c:	0e 94 43 28 	call	0x5086	; 0x5086 <__fp_pscA>
    4d90:	38 f0       	brcs	.+14     	; 0x4da0 <__addsf3+0x20>
    4d92:	0e 94 4a 28 	call	0x5094	; 0x5094 <__fp_pscB>
    4d96:	20 f0       	brcs	.+8      	; 0x4da0 <__addsf3+0x20>
    4d98:	39 f4       	brne	.+14     	; 0x4da8 <__addsf3+0x28>
    4d9a:	9f 3f       	cpi	r25, 0xFF	; 255
    4d9c:	19 f4       	brne	.+6      	; 0x4da4 <__addsf3+0x24>
    4d9e:	26 f4       	brtc	.+8      	; 0x4da8 <__addsf3+0x28>
    4da0:	0c 94 40 28 	jmp	0x5080	; 0x5080 <__fp_nan>
    4da4:	0e f4       	brtc	.+2      	; 0x4da8 <__addsf3+0x28>
    4da6:	e0 95       	com	r30
    4da8:	e7 fb       	bst	r30, 7
    4daa:	0c 94 3a 28 	jmp	0x5074	; 0x5074 <__fp_inf>

00004dae <__addsf3x>:
    4dae:	e9 2f       	mov	r30, r25
    4db0:	0e 94 62 28 	call	0x50c4	; 0x50c4 <__fp_split3>
    4db4:	58 f3       	brcs	.-42     	; 0x4d8c <__addsf3+0xc>
    4db6:	ba 17       	cp	r27, r26
    4db8:	62 07       	cpc	r22, r18
    4dba:	73 07       	cpc	r23, r19
    4dbc:	84 07       	cpc	r24, r20
    4dbe:	95 07       	cpc	r25, r21
    4dc0:	20 f0       	brcs	.+8      	; 0x4dca <__addsf3x+0x1c>
    4dc2:	79 f4       	brne	.+30     	; 0x4de2 <__addsf3x+0x34>
    4dc4:	a6 f5       	brtc	.+104    	; 0x4e2e <__addsf3x+0x80>
    4dc6:	0c 94 84 28 	jmp	0x5108	; 0x5108 <__fp_zero>
    4dca:	0e f4       	brtc	.+2      	; 0x4dce <__addsf3x+0x20>
    4dcc:	e0 95       	com	r30
    4dce:	0b 2e       	mov	r0, r27
    4dd0:	ba 2f       	mov	r27, r26
    4dd2:	a0 2d       	mov	r26, r0
    4dd4:	0b 01       	movw	r0, r22
    4dd6:	b9 01       	movw	r22, r18
    4dd8:	90 01       	movw	r18, r0
    4dda:	0c 01       	movw	r0, r24
    4ddc:	ca 01       	movw	r24, r20
    4dde:	a0 01       	movw	r20, r0
    4de0:	11 24       	eor	r1, r1
    4de2:	ff 27       	eor	r31, r31
    4de4:	59 1b       	sub	r21, r25
    4de6:	99 f0       	breq	.+38     	; 0x4e0e <__addsf3x+0x60>
    4de8:	59 3f       	cpi	r21, 0xF9	; 249
    4dea:	50 f4       	brcc	.+20     	; 0x4e00 <__addsf3x+0x52>
    4dec:	50 3e       	cpi	r21, 0xE0	; 224
    4dee:	68 f1       	brcs	.+90     	; 0x4e4a <__addsf3x+0x9c>
    4df0:	1a 16       	cp	r1, r26
    4df2:	f0 40       	sbci	r31, 0x00	; 0
    4df4:	a2 2f       	mov	r26, r18
    4df6:	23 2f       	mov	r18, r19
    4df8:	34 2f       	mov	r19, r20
    4dfa:	44 27       	eor	r20, r20
    4dfc:	58 5f       	subi	r21, 0xF8	; 248
    4dfe:	f3 cf       	rjmp	.-26     	; 0x4de6 <__addsf3x+0x38>
    4e00:	46 95       	lsr	r20
    4e02:	37 95       	ror	r19
    4e04:	27 95       	ror	r18
    4e06:	a7 95       	ror	r26
    4e08:	f0 40       	sbci	r31, 0x00	; 0
    4e0a:	53 95       	inc	r21
    4e0c:	c9 f7       	brne	.-14     	; 0x4e00 <__addsf3x+0x52>
    4e0e:	7e f4       	brtc	.+30     	; 0x4e2e <__addsf3x+0x80>
    4e10:	1f 16       	cp	r1, r31
    4e12:	ba 0b       	sbc	r27, r26
    4e14:	62 0b       	sbc	r22, r18
    4e16:	73 0b       	sbc	r23, r19
    4e18:	84 0b       	sbc	r24, r20
    4e1a:	ba f0       	brmi	.+46     	; 0x4e4a <__addsf3x+0x9c>
    4e1c:	91 50       	subi	r25, 0x01	; 1
    4e1e:	a1 f0       	breq	.+40     	; 0x4e48 <__addsf3x+0x9a>
    4e20:	ff 0f       	add	r31, r31
    4e22:	bb 1f       	adc	r27, r27
    4e24:	66 1f       	adc	r22, r22
    4e26:	77 1f       	adc	r23, r23
    4e28:	88 1f       	adc	r24, r24
    4e2a:	c2 f7       	brpl	.-16     	; 0x4e1c <__addsf3x+0x6e>
    4e2c:	0e c0       	rjmp	.+28     	; 0x4e4a <__addsf3x+0x9c>
    4e2e:	ba 0f       	add	r27, r26
    4e30:	62 1f       	adc	r22, r18
    4e32:	73 1f       	adc	r23, r19
    4e34:	84 1f       	adc	r24, r20
    4e36:	48 f4       	brcc	.+18     	; 0x4e4a <__addsf3x+0x9c>
    4e38:	87 95       	ror	r24
    4e3a:	77 95       	ror	r23
    4e3c:	67 95       	ror	r22
    4e3e:	b7 95       	ror	r27
    4e40:	f7 95       	ror	r31
    4e42:	9e 3f       	cpi	r25, 0xFE	; 254
    4e44:	08 f0       	brcs	.+2      	; 0x4e48 <__addsf3x+0x9a>
    4e46:	b0 cf       	rjmp	.-160    	; 0x4da8 <__addsf3+0x28>
    4e48:	93 95       	inc	r25
    4e4a:	88 0f       	add	r24, r24
    4e4c:	08 f0       	brcs	.+2      	; 0x4e50 <__addsf3x+0xa2>
    4e4e:	99 27       	eor	r25, r25
    4e50:	ee 0f       	add	r30, r30
    4e52:	97 95       	ror	r25
    4e54:	87 95       	ror	r24
    4e56:	08 95       	ret

00004e58 <__cmpsf2>:
    4e58:	0e 94 16 28 	call	0x502c	; 0x502c <__fp_cmp>
    4e5c:	08 f4       	brcc	.+2      	; 0x4e60 <__cmpsf2+0x8>
    4e5e:	81 e0       	ldi	r24, 0x01	; 1
    4e60:	08 95       	ret

00004e62 <__divsf3>:
    4e62:	0e 94 45 27 	call	0x4e8a	; 0x4e8a <__divsf3x>
    4e66:	0c 94 51 28 	jmp	0x50a2	; 0x50a2 <__fp_round>
    4e6a:	0e 94 4a 28 	call	0x5094	; 0x5094 <__fp_pscB>
    4e6e:	58 f0       	brcs	.+22     	; 0x4e86 <__divsf3+0x24>
    4e70:	0e 94 43 28 	call	0x5086	; 0x5086 <__fp_pscA>
    4e74:	40 f0       	brcs	.+16     	; 0x4e86 <__divsf3+0x24>
    4e76:	29 f4       	brne	.+10     	; 0x4e82 <__divsf3+0x20>
    4e78:	5f 3f       	cpi	r21, 0xFF	; 255
    4e7a:	29 f0       	breq	.+10     	; 0x4e86 <__divsf3+0x24>
    4e7c:	0c 94 3a 28 	jmp	0x5074	; 0x5074 <__fp_inf>
    4e80:	51 11       	cpse	r21, r1
    4e82:	0c 94 85 28 	jmp	0x510a	; 0x510a <__fp_szero>
    4e86:	0c 94 40 28 	jmp	0x5080	; 0x5080 <__fp_nan>

00004e8a <__divsf3x>:
    4e8a:	0e 94 62 28 	call	0x50c4	; 0x50c4 <__fp_split3>
    4e8e:	68 f3       	brcs	.-38     	; 0x4e6a <__divsf3+0x8>

00004e90 <__divsf3_pse>:
    4e90:	99 23       	and	r25, r25
    4e92:	b1 f3       	breq	.-20     	; 0x4e80 <__divsf3+0x1e>
    4e94:	55 23       	and	r21, r21
    4e96:	91 f3       	breq	.-28     	; 0x4e7c <__divsf3+0x1a>
    4e98:	95 1b       	sub	r25, r21
    4e9a:	55 0b       	sbc	r21, r21
    4e9c:	bb 27       	eor	r27, r27
    4e9e:	aa 27       	eor	r26, r26
    4ea0:	62 17       	cp	r22, r18
    4ea2:	73 07       	cpc	r23, r19
    4ea4:	84 07       	cpc	r24, r20
    4ea6:	38 f0       	brcs	.+14     	; 0x4eb6 <__divsf3_pse+0x26>
    4ea8:	9f 5f       	subi	r25, 0xFF	; 255
    4eaa:	5f 4f       	sbci	r21, 0xFF	; 255
    4eac:	22 0f       	add	r18, r18
    4eae:	33 1f       	adc	r19, r19
    4eb0:	44 1f       	adc	r20, r20
    4eb2:	aa 1f       	adc	r26, r26
    4eb4:	a9 f3       	breq	.-22     	; 0x4ea0 <__divsf3_pse+0x10>
    4eb6:	35 d0       	rcall	.+106    	; 0x4f22 <__divsf3_pse+0x92>
    4eb8:	0e 2e       	mov	r0, r30
    4eba:	3a f0       	brmi	.+14     	; 0x4eca <__divsf3_pse+0x3a>
    4ebc:	e0 e8       	ldi	r30, 0x80	; 128
    4ebe:	32 d0       	rcall	.+100    	; 0x4f24 <__divsf3_pse+0x94>
    4ec0:	91 50       	subi	r25, 0x01	; 1
    4ec2:	50 40       	sbci	r21, 0x00	; 0
    4ec4:	e6 95       	lsr	r30
    4ec6:	00 1c       	adc	r0, r0
    4ec8:	ca f7       	brpl	.-14     	; 0x4ebc <__divsf3_pse+0x2c>
    4eca:	2b d0       	rcall	.+86     	; 0x4f22 <__divsf3_pse+0x92>
    4ecc:	fe 2f       	mov	r31, r30
    4ece:	29 d0       	rcall	.+82     	; 0x4f22 <__divsf3_pse+0x92>
    4ed0:	66 0f       	add	r22, r22
    4ed2:	77 1f       	adc	r23, r23
    4ed4:	88 1f       	adc	r24, r24
    4ed6:	bb 1f       	adc	r27, r27
    4ed8:	26 17       	cp	r18, r22
    4eda:	37 07       	cpc	r19, r23
    4edc:	48 07       	cpc	r20, r24
    4ede:	ab 07       	cpc	r26, r27
    4ee0:	b0 e8       	ldi	r27, 0x80	; 128
    4ee2:	09 f0       	breq	.+2      	; 0x4ee6 <__divsf3_pse+0x56>
    4ee4:	bb 0b       	sbc	r27, r27
    4ee6:	80 2d       	mov	r24, r0
    4ee8:	bf 01       	movw	r22, r30
    4eea:	ff 27       	eor	r31, r31
    4eec:	93 58       	subi	r25, 0x83	; 131
    4eee:	5f 4f       	sbci	r21, 0xFF	; 255
    4ef0:	3a f0       	brmi	.+14     	; 0x4f00 <__divsf3_pse+0x70>
    4ef2:	9e 3f       	cpi	r25, 0xFE	; 254
    4ef4:	51 05       	cpc	r21, r1
    4ef6:	78 f0       	brcs	.+30     	; 0x4f16 <__divsf3_pse+0x86>
    4ef8:	0c 94 3a 28 	jmp	0x5074	; 0x5074 <__fp_inf>
    4efc:	0c 94 85 28 	jmp	0x510a	; 0x510a <__fp_szero>
    4f00:	5f 3f       	cpi	r21, 0xFF	; 255
    4f02:	e4 f3       	brlt	.-8      	; 0x4efc <__divsf3_pse+0x6c>
    4f04:	98 3e       	cpi	r25, 0xE8	; 232
    4f06:	d4 f3       	brlt	.-12     	; 0x4efc <__divsf3_pse+0x6c>
    4f08:	86 95       	lsr	r24
    4f0a:	77 95       	ror	r23
    4f0c:	67 95       	ror	r22
    4f0e:	b7 95       	ror	r27
    4f10:	f7 95       	ror	r31
    4f12:	9f 5f       	subi	r25, 0xFF	; 255
    4f14:	c9 f7       	brne	.-14     	; 0x4f08 <__divsf3_pse+0x78>
    4f16:	88 0f       	add	r24, r24
    4f18:	91 1d       	adc	r25, r1
    4f1a:	96 95       	lsr	r25
    4f1c:	87 95       	ror	r24
    4f1e:	97 f9       	bld	r25, 7
    4f20:	08 95       	ret
    4f22:	e1 e0       	ldi	r30, 0x01	; 1
    4f24:	66 0f       	add	r22, r22
    4f26:	77 1f       	adc	r23, r23
    4f28:	88 1f       	adc	r24, r24
    4f2a:	bb 1f       	adc	r27, r27
    4f2c:	62 17       	cp	r22, r18
    4f2e:	73 07       	cpc	r23, r19
    4f30:	84 07       	cpc	r24, r20
    4f32:	ba 07       	cpc	r27, r26
    4f34:	20 f0       	brcs	.+8      	; 0x4f3e <__divsf3_pse+0xae>
    4f36:	62 1b       	sub	r22, r18
    4f38:	73 0b       	sbc	r23, r19
    4f3a:	84 0b       	sbc	r24, r20
    4f3c:	ba 0b       	sbc	r27, r26
    4f3e:	ee 1f       	adc	r30, r30
    4f40:	88 f7       	brcc	.-30     	; 0x4f24 <__divsf3_pse+0x94>
    4f42:	e0 95       	com	r30
    4f44:	08 95       	ret

00004f46 <__fixsfsi>:
    4f46:	0e 94 aa 27 	call	0x4f54	; 0x4f54 <__fixunssfsi>
    4f4a:	68 94       	set
    4f4c:	b1 11       	cpse	r27, r1
    4f4e:	0c 94 85 28 	jmp	0x510a	; 0x510a <__fp_szero>
    4f52:	08 95       	ret

00004f54 <__fixunssfsi>:
    4f54:	0e 94 6a 28 	call	0x50d4	; 0x50d4 <__fp_splitA>
    4f58:	88 f0       	brcs	.+34     	; 0x4f7c <__fixunssfsi+0x28>
    4f5a:	9f 57       	subi	r25, 0x7F	; 127
    4f5c:	98 f0       	brcs	.+38     	; 0x4f84 <__fixunssfsi+0x30>
    4f5e:	b9 2f       	mov	r27, r25
    4f60:	99 27       	eor	r25, r25
    4f62:	b7 51       	subi	r27, 0x17	; 23
    4f64:	b0 f0       	brcs	.+44     	; 0x4f92 <__fixunssfsi+0x3e>
    4f66:	e1 f0       	breq	.+56     	; 0x4fa0 <__fixunssfsi+0x4c>
    4f68:	66 0f       	add	r22, r22
    4f6a:	77 1f       	adc	r23, r23
    4f6c:	88 1f       	adc	r24, r24
    4f6e:	99 1f       	adc	r25, r25
    4f70:	1a f0       	brmi	.+6      	; 0x4f78 <__fixunssfsi+0x24>
    4f72:	ba 95       	dec	r27
    4f74:	c9 f7       	brne	.-14     	; 0x4f68 <__fixunssfsi+0x14>
    4f76:	14 c0       	rjmp	.+40     	; 0x4fa0 <__fixunssfsi+0x4c>
    4f78:	b1 30       	cpi	r27, 0x01	; 1
    4f7a:	91 f0       	breq	.+36     	; 0x4fa0 <__fixunssfsi+0x4c>
    4f7c:	0e 94 84 28 	call	0x5108	; 0x5108 <__fp_zero>
    4f80:	b1 e0       	ldi	r27, 0x01	; 1
    4f82:	08 95       	ret
    4f84:	0c 94 84 28 	jmp	0x5108	; 0x5108 <__fp_zero>
    4f88:	67 2f       	mov	r22, r23
    4f8a:	78 2f       	mov	r23, r24
    4f8c:	88 27       	eor	r24, r24
    4f8e:	b8 5f       	subi	r27, 0xF8	; 248
    4f90:	39 f0       	breq	.+14     	; 0x4fa0 <__fixunssfsi+0x4c>
    4f92:	b9 3f       	cpi	r27, 0xF9	; 249
    4f94:	cc f3       	brlt	.-14     	; 0x4f88 <__fixunssfsi+0x34>
    4f96:	86 95       	lsr	r24
    4f98:	77 95       	ror	r23
    4f9a:	67 95       	ror	r22
    4f9c:	b3 95       	inc	r27
    4f9e:	d9 f7       	brne	.-10     	; 0x4f96 <__fixunssfsi+0x42>
    4fa0:	3e f4       	brtc	.+14     	; 0x4fb0 <__fixunssfsi+0x5c>
    4fa2:	90 95       	com	r25
    4fa4:	80 95       	com	r24
    4fa6:	70 95       	com	r23
    4fa8:	61 95       	neg	r22
    4faa:	7f 4f       	sbci	r23, 0xFF	; 255
    4fac:	8f 4f       	sbci	r24, 0xFF	; 255
    4fae:	9f 4f       	sbci	r25, 0xFF	; 255
    4fb0:	08 95       	ret

00004fb2 <__floatunsisf>:
    4fb2:	e8 94       	clt
    4fb4:	09 c0       	rjmp	.+18     	; 0x4fc8 <__floatsisf+0x12>

00004fb6 <__floatsisf>:
    4fb6:	97 fb       	bst	r25, 7
    4fb8:	3e f4       	brtc	.+14     	; 0x4fc8 <__floatsisf+0x12>
    4fba:	90 95       	com	r25
    4fbc:	80 95       	com	r24
    4fbe:	70 95       	com	r23
    4fc0:	61 95       	neg	r22
    4fc2:	7f 4f       	sbci	r23, 0xFF	; 255
    4fc4:	8f 4f       	sbci	r24, 0xFF	; 255
    4fc6:	9f 4f       	sbci	r25, 0xFF	; 255
    4fc8:	99 23       	and	r25, r25
    4fca:	a9 f0       	breq	.+42     	; 0x4ff6 <__floatsisf+0x40>
    4fcc:	f9 2f       	mov	r31, r25
    4fce:	96 e9       	ldi	r25, 0x96	; 150
    4fd0:	bb 27       	eor	r27, r27
    4fd2:	93 95       	inc	r25
    4fd4:	f6 95       	lsr	r31
    4fd6:	87 95       	ror	r24
    4fd8:	77 95       	ror	r23
    4fda:	67 95       	ror	r22
    4fdc:	b7 95       	ror	r27
    4fde:	f1 11       	cpse	r31, r1
    4fe0:	f8 cf       	rjmp	.-16     	; 0x4fd2 <__floatsisf+0x1c>
    4fe2:	fa f4       	brpl	.+62     	; 0x5022 <__floatsisf+0x6c>
    4fe4:	bb 0f       	add	r27, r27
    4fe6:	11 f4       	brne	.+4      	; 0x4fec <__floatsisf+0x36>
    4fe8:	60 ff       	sbrs	r22, 0
    4fea:	1b c0       	rjmp	.+54     	; 0x5022 <__floatsisf+0x6c>
    4fec:	6f 5f       	subi	r22, 0xFF	; 255
    4fee:	7f 4f       	sbci	r23, 0xFF	; 255
    4ff0:	8f 4f       	sbci	r24, 0xFF	; 255
    4ff2:	9f 4f       	sbci	r25, 0xFF	; 255
    4ff4:	16 c0       	rjmp	.+44     	; 0x5022 <__floatsisf+0x6c>
    4ff6:	88 23       	and	r24, r24
    4ff8:	11 f0       	breq	.+4      	; 0x4ffe <__floatsisf+0x48>
    4ffa:	96 e9       	ldi	r25, 0x96	; 150
    4ffc:	11 c0       	rjmp	.+34     	; 0x5020 <__floatsisf+0x6a>
    4ffe:	77 23       	and	r23, r23
    5000:	21 f0       	breq	.+8      	; 0x500a <__floatsisf+0x54>
    5002:	9e e8       	ldi	r25, 0x8E	; 142
    5004:	87 2f       	mov	r24, r23
    5006:	76 2f       	mov	r23, r22
    5008:	05 c0       	rjmp	.+10     	; 0x5014 <__floatsisf+0x5e>
    500a:	66 23       	and	r22, r22
    500c:	71 f0       	breq	.+28     	; 0x502a <__floatsisf+0x74>
    500e:	96 e8       	ldi	r25, 0x86	; 134
    5010:	86 2f       	mov	r24, r22
    5012:	70 e0       	ldi	r23, 0x00	; 0
    5014:	60 e0       	ldi	r22, 0x00	; 0
    5016:	2a f0       	brmi	.+10     	; 0x5022 <__floatsisf+0x6c>
    5018:	9a 95       	dec	r25
    501a:	66 0f       	add	r22, r22
    501c:	77 1f       	adc	r23, r23
    501e:	88 1f       	adc	r24, r24
    5020:	da f7       	brpl	.-10     	; 0x5018 <__floatsisf+0x62>
    5022:	88 0f       	add	r24, r24
    5024:	96 95       	lsr	r25
    5026:	87 95       	ror	r24
    5028:	97 f9       	bld	r25, 7
    502a:	08 95       	ret

0000502c <__fp_cmp>:
    502c:	99 0f       	add	r25, r25
    502e:	00 08       	sbc	r0, r0
    5030:	55 0f       	add	r21, r21
    5032:	aa 0b       	sbc	r26, r26
    5034:	e0 e8       	ldi	r30, 0x80	; 128
    5036:	fe ef       	ldi	r31, 0xFE	; 254
    5038:	16 16       	cp	r1, r22
    503a:	17 06       	cpc	r1, r23
    503c:	e8 07       	cpc	r30, r24
    503e:	f9 07       	cpc	r31, r25
    5040:	c0 f0       	brcs	.+48     	; 0x5072 <__fp_cmp+0x46>
    5042:	12 16       	cp	r1, r18
    5044:	13 06       	cpc	r1, r19
    5046:	e4 07       	cpc	r30, r20
    5048:	f5 07       	cpc	r31, r21
    504a:	98 f0       	brcs	.+38     	; 0x5072 <__fp_cmp+0x46>
    504c:	62 1b       	sub	r22, r18
    504e:	73 0b       	sbc	r23, r19
    5050:	84 0b       	sbc	r24, r20
    5052:	95 0b       	sbc	r25, r21
    5054:	39 f4       	brne	.+14     	; 0x5064 <__fp_cmp+0x38>
    5056:	0a 26       	eor	r0, r26
    5058:	61 f0       	breq	.+24     	; 0x5072 <__fp_cmp+0x46>
    505a:	23 2b       	or	r18, r19
    505c:	24 2b       	or	r18, r20
    505e:	25 2b       	or	r18, r21
    5060:	21 f4       	brne	.+8      	; 0x506a <__fp_cmp+0x3e>
    5062:	08 95       	ret
    5064:	0a 26       	eor	r0, r26
    5066:	09 f4       	brne	.+2      	; 0x506a <__fp_cmp+0x3e>
    5068:	a1 40       	sbci	r26, 0x01	; 1
    506a:	a6 95       	lsr	r26
    506c:	8f ef       	ldi	r24, 0xFF	; 255
    506e:	81 1d       	adc	r24, r1
    5070:	81 1d       	adc	r24, r1
    5072:	08 95       	ret

00005074 <__fp_inf>:
    5074:	97 f9       	bld	r25, 7
    5076:	9f 67       	ori	r25, 0x7F	; 127
    5078:	80 e8       	ldi	r24, 0x80	; 128
    507a:	70 e0       	ldi	r23, 0x00	; 0
    507c:	60 e0       	ldi	r22, 0x00	; 0
    507e:	08 95       	ret

00005080 <__fp_nan>:
    5080:	9f ef       	ldi	r25, 0xFF	; 255
    5082:	80 ec       	ldi	r24, 0xC0	; 192
    5084:	08 95       	ret

00005086 <__fp_pscA>:
    5086:	00 24       	eor	r0, r0
    5088:	0a 94       	dec	r0
    508a:	16 16       	cp	r1, r22
    508c:	17 06       	cpc	r1, r23
    508e:	18 06       	cpc	r1, r24
    5090:	09 06       	cpc	r0, r25
    5092:	08 95       	ret

00005094 <__fp_pscB>:
    5094:	00 24       	eor	r0, r0
    5096:	0a 94       	dec	r0
    5098:	12 16       	cp	r1, r18
    509a:	13 06       	cpc	r1, r19
    509c:	14 06       	cpc	r1, r20
    509e:	05 06       	cpc	r0, r21
    50a0:	08 95       	ret

000050a2 <__fp_round>:
    50a2:	09 2e       	mov	r0, r25
    50a4:	03 94       	inc	r0
    50a6:	00 0c       	add	r0, r0
    50a8:	11 f4       	brne	.+4      	; 0x50ae <__fp_round+0xc>
    50aa:	88 23       	and	r24, r24
    50ac:	52 f0       	brmi	.+20     	; 0x50c2 <__fp_round+0x20>
    50ae:	bb 0f       	add	r27, r27
    50b0:	40 f4       	brcc	.+16     	; 0x50c2 <__fp_round+0x20>
    50b2:	bf 2b       	or	r27, r31
    50b4:	11 f4       	brne	.+4      	; 0x50ba <__fp_round+0x18>
    50b6:	60 ff       	sbrs	r22, 0
    50b8:	04 c0       	rjmp	.+8      	; 0x50c2 <__fp_round+0x20>
    50ba:	6f 5f       	subi	r22, 0xFF	; 255
    50bc:	7f 4f       	sbci	r23, 0xFF	; 255
    50be:	8f 4f       	sbci	r24, 0xFF	; 255
    50c0:	9f 4f       	sbci	r25, 0xFF	; 255
    50c2:	08 95       	ret

000050c4 <__fp_split3>:
    50c4:	57 fd       	sbrc	r21, 7
    50c6:	90 58       	subi	r25, 0x80	; 128
    50c8:	44 0f       	add	r20, r20
    50ca:	55 1f       	adc	r21, r21
    50cc:	59 f0       	breq	.+22     	; 0x50e4 <__fp_splitA+0x10>
    50ce:	5f 3f       	cpi	r21, 0xFF	; 255
    50d0:	71 f0       	breq	.+28     	; 0x50ee <__fp_splitA+0x1a>
    50d2:	47 95       	ror	r20

000050d4 <__fp_splitA>:
    50d4:	88 0f       	add	r24, r24
    50d6:	97 fb       	bst	r25, 7
    50d8:	99 1f       	adc	r25, r25
    50da:	61 f0       	breq	.+24     	; 0x50f4 <__fp_splitA+0x20>
    50dc:	9f 3f       	cpi	r25, 0xFF	; 255
    50de:	79 f0       	breq	.+30     	; 0x50fe <__fp_splitA+0x2a>
    50e0:	87 95       	ror	r24
    50e2:	08 95       	ret
    50e4:	12 16       	cp	r1, r18
    50e6:	13 06       	cpc	r1, r19
    50e8:	14 06       	cpc	r1, r20
    50ea:	55 1f       	adc	r21, r21
    50ec:	f2 cf       	rjmp	.-28     	; 0x50d2 <__fp_split3+0xe>
    50ee:	46 95       	lsr	r20
    50f0:	f1 df       	rcall	.-30     	; 0x50d4 <__fp_splitA>
    50f2:	08 c0       	rjmp	.+16     	; 0x5104 <__fp_splitA+0x30>
    50f4:	16 16       	cp	r1, r22
    50f6:	17 06       	cpc	r1, r23
    50f8:	18 06       	cpc	r1, r24
    50fa:	99 1f       	adc	r25, r25
    50fc:	f1 cf       	rjmp	.-30     	; 0x50e0 <__fp_splitA+0xc>
    50fe:	86 95       	lsr	r24
    5100:	71 05       	cpc	r23, r1
    5102:	61 05       	cpc	r22, r1
    5104:	08 94       	sec
    5106:	08 95       	ret

00005108 <__fp_zero>:
    5108:	e8 94       	clt

0000510a <__fp_szero>:
    510a:	bb 27       	eor	r27, r27
    510c:	66 27       	eor	r22, r22
    510e:	77 27       	eor	r23, r23
    5110:	cb 01       	movw	r24, r22
    5112:	97 f9       	bld	r25, 7
    5114:	08 95       	ret

00005116 <__gesf2>:
    5116:	0e 94 16 28 	call	0x502c	; 0x502c <__fp_cmp>
    511a:	08 f4       	brcc	.+2      	; 0x511e <__gesf2+0x8>
    511c:	8f ef       	ldi	r24, 0xFF	; 255
    511e:	08 95       	ret

00005120 <__mulsf3>:
    5120:	0e 94 a3 28 	call	0x5146	; 0x5146 <__mulsf3x>
    5124:	0c 94 51 28 	jmp	0x50a2	; 0x50a2 <__fp_round>
    5128:	0e 94 43 28 	call	0x5086	; 0x5086 <__fp_pscA>
    512c:	38 f0       	brcs	.+14     	; 0x513c <__mulsf3+0x1c>
    512e:	0e 94 4a 28 	call	0x5094	; 0x5094 <__fp_pscB>
    5132:	20 f0       	brcs	.+8      	; 0x513c <__mulsf3+0x1c>
    5134:	95 23       	and	r25, r21
    5136:	11 f0       	breq	.+4      	; 0x513c <__mulsf3+0x1c>
    5138:	0c 94 3a 28 	jmp	0x5074	; 0x5074 <__fp_inf>
    513c:	0c 94 40 28 	jmp	0x5080	; 0x5080 <__fp_nan>
    5140:	11 24       	eor	r1, r1
    5142:	0c 94 85 28 	jmp	0x510a	; 0x510a <__fp_szero>

00005146 <__mulsf3x>:
    5146:	0e 94 62 28 	call	0x50c4	; 0x50c4 <__fp_split3>
    514a:	70 f3       	brcs	.-36     	; 0x5128 <__mulsf3+0x8>

0000514c <__mulsf3_pse>:
    514c:	95 9f       	mul	r25, r21
    514e:	c1 f3       	breq	.-16     	; 0x5140 <__mulsf3+0x20>
    5150:	95 0f       	add	r25, r21
    5152:	50 e0       	ldi	r21, 0x00	; 0
    5154:	55 1f       	adc	r21, r21
    5156:	62 9f       	mul	r22, r18
    5158:	f0 01       	movw	r30, r0
    515a:	72 9f       	mul	r23, r18
    515c:	bb 27       	eor	r27, r27
    515e:	f0 0d       	add	r31, r0
    5160:	b1 1d       	adc	r27, r1
    5162:	63 9f       	mul	r22, r19
    5164:	aa 27       	eor	r26, r26
    5166:	f0 0d       	add	r31, r0
    5168:	b1 1d       	adc	r27, r1
    516a:	aa 1f       	adc	r26, r26
    516c:	64 9f       	mul	r22, r20
    516e:	66 27       	eor	r22, r22
    5170:	b0 0d       	add	r27, r0
    5172:	a1 1d       	adc	r26, r1
    5174:	66 1f       	adc	r22, r22
    5176:	82 9f       	mul	r24, r18
    5178:	22 27       	eor	r18, r18
    517a:	b0 0d       	add	r27, r0
    517c:	a1 1d       	adc	r26, r1
    517e:	62 1f       	adc	r22, r18
    5180:	73 9f       	mul	r23, r19
    5182:	b0 0d       	add	r27, r0
    5184:	a1 1d       	adc	r26, r1
    5186:	62 1f       	adc	r22, r18
    5188:	83 9f       	mul	r24, r19
    518a:	a0 0d       	add	r26, r0
    518c:	61 1d       	adc	r22, r1
    518e:	22 1f       	adc	r18, r18
    5190:	74 9f       	mul	r23, r20
    5192:	33 27       	eor	r19, r19
    5194:	a0 0d       	add	r26, r0
    5196:	61 1d       	adc	r22, r1
    5198:	23 1f       	adc	r18, r19
    519a:	84 9f       	mul	r24, r20
    519c:	60 0d       	add	r22, r0
    519e:	21 1d       	adc	r18, r1
    51a0:	82 2f       	mov	r24, r18
    51a2:	76 2f       	mov	r23, r22
    51a4:	6a 2f       	mov	r22, r26
    51a6:	11 24       	eor	r1, r1
    51a8:	9f 57       	subi	r25, 0x7F	; 127
    51aa:	50 40       	sbci	r21, 0x00	; 0
    51ac:	9a f0       	brmi	.+38     	; 0x51d4 <__mulsf3_pse+0x88>
    51ae:	f1 f0       	breq	.+60     	; 0x51ec <__mulsf3_pse+0xa0>
    51b0:	88 23       	and	r24, r24
    51b2:	4a f0       	brmi	.+18     	; 0x51c6 <__mulsf3_pse+0x7a>
    51b4:	ee 0f       	add	r30, r30
    51b6:	ff 1f       	adc	r31, r31
    51b8:	bb 1f       	adc	r27, r27
    51ba:	66 1f       	adc	r22, r22
    51bc:	77 1f       	adc	r23, r23
    51be:	88 1f       	adc	r24, r24
    51c0:	91 50       	subi	r25, 0x01	; 1
    51c2:	50 40       	sbci	r21, 0x00	; 0
    51c4:	a9 f7       	brne	.-22     	; 0x51b0 <__mulsf3_pse+0x64>
    51c6:	9e 3f       	cpi	r25, 0xFE	; 254
    51c8:	51 05       	cpc	r21, r1
    51ca:	80 f0       	brcs	.+32     	; 0x51ec <__mulsf3_pse+0xa0>
    51cc:	0c 94 3a 28 	jmp	0x5074	; 0x5074 <__fp_inf>
    51d0:	0c 94 85 28 	jmp	0x510a	; 0x510a <__fp_szero>
    51d4:	5f 3f       	cpi	r21, 0xFF	; 255
    51d6:	e4 f3       	brlt	.-8      	; 0x51d0 <__mulsf3_pse+0x84>
    51d8:	98 3e       	cpi	r25, 0xE8	; 232
    51da:	d4 f3       	brlt	.-12     	; 0x51d0 <__mulsf3_pse+0x84>
    51dc:	86 95       	lsr	r24
    51de:	77 95       	ror	r23
    51e0:	67 95       	ror	r22
    51e2:	b7 95       	ror	r27
    51e4:	f7 95       	ror	r31
    51e6:	e7 95       	ror	r30
    51e8:	9f 5f       	subi	r25, 0xFF	; 255
    51ea:	c1 f7       	brne	.-16     	; 0x51dc <__mulsf3_pse+0x90>
    51ec:	fe 2b       	or	r31, r30
    51ee:	88 0f       	add	r24, r24
    51f0:	91 1d       	adc	r25, r1
    51f2:	96 95       	lsr	r25
    51f4:	87 95       	ror	r24
    51f6:	97 f9       	bld	r25, 7
    51f8:	08 95       	ret

000051fa <pow>:
    51fa:	fa 01       	movw	r30, r20
    51fc:	ee 0f       	add	r30, r30
    51fe:	ff 1f       	adc	r31, r31
    5200:	30 96       	adiw	r30, 0x00	; 0
    5202:	21 05       	cpc	r18, r1
    5204:	31 05       	cpc	r19, r1
    5206:	a1 f1       	breq	.+104    	; 0x5270 <pow+0x76>
    5208:	61 15       	cp	r22, r1
    520a:	71 05       	cpc	r23, r1
    520c:	61 f4       	brne	.+24     	; 0x5226 <pow+0x2c>
    520e:	80 38       	cpi	r24, 0x80	; 128
    5210:	bf e3       	ldi	r27, 0x3F	; 63
    5212:	9b 07       	cpc	r25, r27
    5214:	49 f1       	breq	.+82     	; 0x5268 <pow+0x6e>
    5216:	68 94       	set
    5218:	90 38       	cpi	r25, 0x80	; 128
    521a:	81 05       	cpc	r24, r1
    521c:	61 f0       	breq	.+24     	; 0x5236 <pow+0x3c>
    521e:	80 38       	cpi	r24, 0x80	; 128
    5220:	bf ef       	ldi	r27, 0xFF	; 255
    5222:	9b 07       	cpc	r25, r27
    5224:	41 f0       	breq	.+16     	; 0x5236 <pow+0x3c>
    5226:	99 23       	and	r25, r25
    5228:	4a f5       	brpl	.+82     	; 0x527c <pow+0x82>
    522a:	ff 3f       	cpi	r31, 0xFF	; 255
    522c:	e1 05       	cpc	r30, r1
    522e:	31 05       	cpc	r19, r1
    5230:	21 05       	cpc	r18, r1
    5232:	19 f1       	breq	.+70     	; 0x527a <pow+0x80>
    5234:	e8 94       	clt
    5236:	08 94       	sec
    5238:	e7 95       	ror	r30
    523a:	d9 01       	movw	r26, r18
    523c:	aa 23       	and	r26, r26
    523e:	29 f4       	brne	.+10     	; 0x524a <pow+0x50>
    5240:	ab 2f       	mov	r26, r27
    5242:	be 2f       	mov	r27, r30
    5244:	f8 5f       	subi	r31, 0xF8	; 248
    5246:	d0 f3       	brcs	.-12     	; 0x523c <pow+0x42>
    5248:	10 c0       	rjmp	.+32     	; 0x526a <pow+0x70>
    524a:	ff 5f       	subi	r31, 0xFF	; 255
    524c:	70 f4       	brcc	.+28     	; 0x526a <pow+0x70>
    524e:	a6 95       	lsr	r26
    5250:	e0 f7       	brcc	.-8      	; 0x524a <pow+0x50>
    5252:	f7 39       	cpi	r31, 0x97	; 151
    5254:	50 f0       	brcs	.+20     	; 0x526a <pow+0x70>
    5256:	19 f0       	breq	.+6      	; 0x525e <pow+0x64>
    5258:	ff 3a       	cpi	r31, 0xAF	; 175
    525a:	38 f4       	brcc	.+14     	; 0x526a <pow+0x70>
    525c:	9f 77       	andi	r25, 0x7F	; 127
    525e:	9f 93       	push	r25
    5260:	0d d0       	rcall	.+26     	; 0x527c <pow+0x82>
    5262:	0f 90       	pop	r0
    5264:	07 fc       	sbrc	r0, 7
    5266:	90 58       	subi	r25, 0x80	; 128
    5268:	08 95       	ret
    526a:	46 f0       	brts	.+16     	; 0x527c <pow+0x82>
    526c:	0c 94 40 28 	jmp	0x5080	; 0x5080 <__fp_nan>
    5270:	60 e0       	ldi	r22, 0x00	; 0
    5272:	70 e0       	ldi	r23, 0x00	; 0
    5274:	80 e8       	ldi	r24, 0x80	; 128
    5276:	9f e3       	ldi	r25, 0x3F	; 63
    5278:	08 95       	ret
    527a:	4f e7       	ldi	r20, 0x7F	; 127
    527c:	9f 77       	andi	r25, 0x7F	; 127
    527e:	5f 93       	push	r21
    5280:	4f 93       	push	r20
    5282:	3f 93       	push	r19
    5284:	2f 93       	push	r18
    5286:	0e 94 f8 29 	call	0x53f0	; 0x53f0 <log>
    528a:	2f 91       	pop	r18
    528c:	3f 91       	pop	r19
    528e:	4f 91       	pop	r20
    5290:	5f 91       	pop	r21
    5292:	0e 94 90 28 	call	0x5120	; 0x5120 <__mulsf3>
    5296:	0c 94 55 29 	jmp	0x52aa	; 0x52aa <exp>
    529a:	29 f4       	brne	.+10     	; 0x52a6 <pow+0xac>
    529c:	16 f0       	brts	.+4      	; 0x52a2 <pow+0xa8>
    529e:	0c 94 3a 28 	jmp	0x5074	; 0x5074 <__fp_inf>
    52a2:	0c 94 84 28 	jmp	0x5108	; 0x5108 <__fp_zero>
    52a6:	0c 94 40 28 	jmp	0x5080	; 0x5080 <__fp_nan>

000052aa <exp>:
    52aa:	0e 94 6a 28 	call	0x50d4	; 0x50d4 <__fp_splitA>
    52ae:	a8 f3       	brcs	.-22     	; 0x529a <pow+0xa0>
    52b0:	96 38       	cpi	r25, 0x86	; 134
    52b2:	a0 f7       	brcc	.-24     	; 0x529c <pow+0xa2>
    52b4:	07 f8       	bld	r0, 7
    52b6:	0f 92       	push	r0
    52b8:	e8 94       	clt
    52ba:	2b e3       	ldi	r18, 0x3B	; 59
    52bc:	3a ea       	ldi	r19, 0xAA	; 170
    52be:	48 eb       	ldi	r20, 0xB8	; 184
    52c0:	5f e7       	ldi	r21, 0x7F	; 127
    52c2:	0e 94 a6 28 	call	0x514c	; 0x514c <__mulsf3_pse>
    52c6:	0f 92       	push	r0
    52c8:	0f 92       	push	r0
    52ca:	0f 92       	push	r0
    52cc:	4d b7       	in	r20, 0x3d	; 61
    52ce:	5e b7       	in	r21, 0x3e	; 62
    52d0:	0f 92       	push	r0
    52d2:	0e 94 40 2a 	call	0x5480	; 0x5480 <modf>
    52d6:	e2 e2       	ldi	r30, 0x22	; 34
    52d8:	f1 e0       	ldi	r31, 0x01	; 1
    52da:	0e 94 87 29 	call	0x530e	; 0x530e <__fp_powser>
    52de:	4f 91       	pop	r20
    52e0:	5f 91       	pop	r21
    52e2:	ef 91       	pop	r30
    52e4:	ff 91       	pop	r31
    52e6:	e5 95       	asr	r30
    52e8:	ee 1f       	adc	r30, r30
    52ea:	ff 1f       	adc	r31, r31
    52ec:	49 f0       	breq	.+18     	; 0x5300 <exp+0x56>
    52ee:	fe 57       	subi	r31, 0x7E	; 126
    52f0:	e0 68       	ori	r30, 0x80	; 128
    52f2:	44 27       	eor	r20, r20
    52f4:	ee 0f       	add	r30, r30
    52f6:	44 1f       	adc	r20, r20
    52f8:	fa 95       	dec	r31
    52fa:	e1 f7       	brne	.-8      	; 0x52f4 <exp+0x4a>
    52fc:	41 95       	neg	r20
    52fe:	55 0b       	sbc	r21, r21
    5300:	0e 94 ba 29 	call	0x5374	; 0x5374 <ldexp>
    5304:	0f 90       	pop	r0
    5306:	07 fe       	sbrs	r0, 7
    5308:	0c 94 ae 29 	jmp	0x535c	; 0x535c <inverse>
    530c:	08 95       	ret

0000530e <__fp_powser>:
    530e:	df 93       	push	r29
    5310:	cf 93       	push	r28
    5312:	1f 93       	push	r17
    5314:	0f 93       	push	r16
    5316:	ff 92       	push	r15
    5318:	ef 92       	push	r14
    531a:	df 92       	push	r13
    531c:	7b 01       	movw	r14, r22
    531e:	8c 01       	movw	r16, r24
    5320:	68 94       	set
    5322:	06 c0       	rjmp	.+12     	; 0x5330 <__fp_powser+0x22>
    5324:	da 2e       	mov	r13, r26
    5326:	ef 01       	movw	r28, r30
    5328:	0e 94 a3 28 	call	0x5146	; 0x5146 <__mulsf3x>
    532c:	fe 01       	movw	r30, r28
    532e:	e8 94       	clt
    5330:	a5 91       	lpm	r26, Z+
    5332:	25 91       	lpm	r18, Z+
    5334:	35 91       	lpm	r19, Z+
    5336:	45 91       	lpm	r20, Z+
    5338:	55 91       	lpm	r21, Z+
    533a:	a6 f3       	brts	.-24     	; 0x5324 <__fp_powser+0x16>
    533c:	ef 01       	movw	r28, r30
    533e:	0e 94 d7 26 	call	0x4dae	; 0x4dae <__addsf3x>
    5342:	fe 01       	movw	r30, r28
    5344:	97 01       	movw	r18, r14
    5346:	a8 01       	movw	r20, r16
    5348:	da 94       	dec	r13
    534a:	69 f7       	brne	.-38     	; 0x5326 <__fp_powser+0x18>
    534c:	df 90       	pop	r13
    534e:	ef 90       	pop	r14
    5350:	ff 90       	pop	r15
    5352:	0f 91       	pop	r16
    5354:	1f 91       	pop	r17
    5356:	cf 91       	pop	r28
    5358:	df 91       	pop	r29
    535a:	08 95       	ret

0000535c <inverse>:
    535c:	9b 01       	movw	r18, r22
    535e:	ac 01       	movw	r20, r24
    5360:	60 e0       	ldi	r22, 0x00	; 0
    5362:	70 e0       	ldi	r23, 0x00	; 0
    5364:	80 e8       	ldi	r24, 0x80	; 128
    5366:	9f e3       	ldi	r25, 0x3F	; 63
    5368:	0c 94 31 27 	jmp	0x4e62	; 0x4e62 <__divsf3>
    536c:	0c 94 3a 28 	jmp	0x5074	; 0x5074 <__fp_inf>
    5370:	0c 94 74 2a 	jmp	0x54e8	; 0x54e8 <__fp_mpack>

00005374 <ldexp>:
    5374:	0e 94 6a 28 	call	0x50d4	; 0x50d4 <__fp_splitA>
    5378:	d8 f3       	brcs	.-10     	; 0x5370 <inverse+0x14>
    537a:	99 23       	and	r25, r25
    537c:	c9 f3       	breq	.-14     	; 0x5370 <inverse+0x14>
    537e:	94 0f       	add	r25, r20
    5380:	51 1d       	adc	r21, r1
    5382:	a3 f3       	brvs	.-24     	; 0x536c <inverse+0x10>
    5384:	91 50       	subi	r25, 0x01	; 1
    5386:	50 40       	sbci	r21, 0x00	; 0
    5388:	94 f0       	brlt	.+36     	; 0x53ae <ldexp+0x3a>
    538a:	59 f0       	breq	.+22     	; 0x53a2 <ldexp+0x2e>
    538c:	88 23       	and	r24, r24
    538e:	32 f0       	brmi	.+12     	; 0x539c <ldexp+0x28>
    5390:	66 0f       	add	r22, r22
    5392:	77 1f       	adc	r23, r23
    5394:	88 1f       	adc	r24, r24
    5396:	91 50       	subi	r25, 0x01	; 1
    5398:	50 40       	sbci	r21, 0x00	; 0
    539a:	c1 f7       	brne	.-16     	; 0x538c <ldexp+0x18>
    539c:	9e 3f       	cpi	r25, 0xFE	; 254
    539e:	51 05       	cpc	r21, r1
    53a0:	2c f7       	brge	.-54     	; 0x536c <inverse+0x10>
    53a2:	88 0f       	add	r24, r24
    53a4:	91 1d       	adc	r25, r1
    53a6:	96 95       	lsr	r25
    53a8:	87 95       	ror	r24
    53aa:	97 f9       	bld	r25, 7
    53ac:	08 95       	ret
    53ae:	5f 3f       	cpi	r21, 0xFF	; 255
    53b0:	ac f0       	brlt	.+42     	; 0x53dc <ldexp+0x68>
    53b2:	98 3e       	cpi	r25, 0xE8	; 232
    53b4:	9c f0       	brlt	.+38     	; 0x53dc <ldexp+0x68>
    53b6:	bb 27       	eor	r27, r27
    53b8:	86 95       	lsr	r24
    53ba:	77 95       	ror	r23
    53bc:	67 95       	ror	r22
    53be:	b7 95       	ror	r27
    53c0:	08 f4       	brcc	.+2      	; 0x53c4 <ldexp+0x50>
    53c2:	b1 60       	ori	r27, 0x01	; 1
    53c4:	93 95       	inc	r25
    53c6:	c1 f7       	brne	.-16     	; 0x53b8 <ldexp+0x44>
    53c8:	bb 0f       	add	r27, r27
    53ca:	58 f7       	brcc	.-42     	; 0x53a2 <ldexp+0x2e>
    53cc:	11 f4       	brne	.+4      	; 0x53d2 <ldexp+0x5e>
    53ce:	60 ff       	sbrs	r22, 0
    53d0:	e8 cf       	rjmp	.-48     	; 0x53a2 <ldexp+0x2e>
    53d2:	6f 5f       	subi	r22, 0xFF	; 255
    53d4:	7f 4f       	sbci	r23, 0xFF	; 255
    53d6:	8f 4f       	sbci	r24, 0xFF	; 255
    53d8:	9f 4f       	sbci	r25, 0xFF	; 255
    53da:	e3 cf       	rjmp	.-58     	; 0x53a2 <ldexp+0x2e>
    53dc:	0c 94 85 28 	jmp	0x510a	; 0x510a <__fp_szero>
    53e0:	16 f0       	brts	.+4      	; 0x53e6 <ldexp+0x72>
    53e2:	0c 94 74 2a 	jmp	0x54e8	; 0x54e8 <__fp_mpack>
    53e6:	0c 94 40 28 	jmp	0x5080	; 0x5080 <__fp_nan>
    53ea:	68 94       	set
    53ec:	0c 94 3a 28 	jmp	0x5074	; 0x5074 <__fp_inf>

000053f0 <log>:
    53f0:	0e 94 6a 28 	call	0x50d4	; 0x50d4 <__fp_splitA>
    53f4:	a8 f3       	brcs	.-22     	; 0x53e0 <ldexp+0x6c>
    53f6:	99 23       	and	r25, r25
    53f8:	c1 f3       	breq	.-16     	; 0x53ea <ldexp+0x76>
    53fa:	ae f3       	brts	.-22     	; 0x53e6 <ldexp+0x72>
    53fc:	df 93       	push	r29
    53fe:	cf 93       	push	r28
    5400:	1f 93       	push	r17
    5402:	0f 93       	push	r16
    5404:	ff 92       	push	r15
    5406:	c9 2f       	mov	r28, r25
    5408:	dd 27       	eor	r29, r29
    540a:	88 23       	and	r24, r24
    540c:	2a f0       	brmi	.+10     	; 0x5418 <log+0x28>
    540e:	21 97       	sbiw	r28, 0x01	; 1
    5410:	66 0f       	add	r22, r22
    5412:	77 1f       	adc	r23, r23
    5414:	88 1f       	adc	r24, r24
    5416:	da f7       	brpl	.-10     	; 0x540e <log+0x1e>
    5418:	20 e0       	ldi	r18, 0x00	; 0
    541a:	30 e0       	ldi	r19, 0x00	; 0
    541c:	40 e8       	ldi	r20, 0x80	; 128
    541e:	5f eb       	ldi	r21, 0xBF	; 191
    5420:	9f e3       	ldi	r25, 0x3F	; 63
    5422:	88 39       	cpi	r24, 0x98	; 152
    5424:	20 f0       	brcs	.+8      	; 0x542e <log+0x3e>
    5426:	80 3e       	cpi	r24, 0xE0	; 224
    5428:	38 f0       	brcs	.+14     	; 0x5438 <log+0x48>
    542a:	21 96       	adiw	r28, 0x01	; 1
    542c:	8f 77       	andi	r24, 0x7F	; 127
    542e:	0e 94 c0 26 	call	0x4d80	; 0x4d80 <__addsf3>
    5432:	ea e4       	ldi	r30, 0x4A	; 74
    5434:	f1 e0       	ldi	r31, 0x01	; 1
    5436:	04 c0       	rjmp	.+8      	; 0x5440 <log+0x50>
    5438:	0e 94 c0 26 	call	0x4d80	; 0x4d80 <__addsf3>
    543c:	e7 e7       	ldi	r30, 0x77	; 119
    543e:	f1 e0       	ldi	r31, 0x01	; 1
    5440:	0e 94 87 29 	call	0x530e	; 0x530e <__fp_powser>
    5444:	8b 01       	movw	r16, r22
    5446:	be 01       	movw	r22, r28
    5448:	ec 01       	movw	r28, r24
    544a:	fb 2e       	mov	r15, r27
    544c:	6f 57       	subi	r22, 0x7F	; 127
    544e:	71 09       	sbc	r23, r1
    5450:	75 95       	asr	r23
    5452:	77 1f       	adc	r23, r23
    5454:	88 0b       	sbc	r24, r24
    5456:	99 0b       	sbc	r25, r25
    5458:	0e 94 db 27 	call	0x4fb6	; 0x4fb6 <__floatsisf>
    545c:	28 e1       	ldi	r18, 0x18	; 24
    545e:	32 e7       	ldi	r19, 0x72	; 114
    5460:	41 e3       	ldi	r20, 0x31	; 49
    5462:	5f e3       	ldi	r21, 0x3F	; 63
    5464:	0e 94 a3 28 	call	0x5146	; 0x5146 <__mulsf3x>
    5468:	af 2d       	mov	r26, r15
    546a:	98 01       	movw	r18, r16
    546c:	ae 01       	movw	r20, r28
    546e:	ff 90       	pop	r15
    5470:	0f 91       	pop	r16
    5472:	1f 91       	pop	r17
    5474:	cf 91       	pop	r28
    5476:	df 91       	pop	r29
    5478:	0e 94 d7 26 	call	0x4dae	; 0x4dae <__addsf3x>
    547c:	0c 94 51 28 	jmp	0x50a2	; 0x50a2 <__fp_round>

00005480 <modf>:
    5480:	fa 01       	movw	r30, r20
    5482:	dc 01       	movw	r26, r24
    5484:	aa 0f       	add	r26, r26
    5486:	bb 1f       	adc	r27, r27
    5488:	9b 01       	movw	r18, r22
    548a:	ac 01       	movw	r20, r24
    548c:	bf 57       	subi	r27, 0x7F	; 127
    548e:	28 f4       	brcc	.+10     	; 0x549a <modf+0x1a>
    5490:	22 27       	eor	r18, r18
    5492:	33 27       	eor	r19, r19
    5494:	44 27       	eor	r20, r20
    5496:	50 78       	andi	r21, 0x80	; 128
    5498:	20 c0       	rjmp	.+64     	; 0x54da <modf+0x5a>
    549a:	b7 51       	subi	r27, 0x17	; 23
    549c:	90 f4       	brcc	.+36     	; 0x54c2 <modf+0x42>
    549e:	ab 2f       	mov	r26, r27
    54a0:	00 24       	eor	r0, r0
    54a2:	46 95       	lsr	r20
    54a4:	37 95       	ror	r19
    54a6:	27 95       	ror	r18
    54a8:	01 1c       	adc	r0, r1
    54aa:	a3 95       	inc	r26
    54ac:	d2 f3       	brmi	.-12     	; 0x54a2 <modf+0x22>
    54ae:	00 20       	and	r0, r0
    54b0:	71 f0       	breq	.+28     	; 0x54ce <modf+0x4e>
    54b2:	22 0f       	add	r18, r18
    54b4:	33 1f       	adc	r19, r19
    54b6:	44 1f       	adc	r20, r20
    54b8:	b3 95       	inc	r27
    54ba:	da f3       	brmi	.-10     	; 0x54b2 <modf+0x32>
    54bc:	0e d0       	rcall	.+28     	; 0x54da <modf+0x5a>
    54be:	0c 94 bf 26 	jmp	0x4d7e	; 0x4d7e <__subsf3>
    54c2:	61 30       	cpi	r22, 0x01	; 1
    54c4:	71 05       	cpc	r23, r1
    54c6:	a0 e8       	ldi	r26, 0x80	; 128
    54c8:	8a 07       	cpc	r24, r26
    54ca:	b9 46       	sbci	r27, 0x69	; 105
    54cc:	30 f4       	brcc	.+12     	; 0x54da <modf+0x5a>
    54ce:	9b 01       	movw	r18, r22
    54d0:	ac 01       	movw	r20, r24
    54d2:	66 27       	eor	r22, r22
    54d4:	77 27       	eor	r23, r23
    54d6:	88 27       	eor	r24, r24
    54d8:	90 78       	andi	r25, 0x80	; 128
    54da:	30 96       	adiw	r30, 0x00	; 0
    54dc:	21 f0       	breq	.+8      	; 0x54e6 <modf+0x66>
    54de:	20 83       	st	Z, r18
    54e0:	31 83       	std	Z+1, r19	; 0x01
    54e2:	42 83       	std	Z+2, r20	; 0x02
    54e4:	53 83       	std	Z+3, r21	; 0x03
    54e6:	08 95       	ret

000054e8 <__fp_mpack>:
    54e8:	9f 3f       	cpi	r25, 0xFF	; 255
    54ea:	31 f0       	breq	.+12     	; 0x54f8 <__fp_mpack_finite+0xc>

000054ec <__fp_mpack_finite>:
    54ec:	91 50       	subi	r25, 0x01	; 1
    54ee:	20 f4       	brcc	.+8      	; 0x54f8 <__fp_mpack_finite+0xc>
    54f0:	87 95       	ror	r24
    54f2:	77 95       	ror	r23
    54f4:	67 95       	ror	r22
    54f6:	b7 95       	ror	r27
    54f8:	88 0f       	add	r24, r24
    54fa:	91 1d       	adc	r25, r1
    54fc:	96 95       	lsr	r25
    54fe:	87 95       	ror	r24
    5500:	97 f9       	bld	r25, 7
    5502:	08 95       	ret

00005504 <__tablejump2__>:
    5504:	ee 0f       	add	r30, r30
    5506:	ff 1f       	adc	r31, r31
    5508:	05 90       	lpm	r0, Z+
    550a:	f4 91       	lpm	r31, Z
    550c:	e0 2d       	mov	r30, r0
    550e:	09 94       	ijmp

00005510 <memcpy_P>:
    5510:	fb 01       	movw	r30, r22
    5512:	dc 01       	movw	r26, r24
    5514:	02 c0       	rjmp	.+4      	; 0x551a <memcpy_P+0xa>
    5516:	05 90       	lpm	r0, Z+
    5518:	0d 92       	st	X+, r0
    551a:	41 50       	subi	r20, 0x01	; 1
    551c:	50 40       	sbci	r21, 0x00	; 0
    551e:	d8 f7       	brcc	.-10     	; 0x5516 <memcpy_P+0x6>
    5520:	08 95       	ret

00005522 <sprintf>:
    5522:	ae e0       	ldi	r26, 0x0E	; 14
    5524:	b0 e0       	ldi	r27, 0x00	; 0
    5526:	e7 e9       	ldi	r30, 0x97	; 151
    5528:	fa e2       	ldi	r31, 0x2A	; 42
    552a:	0c 94 40 2d 	jmp	0x5a80	; 0x5a80 <__prologue_saves__+0x1c>
    552e:	0d 89       	ldd	r16, Y+21	; 0x15
    5530:	1e 89       	ldd	r17, Y+22	; 0x16
    5532:	86 e0       	ldi	r24, 0x06	; 6
    5534:	8c 83       	std	Y+4, r24	; 0x04
    5536:	1a 83       	std	Y+2, r17	; 0x02
    5538:	09 83       	std	Y+1, r16	; 0x01
    553a:	8f ef       	ldi	r24, 0xFF	; 255
    553c:	9f e7       	ldi	r25, 0x7F	; 127
    553e:	9e 83       	std	Y+6, r25	; 0x06
    5540:	8d 83       	std	Y+5, r24	; 0x05
    5542:	ae 01       	movw	r20, r28
    5544:	47 5e       	subi	r20, 0xE7	; 231
    5546:	5f 4f       	sbci	r21, 0xFF	; 255
    5548:	6f 89       	ldd	r22, Y+23	; 0x17
    554a:	78 8d       	ldd	r23, Y+24	; 0x18
    554c:	ce 01       	movw	r24, r28
    554e:	01 96       	adiw	r24, 0x01	; 1
    5550:	0e 94 b4 2a 	call	0x5568	; 0x5568 <vfprintf>
    5554:	2f 81       	ldd	r18, Y+7	; 0x07
    5556:	38 85       	ldd	r19, Y+8	; 0x08
    5558:	f8 01       	movw	r30, r16
    555a:	e2 0f       	add	r30, r18
    555c:	f3 1f       	adc	r31, r19
    555e:	10 82       	st	Z, r1
    5560:	2e 96       	adiw	r28, 0x0e	; 14
    5562:	e4 e0       	ldi	r30, 0x04	; 4
    5564:	0c 94 5c 2d 	jmp	0x5ab8	; 0x5ab8 <__epilogue_restores__+0x1c>

00005568 <vfprintf>:
    5568:	ac e0       	ldi	r26, 0x0C	; 12
    556a:	b0 e0       	ldi	r27, 0x00	; 0
    556c:	ea eb       	ldi	r30, 0xBA	; 186
    556e:	fa e2       	ldi	r31, 0x2A	; 42
    5570:	0c 94 32 2d 	jmp	0x5a64	; 0x5a64 <__prologue_saves__>
    5574:	7c 01       	movw	r14, r24
    5576:	6b 01       	movw	r12, r22
    5578:	8a 01       	movw	r16, r20
    557a:	fc 01       	movw	r30, r24
    557c:	17 82       	std	Z+7, r1	; 0x07
    557e:	16 82       	std	Z+6, r1	; 0x06
    5580:	83 81       	ldd	r24, Z+3	; 0x03
    5582:	81 ff       	sbrs	r24, 1
    5584:	bd c1       	rjmp	.+890    	; 0x5900 <vfprintf+0x398>
    5586:	ce 01       	movw	r24, r28
    5588:	01 96       	adiw	r24, 0x01	; 1
    558a:	4c 01       	movw	r8, r24
    558c:	f7 01       	movw	r30, r14
    558e:	93 81       	ldd	r25, Z+3	; 0x03
    5590:	f6 01       	movw	r30, r12
    5592:	93 fd       	sbrc	r25, 3
    5594:	85 91       	lpm	r24, Z+
    5596:	93 ff       	sbrs	r25, 3
    5598:	81 91       	ld	r24, Z+
    559a:	6f 01       	movw	r12, r30
    559c:	88 23       	and	r24, r24
    559e:	09 f4       	brne	.+2      	; 0x55a2 <vfprintf+0x3a>
    55a0:	ab c1       	rjmp	.+854    	; 0x58f8 <vfprintf+0x390>
    55a2:	85 32       	cpi	r24, 0x25	; 37
    55a4:	39 f4       	brne	.+14     	; 0x55b4 <vfprintf+0x4c>
    55a6:	93 fd       	sbrc	r25, 3
    55a8:	85 91       	lpm	r24, Z+
    55aa:	93 ff       	sbrs	r25, 3
    55ac:	81 91       	ld	r24, Z+
    55ae:	6f 01       	movw	r12, r30
    55b0:	85 32       	cpi	r24, 0x25	; 37
    55b2:	29 f4       	brne	.+10     	; 0x55be <vfprintf+0x56>
    55b4:	b7 01       	movw	r22, r14
    55b6:	90 e0       	ldi	r25, 0x00	; 0
    55b8:	0e 94 9c 2c 	call	0x5938	; 0x5938 <fputc>
    55bc:	e7 cf       	rjmp	.-50     	; 0x558c <vfprintf+0x24>
    55be:	51 2c       	mov	r5, r1
    55c0:	31 2c       	mov	r3, r1
    55c2:	20 e0       	ldi	r18, 0x00	; 0
    55c4:	20 32       	cpi	r18, 0x20	; 32
    55c6:	a0 f4       	brcc	.+40     	; 0x55f0 <vfprintf+0x88>
    55c8:	8b 32       	cpi	r24, 0x2B	; 43
    55ca:	69 f0       	breq	.+26     	; 0x55e6 <vfprintf+0x7e>
    55cc:	30 f4       	brcc	.+12     	; 0x55da <vfprintf+0x72>
    55ce:	80 32       	cpi	r24, 0x20	; 32
    55d0:	59 f0       	breq	.+22     	; 0x55e8 <vfprintf+0x80>
    55d2:	83 32       	cpi	r24, 0x23	; 35
    55d4:	69 f4       	brne	.+26     	; 0x55f0 <vfprintf+0x88>
    55d6:	20 61       	ori	r18, 0x10	; 16
    55d8:	2c c0       	rjmp	.+88     	; 0x5632 <vfprintf+0xca>
    55da:	8d 32       	cpi	r24, 0x2D	; 45
    55dc:	39 f0       	breq	.+14     	; 0x55ec <vfprintf+0x84>
    55de:	80 33       	cpi	r24, 0x30	; 48
    55e0:	39 f4       	brne	.+14     	; 0x55f0 <vfprintf+0x88>
    55e2:	21 60       	ori	r18, 0x01	; 1
    55e4:	26 c0       	rjmp	.+76     	; 0x5632 <vfprintf+0xca>
    55e6:	22 60       	ori	r18, 0x02	; 2
    55e8:	24 60       	ori	r18, 0x04	; 4
    55ea:	23 c0       	rjmp	.+70     	; 0x5632 <vfprintf+0xca>
    55ec:	28 60       	ori	r18, 0x08	; 8
    55ee:	21 c0       	rjmp	.+66     	; 0x5632 <vfprintf+0xca>
    55f0:	27 fd       	sbrc	r18, 7
    55f2:	27 c0       	rjmp	.+78     	; 0x5642 <vfprintf+0xda>
    55f4:	30 ed       	ldi	r19, 0xD0	; 208
    55f6:	38 0f       	add	r19, r24
    55f8:	3a 30       	cpi	r19, 0x0A	; 10
    55fa:	78 f4       	brcc	.+30     	; 0x561a <vfprintf+0xb2>
    55fc:	26 ff       	sbrs	r18, 6
    55fe:	06 c0       	rjmp	.+12     	; 0x560c <vfprintf+0xa4>
    5600:	fa e0       	ldi	r31, 0x0A	; 10
    5602:	5f 9e       	mul	r5, r31
    5604:	30 0d       	add	r19, r0
    5606:	11 24       	eor	r1, r1
    5608:	53 2e       	mov	r5, r19
    560a:	13 c0       	rjmp	.+38     	; 0x5632 <vfprintf+0xca>
    560c:	8a e0       	ldi	r24, 0x0A	; 10
    560e:	38 9e       	mul	r3, r24
    5610:	30 0d       	add	r19, r0
    5612:	11 24       	eor	r1, r1
    5614:	33 2e       	mov	r3, r19
    5616:	20 62       	ori	r18, 0x20	; 32
    5618:	0c c0       	rjmp	.+24     	; 0x5632 <vfprintf+0xca>
    561a:	8e 32       	cpi	r24, 0x2E	; 46
    561c:	21 f4       	brne	.+8      	; 0x5626 <vfprintf+0xbe>
    561e:	26 fd       	sbrc	r18, 6
    5620:	6b c1       	rjmp	.+726    	; 0x58f8 <vfprintf+0x390>
    5622:	20 64       	ori	r18, 0x40	; 64
    5624:	06 c0       	rjmp	.+12     	; 0x5632 <vfprintf+0xca>
    5626:	8c 36       	cpi	r24, 0x6C	; 108
    5628:	11 f4       	brne	.+4      	; 0x562e <vfprintf+0xc6>
    562a:	20 68       	ori	r18, 0x80	; 128
    562c:	02 c0       	rjmp	.+4      	; 0x5632 <vfprintf+0xca>
    562e:	88 36       	cpi	r24, 0x68	; 104
    5630:	41 f4       	brne	.+16     	; 0x5642 <vfprintf+0xda>
    5632:	f6 01       	movw	r30, r12
    5634:	93 fd       	sbrc	r25, 3
    5636:	85 91       	lpm	r24, Z+
    5638:	93 ff       	sbrs	r25, 3
    563a:	81 91       	ld	r24, Z+
    563c:	6f 01       	movw	r12, r30
    563e:	81 11       	cpse	r24, r1
    5640:	c1 cf       	rjmp	.-126    	; 0x55c4 <vfprintf+0x5c>
    5642:	98 2f       	mov	r25, r24
    5644:	9f 7d       	andi	r25, 0xDF	; 223
    5646:	95 54       	subi	r25, 0x45	; 69
    5648:	93 30       	cpi	r25, 0x03	; 3
    564a:	28 f4       	brcc	.+10     	; 0x5656 <vfprintf+0xee>
    564c:	0c 5f       	subi	r16, 0xFC	; 252
    564e:	1f 4f       	sbci	r17, 0xFF	; 255
    5650:	ff e3       	ldi	r31, 0x3F	; 63
    5652:	f9 83       	std	Y+1, r31	; 0x01
    5654:	0d c0       	rjmp	.+26     	; 0x5670 <vfprintf+0x108>
    5656:	83 36       	cpi	r24, 0x63	; 99
    5658:	31 f0       	breq	.+12     	; 0x5666 <vfprintf+0xfe>
    565a:	83 37       	cpi	r24, 0x73	; 115
    565c:	71 f0       	breq	.+28     	; 0x567a <vfprintf+0x112>
    565e:	83 35       	cpi	r24, 0x53	; 83
    5660:	09 f0       	breq	.+2      	; 0x5664 <vfprintf+0xfc>
    5662:	5b c0       	rjmp	.+182    	; 0x571a <vfprintf+0x1b2>
    5664:	22 c0       	rjmp	.+68     	; 0x56aa <vfprintf+0x142>
    5666:	f8 01       	movw	r30, r16
    5668:	80 81       	ld	r24, Z
    566a:	89 83       	std	Y+1, r24	; 0x01
    566c:	0e 5f       	subi	r16, 0xFE	; 254
    566e:	1f 4f       	sbci	r17, 0xFF	; 255
    5670:	44 24       	eor	r4, r4
    5672:	43 94       	inc	r4
    5674:	51 2c       	mov	r5, r1
    5676:	54 01       	movw	r10, r8
    5678:	15 c0       	rjmp	.+42     	; 0x56a4 <vfprintf+0x13c>
    567a:	38 01       	movw	r6, r16
    567c:	f2 e0       	ldi	r31, 0x02	; 2
    567e:	6f 0e       	add	r6, r31
    5680:	71 1c       	adc	r7, r1
    5682:	f8 01       	movw	r30, r16
    5684:	a0 80       	ld	r10, Z
    5686:	b1 80       	ldd	r11, Z+1	; 0x01
    5688:	26 ff       	sbrs	r18, 6
    568a:	03 c0       	rjmp	.+6      	; 0x5692 <vfprintf+0x12a>
    568c:	65 2d       	mov	r22, r5
    568e:	70 e0       	ldi	r23, 0x00	; 0
    5690:	02 c0       	rjmp	.+4      	; 0x5696 <vfprintf+0x12e>
    5692:	6f ef       	ldi	r22, 0xFF	; 255
    5694:	7f ef       	ldi	r23, 0xFF	; 255
    5696:	c5 01       	movw	r24, r10
    5698:	2c 87       	std	Y+12, r18	; 0x0c
    569a:	0e 94 91 2c 	call	0x5922	; 0x5922 <strnlen>
    569e:	2c 01       	movw	r4, r24
    56a0:	83 01       	movw	r16, r6
    56a2:	2c 85       	ldd	r18, Y+12	; 0x0c
    56a4:	2f 77       	andi	r18, 0x7F	; 127
    56a6:	22 2e       	mov	r2, r18
    56a8:	17 c0       	rjmp	.+46     	; 0x56d8 <vfprintf+0x170>
    56aa:	38 01       	movw	r6, r16
    56ac:	f2 e0       	ldi	r31, 0x02	; 2
    56ae:	6f 0e       	add	r6, r31
    56b0:	71 1c       	adc	r7, r1
    56b2:	f8 01       	movw	r30, r16
    56b4:	a0 80       	ld	r10, Z
    56b6:	b1 80       	ldd	r11, Z+1	; 0x01
    56b8:	26 ff       	sbrs	r18, 6
    56ba:	03 c0       	rjmp	.+6      	; 0x56c2 <vfprintf+0x15a>
    56bc:	65 2d       	mov	r22, r5
    56be:	70 e0       	ldi	r23, 0x00	; 0
    56c0:	02 c0       	rjmp	.+4      	; 0x56c6 <vfprintf+0x15e>
    56c2:	6f ef       	ldi	r22, 0xFF	; 255
    56c4:	7f ef       	ldi	r23, 0xFF	; 255
    56c6:	c5 01       	movw	r24, r10
    56c8:	2c 87       	std	Y+12, r18	; 0x0c
    56ca:	0e 94 86 2c 	call	0x590c	; 0x590c <strnlen_P>
    56ce:	2c 01       	movw	r4, r24
    56d0:	2c 85       	ldd	r18, Y+12	; 0x0c
    56d2:	20 68       	ori	r18, 0x80	; 128
    56d4:	22 2e       	mov	r2, r18
    56d6:	83 01       	movw	r16, r6
    56d8:	23 fc       	sbrc	r2, 3
    56da:	1b c0       	rjmp	.+54     	; 0x5712 <vfprintf+0x1aa>
    56dc:	83 2d       	mov	r24, r3
    56de:	90 e0       	ldi	r25, 0x00	; 0
    56e0:	48 16       	cp	r4, r24
    56e2:	59 06       	cpc	r5, r25
    56e4:	b0 f4       	brcc	.+44     	; 0x5712 <vfprintf+0x1aa>
    56e6:	b7 01       	movw	r22, r14
    56e8:	80 e2       	ldi	r24, 0x20	; 32
    56ea:	90 e0       	ldi	r25, 0x00	; 0
    56ec:	0e 94 9c 2c 	call	0x5938	; 0x5938 <fputc>
    56f0:	3a 94       	dec	r3
    56f2:	f4 cf       	rjmp	.-24     	; 0x56dc <vfprintf+0x174>
    56f4:	f5 01       	movw	r30, r10
    56f6:	27 fc       	sbrc	r2, 7
    56f8:	85 91       	lpm	r24, Z+
    56fa:	27 fe       	sbrs	r2, 7
    56fc:	81 91       	ld	r24, Z+
    56fe:	5f 01       	movw	r10, r30
    5700:	b7 01       	movw	r22, r14
    5702:	90 e0       	ldi	r25, 0x00	; 0
    5704:	0e 94 9c 2c 	call	0x5938	; 0x5938 <fputc>
    5708:	31 10       	cpse	r3, r1
    570a:	3a 94       	dec	r3
    570c:	f1 e0       	ldi	r31, 0x01	; 1
    570e:	4f 1a       	sub	r4, r31
    5710:	51 08       	sbc	r5, r1
    5712:	41 14       	cp	r4, r1
    5714:	51 04       	cpc	r5, r1
    5716:	71 f7       	brne	.-36     	; 0x56f4 <vfprintf+0x18c>
    5718:	e5 c0       	rjmp	.+458    	; 0x58e4 <vfprintf+0x37c>
    571a:	84 36       	cpi	r24, 0x64	; 100
    571c:	11 f0       	breq	.+4      	; 0x5722 <vfprintf+0x1ba>
    571e:	89 36       	cpi	r24, 0x69	; 105
    5720:	39 f5       	brne	.+78     	; 0x5770 <vfprintf+0x208>
    5722:	f8 01       	movw	r30, r16
    5724:	27 ff       	sbrs	r18, 7
    5726:	07 c0       	rjmp	.+14     	; 0x5736 <vfprintf+0x1ce>
    5728:	60 81       	ld	r22, Z
    572a:	71 81       	ldd	r23, Z+1	; 0x01
    572c:	82 81       	ldd	r24, Z+2	; 0x02
    572e:	93 81       	ldd	r25, Z+3	; 0x03
    5730:	0c 5f       	subi	r16, 0xFC	; 252
    5732:	1f 4f       	sbci	r17, 0xFF	; 255
    5734:	08 c0       	rjmp	.+16     	; 0x5746 <vfprintf+0x1de>
    5736:	60 81       	ld	r22, Z
    5738:	71 81       	ldd	r23, Z+1	; 0x01
    573a:	07 2e       	mov	r0, r23
    573c:	00 0c       	add	r0, r0
    573e:	88 0b       	sbc	r24, r24
    5740:	99 0b       	sbc	r25, r25
    5742:	0e 5f       	subi	r16, 0xFE	; 254
    5744:	1f 4f       	sbci	r17, 0xFF	; 255
    5746:	2f 76       	andi	r18, 0x6F	; 111
    5748:	72 2e       	mov	r7, r18
    574a:	97 ff       	sbrs	r25, 7
    574c:	09 c0       	rjmp	.+18     	; 0x5760 <vfprintf+0x1f8>
    574e:	90 95       	com	r25
    5750:	80 95       	com	r24
    5752:	70 95       	com	r23
    5754:	61 95       	neg	r22
    5756:	7f 4f       	sbci	r23, 0xFF	; 255
    5758:	8f 4f       	sbci	r24, 0xFF	; 255
    575a:	9f 4f       	sbci	r25, 0xFF	; 255
    575c:	20 68       	ori	r18, 0x80	; 128
    575e:	72 2e       	mov	r7, r18
    5760:	2a e0       	ldi	r18, 0x0A	; 10
    5762:	30 e0       	ldi	r19, 0x00	; 0
    5764:	a4 01       	movw	r20, r8
    5766:	0e 94 d4 2c 	call	0x59a8	; 0x59a8 <__ultoa_invert>
    576a:	a8 2e       	mov	r10, r24
    576c:	a8 18       	sub	r10, r8
    576e:	44 c0       	rjmp	.+136    	; 0x57f8 <vfprintf+0x290>
    5770:	85 37       	cpi	r24, 0x75	; 117
    5772:	29 f4       	brne	.+10     	; 0x577e <vfprintf+0x216>
    5774:	2f 7e       	andi	r18, 0xEF	; 239
    5776:	b2 2e       	mov	r11, r18
    5778:	2a e0       	ldi	r18, 0x0A	; 10
    577a:	30 e0       	ldi	r19, 0x00	; 0
    577c:	25 c0       	rjmp	.+74     	; 0x57c8 <vfprintf+0x260>
    577e:	f2 2f       	mov	r31, r18
    5780:	f9 7f       	andi	r31, 0xF9	; 249
    5782:	bf 2e       	mov	r11, r31
    5784:	8f 36       	cpi	r24, 0x6F	; 111
    5786:	c1 f0       	breq	.+48     	; 0x57b8 <vfprintf+0x250>
    5788:	18 f4       	brcc	.+6      	; 0x5790 <vfprintf+0x228>
    578a:	88 35       	cpi	r24, 0x58	; 88
    578c:	79 f0       	breq	.+30     	; 0x57ac <vfprintf+0x244>
    578e:	b4 c0       	rjmp	.+360    	; 0x58f8 <vfprintf+0x390>
    5790:	80 37       	cpi	r24, 0x70	; 112
    5792:	19 f0       	breq	.+6      	; 0x579a <vfprintf+0x232>
    5794:	88 37       	cpi	r24, 0x78	; 120
    5796:	21 f0       	breq	.+8      	; 0x57a0 <vfprintf+0x238>
    5798:	af c0       	rjmp	.+350    	; 0x58f8 <vfprintf+0x390>
    579a:	2f 2f       	mov	r18, r31
    579c:	20 61       	ori	r18, 0x10	; 16
    579e:	b2 2e       	mov	r11, r18
    57a0:	b4 fe       	sbrs	r11, 4
    57a2:	0d c0       	rjmp	.+26     	; 0x57be <vfprintf+0x256>
    57a4:	8b 2d       	mov	r24, r11
    57a6:	84 60       	ori	r24, 0x04	; 4
    57a8:	b8 2e       	mov	r11, r24
    57aa:	09 c0       	rjmp	.+18     	; 0x57be <vfprintf+0x256>
    57ac:	24 ff       	sbrs	r18, 4
    57ae:	0a c0       	rjmp	.+20     	; 0x57c4 <vfprintf+0x25c>
    57b0:	9f 2f       	mov	r25, r31
    57b2:	96 60       	ori	r25, 0x06	; 6
    57b4:	b9 2e       	mov	r11, r25
    57b6:	06 c0       	rjmp	.+12     	; 0x57c4 <vfprintf+0x25c>
    57b8:	28 e0       	ldi	r18, 0x08	; 8
    57ba:	30 e0       	ldi	r19, 0x00	; 0
    57bc:	05 c0       	rjmp	.+10     	; 0x57c8 <vfprintf+0x260>
    57be:	20 e1       	ldi	r18, 0x10	; 16
    57c0:	30 e0       	ldi	r19, 0x00	; 0
    57c2:	02 c0       	rjmp	.+4      	; 0x57c8 <vfprintf+0x260>
    57c4:	20 e1       	ldi	r18, 0x10	; 16
    57c6:	32 e0       	ldi	r19, 0x02	; 2
    57c8:	f8 01       	movw	r30, r16
    57ca:	b7 fe       	sbrs	r11, 7
    57cc:	07 c0       	rjmp	.+14     	; 0x57dc <vfprintf+0x274>
    57ce:	60 81       	ld	r22, Z
    57d0:	71 81       	ldd	r23, Z+1	; 0x01
    57d2:	82 81       	ldd	r24, Z+2	; 0x02
    57d4:	93 81       	ldd	r25, Z+3	; 0x03
    57d6:	0c 5f       	subi	r16, 0xFC	; 252
    57d8:	1f 4f       	sbci	r17, 0xFF	; 255
    57da:	06 c0       	rjmp	.+12     	; 0x57e8 <vfprintf+0x280>
    57dc:	60 81       	ld	r22, Z
    57de:	71 81       	ldd	r23, Z+1	; 0x01
    57e0:	80 e0       	ldi	r24, 0x00	; 0
    57e2:	90 e0       	ldi	r25, 0x00	; 0
    57e4:	0e 5f       	subi	r16, 0xFE	; 254
    57e6:	1f 4f       	sbci	r17, 0xFF	; 255
    57e8:	a4 01       	movw	r20, r8
    57ea:	0e 94 d4 2c 	call	0x59a8	; 0x59a8 <__ultoa_invert>
    57ee:	a8 2e       	mov	r10, r24
    57f0:	a8 18       	sub	r10, r8
    57f2:	fb 2d       	mov	r31, r11
    57f4:	ff 77       	andi	r31, 0x7F	; 127
    57f6:	7f 2e       	mov	r7, r31
    57f8:	76 fe       	sbrs	r7, 6
    57fa:	0b c0       	rjmp	.+22     	; 0x5812 <vfprintf+0x2aa>
    57fc:	37 2d       	mov	r19, r7
    57fe:	3e 7f       	andi	r19, 0xFE	; 254
    5800:	a5 14       	cp	r10, r5
    5802:	50 f4       	brcc	.+20     	; 0x5818 <vfprintf+0x2b0>
    5804:	74 fe       	sbrs	r7, 4
    5806:	0a c0       	rjmp	.+20     	; 0x581c <vfprintf+0x2b4>
    5808:	72 fc       	sbrc	r7, 2
    580a:	08 c0       	rjmp	.+16     	; 0x581c <vfprintf+0x2b4>
    580c:	37 2d       	mov	r19, r7
    580e:	3e 7e       	andi	r19, 0xEE	; 238
    5810:	05 c0       	rjmp	.+10     	; 0x581c <vfprintf+0x2b4>
    5812:	ba 2c       	mov	r11, r10
    5814:	37 2d       	mov	r19, r7
    5816:	03 c0       	rjmp	.+6      	; 0x581e <vfprintf+0x2b6>
    5818:	ba 2c       	mov	r11, r10
    581a:	01 c0       	rjmp	.+2      	; 0x581e <vfprintf+0x2b6>
    581c:	b5 2c       	mov	r11, r5
    581e:	34 ff       	sbrs	r19, 4
    5820:	0d c0       	rjmp	.+26     	; 0x583c <vfprintf+0x2d4>
    5822:	fe 01       	movw	r30, r28
    5824:	ea 0d       	add	r30, r10
    5826:	f1 1d       	adc	r31, r1
    5828:	80 81       	ld	r24, Z
    582a:	80 33       	cpi	r24, 0x30	; 48
    582c:	11 f4       	brne	.+4      	; 0x5832 <vfprintf+0x2ca>
    582e:	39 7e       	andi	r19, 0xE9	; 233
    5830:	09 c0       	rjmp	.+18     	; 0x5844 <vfprintf+0x2dc>
    5832:	32 ff       	sbrs	r19, 2
    5834:	06 c0       	rjmp	.+12     	; 0x5842 <vfprintf+0x2da>
    5836:	b3 94       	inc	r11
    5838:	b3 94       	inc	r11
    583a:	04 c0       	rjmp	.+8      	; 0x5844 <vfprintf+0x2dc>
    583c:	83 2f       	mov	r24, r19
    583e:	86 78       	andi	r24, 0x86	; 134
    5840:	09 f0       	breq	.+2      	; 0x5844 <vfprintf+0x2dc>
    5842:	b3 94       	inc	r11
    5844:	33 fd       	sbrc	r19, 3
    5846:	13 c0       	rjmp	.+38     	; 0x586e <vfprintf+0x306>
    5848:	30 ff       	sbrs	r19, 0
    584a:	06 c0       	rjmp	.+12     	; 0x5858 <vfprintf+0x2f0>
    584c:	5a 2c       	mov	r5, r10
    584e:	b3 14       	cp	r11, r3
    5850:	18 f4       	brcc	.+6      	; 0x5858 <vfprintf+0x2f0>
    5852:	53 0c       	add	r5, r3
    5854:	5b 18       	sub	r5, r11
    5856:	b3 2c       	mov	r11, r3
    5858:	b3 14       	cp	r11, r3
    585a:	68 f4       	brcc	.+26     	; 0x5876 <vfprintf+0x30e>
    585c:	b7 01       	movw	r22, r14
    585e:	80 e2       	ldi	r24, 0x20	; 32
    5860:	90 e0       	ldi	r25, 0x00	; 0
    5862:	3c 87       	std	Y+12, r19	; 0x0c
    5864:	0e 94 9c 2c 	call	0x5938	; 0x5938 <fputc>
    5868:	b3 94       	inc	r11
    586a:	3c 85       	ldd	r19, Y+12	; 0x0c
    586c:	f5 cf       	rjmp	.-22     	; 0x5858 <vfprintf+0x2f0>
    586e:	b3 14       	cp	r11, r3
    5870:	10 f4       	brcc	.+4      	; 0x5876 <vfprintf+0x30e>
    5872:	3b 18       	sub	r3, r11
    5874:	01 c0       	rjmp	.+2      	; 0x5878 <vfprintf+0x310>
    5876:	31 2c       	mov	r3, r1
    5878:	34 ff       	sbrs	r19, 4
    587a:	12 c0       	rjmp	.+36     	; 0x58a0 <vfprintf+0x338>
    587c:	b7 01       	movw	r22, r14
    587e:	80 e3       	ldi	r24, 0x30	; 48
    5880:	90 e0       	ldi	r25, 0x00	; 0
    5882:	3c 87       	std	Y+12, r19	; 0x0c
    5884:	0e 94 9c 2c 	call	0x5938	; 0x5938 <fputc>
    5888:	3c 85       	ldd	r19, Y+12	; 0x0c
    588a:	32 ff       	sbrs	r19, 2
    588c:	17 c0       	rjmp	.+46     	; 0x58bc <vfprintf+0x354>
    588e:	31 fd       	sbrc	r19, 1
    5890:	03 c0       	rjmp	.+6      	; 0x5898 <vfprintf+0x330>
    5892:	88 e7       	ldi	r24, 0x78	; 120
    5894:	90 e0       	ldi	r25, 0x00	; 0
    5896:	02 c0       	rjmp	.+4      	; 0x589c <vfprintf+0x334>
    5898:	88 e5       	ldi	r24, 0x58	; 88
    589a:	90 e0       	ldi	r25, 0x00	; 0
    589c:	b7 01       	movw	r22, r14
    589e:	0c c0       	rjmp	.+24     	; 0x58b8 <vfprintf+0x350>
    58a0:	83 2f       	mov	r24, r19
    58a2:	86 78       	andi	r24, 0x86	; 134
    58a4:	59 f0       	breq	.+22     	; 0x58bc <vfprintf+0x354>
    58a6:	31 ff       	sbrs	r19, 1
    58a8:	02 c0       	rjmp	.+4      	; 0x58ae <vfprintf+0x346>
    58aa:	8b e2       	ldi	r24, 0x2B	; 43
    58ac:	01 c0       	rjmp	.+2      	; 0x58b0 <vfprintf+0x348>
    58ae:	80 e2       	ldi	r24, 0x20	; 32
    58b0:	37 fd       	sbrc	r19, 7
    58b2:	8d e2       	ldi	r24, 0x2D	; 45
    58b4:	b7 01       	movw	r22, r14
    58b6:	90 e0       	ldi	r25, 0x00	; 0
    58b8:	0e 94 9c 2c 	call	0x5938	; 0x5938 <fputc>
    58bc:	a5 14       	cp	r10, r5
    58be:	38 f4       	brcc	.+14     	; 0x58ce <vfprintf+0x366>
    58c0:	b7 01       	movw	r22, r14
    58c2:	80 e3       	ldi	r24, 0x30	; 48
    58c4:	90 e0       	ldi	r25, 0x00	; 0
    58c6:	0e 94 9c 2c 	call	0x5938	; 0x5938 <fputc>
    58ca:	5a 94       	dec	r5
    58cc:	f7 cf       	rjmp	.-18     	; 0x58bc <vfprintf+0x354>
    58ce:	aa 94       	dec	r10
    58d0:	f4 01       	movw	r30, r8
    58d2:	ea 0d       	add	r30, r10
    58d4:	f1 1d       	adc	r31, r1
    58d6:	80 81       	ld	r24, Z
    58d8:	b7 01       	movw	r22, r14
    58da:	90 e0       	ldi	r25, 0x00	; 0
    58dc:	0e 94 9c 2c 	call	0x5938	; 0x5938 <fputc>
    58e0:	a1 10       	cpse	r10, r1
    58e2:	f5 cf       	rjmp	.-22     	; 0x58ce <vfprintf+0x366>
    58e4:	33 20       	and	r3, r3
    58e6:	09 f4       	brne	.+2      	; 0x58ea <vfprintf+0x382>
    58e8:	51 ce       	rjmp	.-862    	; 0x558c <vfprintf+0x24>
    58ea:	b7 01       	movw	r22, r14
    58ec:	80 e2       	ldi	r24, 0x20	; 32
    58ee:	90 e0       	ldi	r25, 0x00	; 0
    58f0:	0e 94 9c 2c 	call	0x5938	; 0x5938 <fputc>
    58f4:	3a 94       	dec	r3
    58f6:	f6 cf       	rjmp	.-20     	; 0x58e4 <vfprintf+0x37c>
    58f8:	f7 01       	movw	r30, r14
    58fa:	86 81       	ldd	r24, Z+6	; 0x06
    58fc:	97 81       	ldd	r25, Z+7	; 0x07
    58fe:	02 c0       	rjmp	.+4      	; 0x5904 <vfprintf+0x39c>
    5900:	8f ef       	ldi	r24, 0xFF	; 255
    5902:	9f ef       	ldi	r25, 0xFF	; 255
    5904:	2c 96       	adiw	r28, 0x0c	; 12
    5906:	e2 e1       	ldi	r30, 0x12	; 18
    5908:	0c 94 4e 2d 	jmp	0x5a9c	; 0x5a9c <__epilogue_restores__>

0000590c <strnlen_P>:
    590c:	fc 01       	movw	r30, r24
    590e:	05 90       	lpm	r0, Z+
    5910:	61 50       	subi	r22, 0x01	; 1
    5912:	70 40       	sbci	r23, 0x00	; 0
    5914:	01 10       	cpse	r0, r1
    5916:	d8 f7       	brcc	.-10     	; 0x590e <strnlen_P+0x2>
    5918:	80 95       	com	r24
    591a:	90 95       	com	r25
    591c:	8e 0f       	add	r24, r30
    591e:	9f 1f       	adc	r25, r31
    5920:	08 95       	ret

00005922 <strnlen>:
    5922:	fc 01       	movw	r30, r24
    5924:	61 50       	subi	r22, 0x01	; 1
    5926:	70 40       	sbci	r23, 0x00	; 0
    5928:	01 90       	ld	r0, Z+
    592a:	01 10       	cpse	r0, r1
    592c:	d8 f7       	brcc	.-10     	; 0x5924 <strnlen+0x2>
    592e:	80 95       	com	r24
    5930:	90 95       	com	r25
    5932:	8e 0f       	add	r24, r30
    5934:	9f 1f       	adc	r25, r31
    5936:	08 95       	ret

00005938 <fputc>:
    5938:	0f 93       	push	r16
    593a:	1f 93       	push	r17
    593c:	cf 93       	push	r28
    593e:	df 93       	push	r29
    5940:	fb 01       	movw	r30, r22
    5942:	23 81       	ldd	r18, Z+3	; 0x03
    5944:	21 fd       	sbrc	r18, 1
    5946:	03 c0       	rjmp	.+6      	; 0x594e <fputc+0x16>
    5948:	8f ef       	ldi	r24, 0xFF	; 255
    594a:	9f ef       	ldi	r25, 0xFF	; 255
    594c:	28 c0       	rjmp	.+80     	; 0x599e <fputc+0x66>
    594e:	22 ff       	sbrs	r18, 2
    5950:	16 c0       	rjmp	.+44     	; 0x597e <fputc+0x46>
    5952:	46 81       	ldd	r20, Z+6	; 0x06
    5954:	57 81       	ldd	r21, Z+7	; 0x07
    5956:	24 81       	ldd	r18, Z+4	; 0x04
    5958:	35 81       	ldd	r19, Z+5	; 0x05
    595a:	42 17       	cp	r20, r18
    595c:	53 07       	cpc	r21, r19
    595e:	44 f4       	brge	.+16     	; 0x5970 <fputc+0x38>
    5960:	a0 81       	ld	r26, Z
    5962:	b1 81       	ldd	r27, Z+1	; 0x01
    5964:	9d 01       	movw	r18, r26
    5966:	2f 5f       	subi	r18, 0xFF	; 255
    5968:	3f 4f       	sbci	r19, 0xFF	; 255
    596a:	31 83       	std	Z+1, r19	; 0x01
    596c:	20 83       	st	Z, r18
    596e:	8c 93       	st	X, r24
    5970:	26 81       	ldd	r18, Z+6	; 0x06
    5972:	37 81       	ldd	r19, Z+7	; 0x07
    5974:	2f 5f       	subi	r18, 0xFF	; 255
    5976:	3f 4f       	sbci	r19, 0xFF	; 255
    5978:	37 83       	std	Z+7, r19	; 0x07
    597a:	26 83       	std	Z+6, r18	; 0x06
    597c:	10 c0       	rjmp	.+32     	; 0x599e <fputc+0x66>
    597e:	eb 01       	movw	r28, r22
    5980:	09 2f       	mov	r16, r25
    5982:	18 2f       	mov	r17, r24
    5984:	00 84       	ldd	r0, Z+8	; 0x08
    5986:	f1 85       	ldd	r31, Z+9	; 0x09
    5988:	e0 2d       	mov	r30, r0
    598a:	09 95       	icall
    598c:	89 2b       	or	r24, r25
    598e:	e1 f6       	brne	.-72     	; 0x5948 <fputc+0x10>
    5990:	8e 81       	ldd	r24, Y+6	; 0x06
    5992:	9f 81       	ldd	r25, Y+7	; 0x07
    5994:	01 96       	adiw	r24, 0x01	; 1
    5996:	9f 83       	std	Y+7, r25	; 0x07
    5998:	8e 83       	std	Y+6, r24	; 0x06
    599a:	81 2f       	mov	r24, r17
    599c:	90 2f       	mov	r25, r16
    599e:	df 91       	pop	r29
    59a0:	cf 91       	pop	r28
    59a2:	1f 91       	pop	r17
    59a4:	0f 91       	pop	r16
    59a6:	08 95       	ret

000059a8 <__ultoa_invert>:
    59a8:	fa 01       	movw	r30, r20
    59aa:	aa 27       	eor	r26, r26
    59ac:	28 30       	cpi	r18, 0x08	; 8
    59ae:	51 f1       	breq	.+84     	; 0x5a04 <__ultoa_invert+0x5c>
    59b0:	20 31       	cpi	r18, 0x10	; 16
    59b2:	81 f1       	breq	.+96     	; 0x5a14 <__ultoa_invert+0x6c>
    59b4:	e8 94       	clt
    59b6:	6f 93       	push	r22
    59b8:	6e 7f       	andi	r22, 0xFE	; 254
    59ba:	6e 5f       	subi	r22, 0xFE	; 254
    59bc:	7f 4f       	sbci	r23, 0xFF	; 255
    59be:	8f 4f       	sbci	r24, 0xFF	; 255
    59c0:	9f 4f       	sbci	r25, 0xFF	; 255
    59c2:	af 4f       	sbci	r26, 0xFF	; 255
    59c4:	b1 e0       	ldi	r27, 0x01	; 1
    59c6:	3e d0       	rcall	.+124    	; 0x5a44 <__ultoa_invert+0x9c>
    59c8:	b4 e0       	ldi	r27, 0x04	; 4
    59ca:	3c d0       	rcall	.+120    	; 0x5a44 <__ultoa_invert+0x9c>
    59cc:	67 0f       	add	r22, r23
    59ce:	78 1f       	adc	r23, r24
    59d0:	89 1f       	adc	r24, r25
    59d2:	9a 1f       	adc	r25, r26
    59d4:	a1 1d       	adc	r26, r1
    59d6:	68 0f       	add	r22, r24
    59d8:	79 1f       	adc	r23, r25
    59da:	8a 1f       	adc	r24, r26
    59dc:	91 1d       	adc	r25, r1
    59de:	a1 1d       	adc	r26, r1
    59e0:	6a 0f       	add	r22, r26
    59e2:	71 1d       	adc	r23, r1
    59e4:	81 1d       	adc	r24, r1
    59e6:	91 1d       	adc	r25, r1
    59e8:	a1 1d       	adc	r26, r1
    59ea:	20 d0       	rcall	.+64     	; 0x5a2c <__ultoa_invert+0x84>
    59ec:	09 f4       	brne	.+2      	; 0x59f0 <__ultoa_invert+0x48>
    59ee:	68 94       	set
    59f0:	3f 91       	pop	r19
    59f2:	2a e0       	ldi	r18, 0x0A	; 10
    59f4:	26 9f       	mul	r18, r22
    59f6:	11 24       	eor	r1, r1
    59f8:	30 19       	sub	r19, r0
    59fa:	30 5d       	subi	r19, 0xD0	; 208
    59fc:	31 93       	st	Z+, r19
    59fe:	de f6       	brtc	.-74     	; 0x59b6 <__ultoa_invert+0xe>
    5a00:	cf 01       	movw	r24, r30
    5a02:	08 95       	ret
    5a04:	46 2f       	mov	r20, r22
    5a06:	47 70       	andi	r20, 0x07	; 7
    5a08:	40 5d       	subi	r20, 0xD0	; 208
    5a0a:	41 93       	st	Z+, r20
    5a0c:	b3 e0       	ldi	r27, 0x03	; 3
    5a0e:	0f d0       	rcall	.+30     	; 0x5a2e <__ultoa_invert+0x86>
    5a10:	c9 f7       	brne	.-14     	; 0x5a04 <__ultoa_invert+0x5c>
    5a12:	f6 cf       	rjmp	.-20     	; 0x5a00 <__ultoa_invert+0x58>
    5a14:	46 2f       	mov	r20, r22
    5a16:	4f 70       	andi	r20, 0x0F	; 15
    5a18:	40 5d       	subi	r20, 0xD0	; 208
    5a1a:	4a 33       	cpi	r20, 0x3A	; 58
    5a1c:	18 f0       	brcs	.+6      	; 0x5a24 <__ultoa_invert+0x7c>
    5a1e:	49 5d       	subi	r20, 0xD9	; 217
    5a20:	31 fd       	sbrc	r19, 1
    5a22:	40 52       	subi	r20, 0x20	; 32
    5a24:	41 93       	st	Z+, r20
    5a26:	02 d0       	rcall	.+4      	; 0x5a2c <__ultoa_invert+0x84>
    5a28:	a9 f7       	brne	.-22     	; 0x5a14 <__ultoa_invert+0x6c>
    5a2a:	ea cf       	rjmp	.-44     	; 0x5a00 <__ultoa_invert+0x58>
    5a2c:	b4 e0       	ldi	r27, 0x04	; 4
    5a2e:	a6 95       	lsr	r26
    5a30:	97 95       	ror	r25
    5a32:	87 95       	ror	r24
    5a34:	77 95       	ror	r23
    5a36:	67 95       	ror	r22
    5a38:	ba 95       	dec	r27
    5a3a:	c9 f7       	brne	.-14     	; 0x5a2e <__ultoa_invert+0x86>
    5a3c:	00 97       	sbiw	r24, 0x00	; 0
    5a3e:	61 05       	cpc	r22, r1
    5a40:	71 05       	cpc	r23, r1
    5a42:	08 95       	ret
    5a44:	9b 01       	movw	r18, r22
    5a46:	ac 01       	movw	r20, r24
    5a48:	0a 2e       	mov	r0, r26
    5a4a:	06 94       	lsr	r0
    5a4c:	57 95       	ror	r21
    5a4e:	47 95       	ror	r20
    5a50:	37 95       	ror	r19
    5a52:	27 95       	ror	r18
    5a54:	ba 95       	dec	r27
    5a56:	c9 f7       	brne	.-14     	; 0x5a4a <__ultoa_invert+0xa2>
    5a58:	62 0f       	add	r22, r18
    5a5a:	73 1f       	adc	r23, r19
    5a5c:	84 1f       	adc	r24, r20
    5a5e:	95 1f       	adc	r25, r21
    5a60:	a0 1d       	adc	r26, r0
    5a62:	08 95       	ret

00005a64 <__prologue_saves__>:
    5a64:	2f 92       	push	r2
    5a66:	3f 92       	push	r3
    5a68:	4f 92       	push	r4
    5a6a:	5f 92       	push	r5
    5a6c:	6f 92       	push	r6
    5a6e:	7f 92       	push	r7
    5a70:	8f 92       	push	r8
    5a72:	9f 92       	push	r9
    5a74:	af 92       	push	r10
    5a76:	bf 92       	push	r11
    5a78:	cf 92       	push	r12
    5a7a:	df 92       	push	r13
    5a7c:	ef 92       	push	r14
    5a7e:	ff 92       	push	r15
    5a80:	0f 93       	push	r16
    5a82:	1f 93       	push	r17
    5a84:	cf 93       	push	r28
    5a86:	df 93       	push	r29
    5a88:	cd b7       	in	r28, 0x3d	; 61
    5a8a:	de b7       	in	r29, 0x3e	; 62
    5a8c:	ca 1b       	sub	r28, r26
    5a8e:	db 0b       	sbc	r29, r27
    5a90:	0f b6       	in	r0, 0x3f	; 63
    5a92:	f8 94       	cli
    5a94:	de bf       	out	0x3e, r29	; 62
    5a96:	0f be       	out	0x3f, r0	; 63
    5a98:	cd bf       	out	0x3d, r28	; 61
    5a9a:	09 94       	ijmp

00005a9c <__epilogue_restores__>:
    5a9c:	2a 88       	ldd	r2, Y+18	; 0x12
    5a9e:	39 88       	ldd	r3, Y+17	; 0x11
    5aa0:	48 88       	ldd	r4, Y+16	; 0x10
    5aa2:	5f 84       	ldd	r5, Y+15	; 0x0f
    5aa4:	6e 84       	ldd	r6, Y+14	; 0x0e
    5aa6:	7d 84       	ldd	r7, Y+13	; 0x0d
    5aa8:	8c 84       	ldd	r8, Y+12	; 0x0c
    5aaa:	9b 84       	ldd	r9, Y+11	; 0x0b
    5aac:	aa 84       	ldd	r10, Y+10	; 0x0a
    5aae:	b9 84       	ldd	r11, Y+9	; 0x09
    5ab0:	c8 84       	ldd	r12, Y+8	; 0x08
    5ab2:	df 80       	ldd	r13, Y+7	; 0x07
    5ab4:	ee 80       	ldd	r14, Y+6	; 0x06
    5ab6:	fd 80       	ldd	r15, Y+5	; 0x05
    5ab8:	0c 81       	ldd	r16, Y+4	; 0x04
    5aba:	1b 81       	ldd	r17, Y+3	; 0x03
    5abc:	aa 81       	ldd	r26, Y+2	; 0x02
    5abe:	b9 81       	ldd	r27, Y+1	; 0x01
    5ac0:	ce 0f       	add	r28, r30
    5ac2:	d1 1d       	adc	r29, r1
    5ac4:	0f b6       	in	r0, 0x3f	; 63
    5ac6:	f8 94       	cli
    5ac8:	de bf       	out	0x3e, r29	; 62
    5aca:	0f be       	out	0x3f, r0	; 63
    5acc:	cd bf       	out	0x3d, r28	; 61
    5ace:	ed 01       	movw	r28, r26
    5ad0:	08 95       	ret

00005ad2 <_exit>:
    5ad2:	f8 94       	cli

00005ad4 <__stop_program>:
    5ad4:	ff cf       	rjmp	.-2      	; 0x5ad4 <__stop_program>
